/*
 * SoulFire
 * Copyright (C) 2024  AlexProgrammerDE
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <https://www.gnu.org/licenses/>.
 */
package net.pistonmaster.soulfire.server.data;

import com.google.gson.JsonObject;
import it.unimi.dsi.fastutil.ints.Int2ReferenceMap;
import it.unimi.dsi.fastutil.ints.Int2ReferenceOpenHashMap;
import it.unimi.dsi.fastutil.objects.Object2ReferenceMap;
import it.unimi.dsi.fastutil.objects.Object2ReferenceOpenHashMap;
import lombok.AccessLevel;
import lombok.With;

@SuppressWarnings("unused")
@With(value = AccessLevel.PRIVATE)
public record BlockType(int id, String name, float destroyTime, float explosionResistance,
                        boolean air, boolean fallingBlock, boolean replaceable,
                        boolean requiresCorrectToolForDrops, boolean fluidSource,
                        OffsetData offsetData, BlockStates statesData) {
    public static final Int2ReferenceMap<BlockType> FROM_ID = new Int2ReferenceOpenHashMap<>();
    public static final Object2ReferenceMap<String, BlockType> FROM_NAME = new Object2ReferenceOpenHashMap<>();

    public static final BlockType AIR = register("air");
    public static final BlockType STONE = register("stone");
    public static final BlockType GRANITE = register("granite");
    public static final BlockType POLISHED_GRANITE = register("polished_granite");
    public static final BlockType DIORITE = register("diorite");
    public static final BlockType POLISHED_DIORITE = register("polished_diorite");
    public static final BlockType ANDESITE = register("andesite");
    public static final BlockType POLISHED_ANDESITE = register("polished_andesite");
    public static final BlockType GRASS_BLOCK = register("grass_block");
    public static final BlockType DIRT = register("dirt");
    public static final BlockType COARSE_DIRT = register("coarse_dirt");
    public static final BlockType PODZOL = register("podzol");
    public static final BlockType COBBLESTONE = register("cobblestone");
    public static final BlockType OAK_PLANKS = register("oak_planks");
    public static final BlockType SPRUCE_PLANKS = register("spruce_planks");
    public static final BlockType BIRCH_PLANKS = register("birch_planks");
    public static final BlockType JUNGLE_PLANKS = register("jungle_planks");
    public static final BlockType ACACIA_PLANKS = register("acacia_planks");
    public static final BlockType CHERRY_PLANKS = register("cherry_planks");
    public static final BlockType DARK_OAK_PLANKS = register("dark_oak_planks");
    public static final BlockType MANGROVE_PLANKS = register("mangrove_planks");
    public static final BlockType BAMBOO_PLANKS = register("bamboo_planks");
    public static final BlockType BAMBOO_MOSAIC = register("bamboo_mosaic");
    public static final BlockType OAK_SAPLING = register("oak_sapling");
    public static final BlockType SPRUCE_SAPLING = register("spruce_sapling");
    public static final BlockType BIRCH_SAPLING = register("birch_sapling");
    public static final BlockType JUNGLE_SAPLING = register("jungle_sapling");
    public static final BlockType ACACIA_SAPLING = register("acacia_sapling");
    public static final BlockType CHERRY_SAPLING = register("cherry_sapling");
    public static final BlockType DARK_OAK_SAPLING = register("dark_oak_sapling");
    public static final BlockType MANGROVE_PROPAGULE = register("mangrove_propagule");
    public static final BlockType BEDROCK = register("bedrock");
    public static final BlockType WATER = register("water");
    public static final BlockType LAVA = register("lava");
    public static final BlockType SAND = register("sand");
    public static final BlockType SUSPICIOUS_SAND = register("suspicious_sand");
    public static final BlockType RED_SAND = register("red_sand");
    public static final BlockType GRAVEL = register("gravel");
    public static final BlockType SUSPICIOUS_GRAVEL = register("suspicious_gravel");
    public static final BlockType GOLD_ORE = register("gold_ore");
    public static final BlockType DEEPSLATE_GOLD_ORE = register("deepslate_gold_ore");
    public static final BlockType IRON_ORE = register("iron_ore");
    public static final BlockType DEEPSLATE_IRON_ORE = register("deepslate_iron_ore");
    public static final BlockType COAL_ORE = register("coal_ore");
    public static final BlockType DEEPSLATE_COAL_ORE = register("deepslate_coal_ore");
    public static final BlockType NETHER_GOLD_ORE = register("nether_gold_ore");
    public static final BlockType OAK_LOG = register("oak_log");
    public static final BlockType SPRUCE_LOG = register("spruce_log");
    public static final BlockType BIRCH_LOG = register("birch_log");
    public static final BlockType JUNGLE_LOG = register("jungle_log");
    public static final BlockType ACACIA_LOG = register("acacia_log");
    public static final BlockType CHERRY_LOG = register("cherry_log");
    public static final BlockType DARK_OAK_LOG = register("dark_oak_log");
    public static final BlockType MANGROVE_LOG = register("mangrove_log");
    public static final BlockType MANGROVE_ROOTS = register("mangrove_roots");
    public static final BlockType MUDDY_MANGROVE_ROOTS = register("muddy_mangrove_roots");
    public static final BlockType BAMBOO_BLOCK = register("bamboo_block");
    public static final BlockType STRIPPED_SPRUCE_LOG = register("stripped_spruce_log");
    public static final BlockType STRIPPED_BIRCH_LOG = register("stripped_birch_log");
    public static final BlockType STRIPPED_JUNGLE_LOG = register("stripped_jungle_log");
    public static final BlockType STRIPPED_ACACIA_LOG = register("stripped_acacia_log");
    public static final BlockType STRIPPED_CHERRY_LOG = register("stripped_cherry_log");
    public static final BlockType STRIPPED_DARK_OAK_LOG = register("stripped_dark_oak_log");
    public static final BlockType STRIPPED_OAK_LOG = register("stripped_oak_log");
    public static final BlockType STRIPPED_MANGROVE_LOG = register("stripped_mangrove_log");
    public static final BlockType STRIPPED_BAMBOO_BLOCK = register("stripped_bamboo_block");
    public static final BlockType OAK_WOOD = register("oak_wood");
    public static final BlockType SPRUCE_WOOD = register("spruce_wood");
    public static final BlockType BIRCH_WOOD = register("birch_wood");
    public static final BlockType JUNGLE_WOOD = register("jungle_wood");
    public static final BlockType ACACIA_WOOD = register("acacia_wood");
    public static final BlockType CHERRY_WOOD = register("cherry_wood");
    public static final BlockType DARK_OAK_WOOD = register("dark_oak_wood");
    public static final BlockType MANGROVE_WOOD = register("mangrove_wood");
    public static final BlockType STRIPPED_OAK_WOOD = register("stripped_oak_wood");
    public static final BlockType STRIPPED_SPRUCE_WOOD = register("stripped_spruce_wood");
    public static final BlockType STRIPPED_BIRCH_WOOD = register("stripped_birch_wood");
    public static final BlockType STRIPPED_JUNGLE_WOOD = register("stripped_jungle_wood");
    public static final BlockType STRIPPED_ACACIA_WOOD = register("stripped_acacia_wood");
    public static final BlockType STRIPPED_CHERRY_WOOD = register("stripped_cherry_wood");
    public static final BlockType STRIPPED_DARK_OAK_WOOD = register("stripped_dark_oak_wood");
    public static final BlockType STRIPPED_MANGROVE_WOOD = register("stripped_mangrove_wood");
    public static final BlockType OAK_LEAVES = register("oak_leaves");
    public static final BlockType SPRUCE_LEAVES = register("spruce_leaves");
    public static final BlockType BIRCH_LEAVES = register("birch_leaves");
    public static final BlockType JUNGLE_LEAVES = register("jungle_leaves");
    public static final BlockType ACACIA_LEAVES = register("acacia_leaves");
    public static final BlockType CHERRY_LEAVES = register("cherry_leaves");
    public static final BlockType DARK_OAK_LEAVES = register("dark_oak_leaves");
    public static final BlockType MANGROVE_LEAVES = register("mangrove_leaves");
    public static final BlockType AZALEA_LEAVES = register("azalea_leaves");
    public static final BlockType FLOWERING_AZALEA_LEAVES = register("flowering_azalea_leaves");
    public static final BlockType SPONGE = register("sponge");
    public static final BlockType WET_SPONGE = register("wet_sponge");
    public static final BlockType GLASS = register("glass");
    public static final BlockType LAPIS_ORE = register("lapis_ore");
    public static final BlockType DEEPSLATE_LAPIS_ORE = register("deepslate_lapis_ore");
    public static final BlockType LAPIS_BLOCK = register("lapis_block");
    public static final BlockType DISPENSER = register("dispenser");
    public static final BlockType SANDSTONE = register("sandstone");
    public static final BlockType CHISELED_SANDSTONE = register("chiseled_sandstone");
    public static final BlockType CUT_SANDSTONE = register("cut_sandstone");
    public static final BlockType NOTE_BLOCK = register("note_block");
    public static final BlockType WHITE_BED = register("white_bed");
    public static final BlockType ORANGE_BED = register("orange_bed");
    public static final BlockType MAGENTA_BED = register("magenta_bed");
    public static final BlockType LIGHT_BLUE_BED = register("light_blue_bed");
    public static final BlockType YELLOW_BED = register("yellow_bed");
    public static final BlockType LIME_BED = register("lime_bed");
    public static final BlockType PINK_BED = register("pink_bed");
    public static final BlockType GRAY_BED = register("gray_bed");
    public static final BlockType LIGHT_GRAY_BED = register("light_gray_bed");
    public static final BlockType CYAN_BED = register("cyan_bed");
    public static final BlockType PURPLE_BED = register("purple_bed");
    public static final BlockType BLUE_BED = register("blue_bed");
    public static final BlockType BROWN_BED = register("brown_bed");
    public static final BlockType GREEN_BED = register("green_bed");
    public static final BlockType RED_BED = register("red_bed");
    public static final BlockType BLACK_BED = register("black_bed");
    public static final BlockType POWERED_RAIL = register("powered_rail");
    public static final BlockType DETECTOR_RAIL = register("detector_rail");
    public static final BlockType STICKY_PISTON = register("sticky_piston");
    public static final BlockType COBWEB = register("cobweb");
    public static final BlockType SHORT_GRASS = register("short_grass");
    public static final BlockType FERN = register("fern");
    public static final BlockType DEAD_BUSH = register("dead_bush");
    public static final BlockType SEAGRASS = register("seagrass");
    public static final BlockType TALL_SEAGRASS = register("tall_seagrass");
    public static final BlockType PISTON = register("piston");
    public static final BlockType PISTON_HEAD = register("piston_head");
    public static final BlockType WHITE_WOOL = register("white_wool");
    public static final BlockType ORANGE_WOOL = register("orange_wool");
    public static final BlockType MAGENTA_WOOL = register("magenta_wool");
    public static final BlockType LIGHT_BLUE_WOOL = register("light_blue_wool");
    public static final BlockType YELLOW_WOOL = register("yellow_wool");
    public static final BlockType LIME_WOOL = register("lime_wool");
    public static final BlockType PINK_WOOL = register("pink_wool");
    public static final BlockType GRAY_WOOL = register("gray_wool");
    public static final BlockType LIGHT_GRAY_WOOL = register("light_gray_wool");
    public static final BlockType CYAN_WOOL = register("cyan_wool");
    public static final BlockType PURPLE_WOOL = register("purple_wool");
    public static final BlockType BLUE_WOOL = register("blue_wool");
    public static final BlockType BROWN_WOOL = register("brown_wool");
    public static final BlockType GREEN_WOOL = register("green_wool");
    public static final BlockType RED_WOOL = register("red_wool");
    public static final BlockType BLACK_WOOL = register("black_wool");
    public static final BlockType MOVING_PISTON = register("moving_piston");
    public static final BlockType DANDELION = register("dandelion");
    public static final BlockType TORCHFLOWER = register("torchflower");
    public static final BlockType POPPY = register("poppy");
    public static final BlockType BLUE_ORCHID = register("blue_orchid");
    public static final BlockType ALLIUM = register("allium");
    public static final BlockType AZURE_BLUET = register("azure_bluet");
    public static final BlockType RED_TULIP = register("red_tulip");
    public static final BlockType ORANGE_TULIP = register("orange_tulip");
    public static final BlockType WHITE_TULIP = register("white_tulip");
    public static final BlockType PINK_TULIP = register("pink_tulip");
    public static final BlockType OXEYE_DAISY = register("oxeye_daisy");
    public static final BlockType CORNFLOWER = register("cornflower");
    public static final BlockType WITHER_ROSE = register("wither_rose");
    public static final BlockType LILY_OF_THE_VALLEY = register("lily_of_the_valley");
    public static final BlockType BROWN_MUSHROOM = register("brown_mushroom");
    public static final BlockType RED_MUSHROOM = register("red_mushroom");
    public static final BlockType GOLD_BLOCK = register("gold_block");
    public static final BlockType IRON_BLOCK = register("iron_block");
    public static final BlockType BRICKS = register("bricks");
    public static final BlockType TNT = register("tnt");
    public static final BlockType BOOKSHELF = register("bookshelf");
    public static final BlockType CHISELED_BOOKSHELF = register("chiseled_bookshelf");
    public static final BlockType MOSSY_COBBLESTONE = register("mossy_cobblestone");
    public static final BlockType OBSIDIAN = register("obsidian");
    public static final BlockType TORCH = register("torch");
    public static final BlockType WALL_TORCH = register("wall_torch");
    public static final BlockType FIRE = register("fire");
    public static final BlockType SOUL_FIRE = register("soul_fire");
    public static final BlockType SPAWNER = register("spawner");
    public static final BlockType OAK_STAIRS = register("oak_stairs");
    public static final BlockType CHEST = register("chest");
    public static final BlockType REDSTONE_WIRE = register("redstone_wire");
    public static final BlockType DIAMOND_ORE = register("diamond_ore");
    public static final BlockType DEEPSLATE_DIAMOND_ORE = register("deepslate_diamond_ore");
    public static final BlockType DIAMOND_BLOCK = register("diamond_block");
    public static final BlockType CRAFTING_TABLE = register("crafting_table");
    public static final BlockType WHEAT = register("wheat");
    public static final BlockType FARMLAND = register("farmland");
    public static final BlockType FURNACE = register("furnace");
    public static final BlockType OAK_SIGN = register("oak_sign");
    public static final BlockType SPRUCE_SIGN = register("spruce_sign");
    public static final BlockType BIRCH_SIGN = register("birch_sign");
    public static final BlockType ACACIA_SIGN = register("acacia_sign");
    public static final BlockType CHERRY_SIGN = register("cherry_sign");
    public static final BlockType JUNGLE_SIGN = register("jungle_sign");
    public static final BlockType DARK_OAK_SIGN = register("dark_oak_sign");
    public static final BlockType MANGROVE_SIGN = register("mangrove_sign");
    public static final BlockType BAMBOO_SIGN = register("bamboo_sign");
    public static final BlockType OAK_DOOR = register("oak_door");
    public static final BlockType LADDER = register("ladder");
    public static final BlockType RAIL = register("rail");
    public static final BlockType COBBLESTONE_STAIRS = register("cobblestone_stairs");
    public static final BlockType OAK_WALL_SIGN = register("oak_wall_sign");
    public static final BlockType SPRUCE_WALL_SIGN = register("spruce_wall_sign");
    public static final BlockType BIRCH_WALL_SIGN = register("birch_wall_sign");
    public static final BlockType ACACIA_WALL_SIGN = register("acacia_wall_sign");
    public static final BlockType CHERRY_WALL_SIGN = register("cherry_wall_sign");
    public static final BlockType JUNGLE_WALL_SIGN = register("jungle_wall_sign");
    public static final BlockType DARK_OAK_WALL_SIGN = register("dark_oak_wall_sign");
    public static final BlockType MANGROVE_WALL_SIGN = register("mangrove_wall_sign");
    public static final BlockType BAMBOO_WALL_SIGN = register("bamboo_wall_sign");
    public static final BlockType OAK_HANGING_SIGN = register("oak_hanging_sign");
    public static final BlockType SPRUCE_HANGING_SIGN = register("spruce_hanging_sign");
    public static final BlockType BIRCH_HANGING_SIGN = register("birch_hanging_sign");
    public static final BlockType ACACIA_HANGING_SIGN = register("acacia_hanging_sign");
    public static final BlockType CHERRY_HANGING_SIGN = register("cherry_hanging_sign");
    public static final BlockType JUNGLE_HANGING_SIGN = register("jungle_hanging_sign");
    public static final BlockType DARK_OAK_HANGING_SIGN = register("dark_oak_hanging_sign");
    public static final BlockType CRIMSON_HANGING_SIGN = register("crimson_hanging_sign");
    public static final BlockType WARPED_HANGING_SIGN = register("warped_hanging_sign");
    public static final BlockType MANGROVE_HANGING_SIGN = register("mangrove_hanging_sign");
    public static final BlockType BAMBOO_HANGING_SIGN = register("bamboo_hanging_sign");
    public static final BlockType OAK_WALL_HANGING_SIGN = register("oak_wall_hanging_sign");
    public static final BlockType SPRUCE_WALL_HANGING_SIGN = register("spruce_wall_hanging_sign");
    public static final BlockType BIRCH_WALL_HANGING_SIGN = register("birch_wall_hanging_sign");
    public static final BlockType ACACIA_WALL_HANGING_SIGN = register("acacia_wall_hanging_sign");
    public static final BlockType CHERRY_WALL_HANGING_SIGN = register("cherry_wall_hanging_sign");
    public static final BlockType JUNGLE_WALL_HANGING_SIGN = register("jungle_wall_hanging_sign");
    public static final BlockType DARK_OAK_WALL_HANGING_SIGN = register("dark_oak_wall_hanging_sign");
    public static final BlockType MANGROVE_WALL_HANGING_SIGN = register("mangrove_wall_hanging_sign");
    public static final BlockType CRIMSON_WALL_HANGING_SIGN = register("crimson_wall_hanging_sign");
    public static final BlockType WARPED_WALL_HANGING_SIGN = register("warped_wall_hanging_sign");
    public static final BlockType BAMBOO_WALL_HANGING_SIGN = register("bamboo_wall_hanging_sign");
    public static final BlockType LEVER = register("lever");
    public static final BlockType STONE_PRESSURE_PLATE = register("stone_pressure_plate");
    public static final BlockType IRON_DOOR = register("iron_door");
    public static final BlockType OAK_PRESSURE_PLATE = register("oak_pressure_plate");
    public static final BlockType SPRUCE_PRESSURE_PLATE = register("spruce_pressure_plate");
    public static final BlockType BIRCH_PRESSURE_PLATE = register("birch_pressure_plate");
    public static final BlockType JUNGLE_PRESSURE_PLATE = register("jungle_pressure_plate");
    public static final BlockType ACACIA_PRESSURE_PLATE = register("acacia_pressure_plate");
    public static final BlockType CHERRY_PRESSURE_PLATE = register("cherry_pressure_plate");
    public static final BlockType DARK_OAK_PRESSURE_PLATE = register("dark_oak_pressure_plate");
    public static final BlockType MANGROVE_PRESSURE_PLATE = register("mangrove_pressure_plate");
    public static final BlockType BAMBOO_PRESSURE_PLATE = register("bamboo_pressure_plate");
    public static final BlockType REDSTONE_ORE = register("redstone_ore");
    public static final BlockType DEEPSLATE_REDSTONE_ORE = register("deepslate_redstone_ore");
    public static final BlockType REDSTONE_TORCH = register("redstone_torch");
    public static final BlockType REDSTONE_WALL_TORCH = register("redstone_wall_torch");
    public static final BlockType STONE_BUTTON = register("stone_button");
    public static final BlockType SNOW = register("snow");
    public static final BlockType ICE = register("ice");
    public static final BlockType SNOW_BLOCK = register("snow_block");
    public static final BlockType CACTUS = register("cactus");
    public static final BlockType CLAY = register("clay");
    public static final BlockType SUGAR_CANE = register("sugar_cane");
    public static final BlockType JUKEBOX = register("jukebox");
    public static final BlockType OAK_FENCE = register("oak_fence");
    public static final BlockType NETHERRACK = register("netherrack");
    public static final BlockType SOUL_SAND = register("soul_sand");
    public static final BlockType SOUL_SOIL = register("soul_soil");
    public static final BlockType BASALT = register("basalt");
    public static final BlockType POLISHED_BASALT = register("polished_basalt");
    public static final BlockType SOUL_TORCH = register("soul_torch");
    public static final BlockType SOUL_WALL_TORCH = register("soul_wall_torch");
    public static final BlockType GLOWSTONE = register("glowstone");
    public static final BlockType NETHER_PORTAL = register("nether_portal");
    public static final BlockType CARVED_PUMPKIN = register("carved_pumpkin");
    public static final BlockType JACK_O_LANTERN = register("jack_o_lantern");
    public static final BlockType CAKE = register("cake");
    public static final BlockType REPEATER = register("repeater");
    public static final BlockType WHITE_STAINED_GLASS = register("white_stained_glass");
    public static final BlockType ORANGE_STAINED_GLASS = register("orange_stained_glass");
    public static final BlockType MAGENTA_STAINED_GLASS = register("magenta_stained_glass");
    public static final BlockType LIGHT_BLUE_STAINED_GLASS = register("light_blue_stained_glass");
    public static final BlockType YELLOW_STAINED_GLASS = register("yellow_stained_glass");
    public static final BlockType LIME_STAINED_GLASS = register("lime_stained_glass");
    public static final BlockType PINK_STAINED_GLASS = register("pink_stained_glass");
    public static final BlockType GRAY_STAINED_GLASS = register("gray_stained_glass");
    public static final BlockType LIGHT_GRAY_STAINED_GLASS = register("light_gray_stained_glass");
    public static final BlockType CYAN_STAINED_GLASS = register("cyan_stained_glass");
    public static final BlockType PURPLE_STAINED_GLASS = register("purple_stained_glass");
    public static final BlockType BLUE_STAINED_GLASS = register("blue_stained_glass");
    public static final BlockType BROWN_STAINED_GLASS = register("brown_stained_glass");
    public static final BlockType GREEN_STAINED_GLASS = register("green_stained_glass");
    public static final BlockType RED_STAINED_GLASS = register("red_stained_glass");
    public static final BlockType BLACK_STAINED_GLASS = register("black_stained_glass");
    public static final BlockType OAK_TRAPDOOR = register("oak_trapdoor");
    public static final BlockType SPRUCE_TRAPDOOR = register("spruce_trapdoor");
    public static final BlockType BIRCH_TRAPDOOR = register("birch_trapdoor");
    public static final BlockType JUNGLE_TRAPDOOR = register("jungle_trapdoor");
    public static final BlockType ACACIA_TRAPDOOR = register("acacia_trapdoor");
    public static final BlockType CHERRY_TRAPDOOR = register("cherry_trapdoor");
    public static final BlockType DARK_OAK_TRAPDOOR = register("dark_oak_trapdoor");
    public static final BlockType MANGROVE_TRAPDOOR = register("mangrove_trapdoor");
    public static final BlockType BAMBOO_TRAPDOOR = register("bamboo_trapdoor");
    public static final BlockType STONE_BRICKS = register("stone_bricks");
    public static final BlockType MOSSY_STONE_BRICKS = register("mossy_stone_bricks");
    public static final BlockType CRACKED_STONE_BRICKS = register("cracked_stone_bricks");
    public static final BlockType CHISELED_STONE_BRICKS = register("chiseled_stone_bricks");
    public static final BlockType PACKED_MUD = register("packed_mud");
    public static final BlockType MUD_BRICKS = register("mud_bricks");
    public static final BlockType INFESTED_STONE = register("infested_stone");
    public static final BlockType INFESTED_COBBLESTONE = register("infested_cobblestone");
    public static final BlockType INFESTED_STONE_BRICKS = register("infested_stone_bricks");
    public static final BlockType INFESTED_MOSSY_STONE_BRICKS = register("infested_mossy_stone_bricks");
    public static final BlockType INFESTED_CRACKED_STONE_BRICKS = register("infested_cracked_stone_bricks");
    public static final BlockType INFESTED_CHISELED_STONE_BRICKS = register("infested_chiseled_stone_bricks");
    public static final BlockType BROWN_MUSHROOM_BLOCK = register("brown_mushroom_block");
    public static final BlockType RED_MUSHROOM_BLOCK = register("red_mushroom_block");
    public static final BlockType MUSHROOM_STEM = register("mushroom_stem");
    public static final BlockType IRON_BARS = register("iron_bars");
    public static final BlockType CHAIN = register("chain");
    public static final BlockType GLASS_PANE = register("glass_pane");
    public static final BlockType PUMPKIN = register("pumpkin");
    public static final BlockType MELON = register("melon");
    public static final BlockType ATTACHED_PUMPKIN_STEM = register("attached_pumpkin_stem");
    public static final BlockType ATTACHED_MELON_STEM = register("attached_melon_stem");
    public static final BlockType PUMPKIN_STEM = register("pumpkin_stem");
    public static final BlockType MELON_STEM = register("melon_stem");
    public static final BlockType VINE = register("vine");
    public static final BlockType GLOW_LICHEN = register("glow_lichen");
    public static final BlockType OAK_FENCE_GATE = register("oak_fence_gate");
    public static final BlockType BRICK_STAIRS = register("brick_stairs");
    public static final BlockType STONE_BRICK_STAIRS = register("stone_brick_stairs");
    public static final BlockType MUD_BRICK_STAIRS = register("mud_brick_stairs");
    public static final BlockType MYCELIUM = register("mycelium");
    public static final BlockType LILY_PAD = register("lily_pad");
    public static final BlockType NETHER_BRICKS = register("nether_bricks");
    public static final BlockType NETHER_BRICK_FENCE = register("nether_brick_fence");
    public static final BlockType NETHER_BRICK_STAIRS = register("nether_brick_stairs");
    public static final BlockType NETHER_WART = register("nether_wart");
    public static final BlockType ENCHANTING_TABLE = register("enchanting_table");
    public static final BlockType BREWING_STAND = register("brewing_stand");
    public static final BlockType CAULDRON = register("cauldron");
    public static final BlockType WATER_CAULDRON = register("water_cauldron");
    public static final BlockType LAVA_CAULDRON = register("lava_cauldron");
    public static final BlockType POWDER_SNOW_CAULDRON = register("powder_snow_cauldron");
    public static final BlockType END_PORTAL = register("end_portal");
    public static final BlockType END_PORTAL_FRAME = register("end_portal_frame");
    public static final BlockType END_STONE = register("end_stone");
    public static final BlockType DRAGON_EGG = register("dragon_egg");
    public static final BlockType REDSTONE_LAMP = register("redstone_lamp");
    public static final BlockType COCOA = register("cocoa");
    public static final BlockType SANDSTONE_STAIRS = register("sandstone_stairs");
    public static final BlockType EMERALD_ORE = register("emerald_ore");
    public static final BlockType DEEPSLATE_EMERALD_ORE = register("deepslate_emerald_ore");
    public static final BlockType ENDER_CHEST = register("ender_chest");
    public static final BlockType TRIPWIRE_HOOK = register("tripwire_hook");
    public static final BlockType TRIPWIRE = register("tripwire");
    public static final BlockType EMERALD_BLOCK = register("emerald_block");
    public static final BlockType SPRUCE_STAIRS = register("spruce_stairs");
    public static final BlockType BIRCH_STAIRS = register("birch_stairs");
    public static final BlockType JUNGLE_STAIRS = register("jungle_stairs");
    public static final BlockType COMMAND_BLOCK = register("command_block");
    public static final BlockType BEACON = register("beacon");
    public static final BlockType COBBLESTONE_WALL = register("cobblestone_wall");
    public static final BlockType MOSSY_COBBLESTONE_WALL = register("mossy_cobblestone_wall");
    public static final BlockType FLOWER_POT = register("flower_pot");
    public static final BlockType POTTED_TORCHFLOWER = register("potted_torchflower");
    public static final BlockType POTTED_OAK_SAPLING = register("potted_oak_sapling");
    public static final BlockType POTTED_SPRUCE_SAPLING = register("potted_spruce_sapling");
    public static final BlockType POTTED_BIRCH_SAPLING = register("potted_birch_sapling");
    public static final BlockType POTTED_JUNGLE_SAPLING = register("potted_jungle_sapling");
    public static final BlockType POTTED_ACACIA_SAPLING = register("potted_acacia_sapling");
    public static final BlockType POTTED_CHERRY_SAPLING = register("potted_cherry_sapling");
    public static final BlockType POTTED_DARK_OAK_SAPLING = register("potted_dark_oak_sapling");
    public static final BlockType POTTED_MANGROVE_PROPAGULE = register("potted_mangrove_propagule");
    public static final BlockType POTTED_FERN = register("potted_fern");
    public static final BlockType POTTED_DANDELION = register("potted_dandelion");
    public static final BlockType POTTED_POPPY = register("potted_poppy");
    public static final BlockType POTTED_BLUE_ORCHID = register("potted_blue_orchid");
    public static final BlockType POTTED_ALLIUM = register("potted_allium");
    public static final BlockType POTTED_AZURE_BLUET = register("potted_azure_bluet");
    public static final BlockType POTTED_RED_TULIP = register("potted_red_tulip");
    public static final BlockType POTTED_ORANGE_TULIP = register("potted_orange_tulip");
    public static final BlockType POTTED_WHITE_TULIP = register("potted_white_tulip");
    public static final BlockType POTTED_PINK_TULIP = register("potted_pink_tulip");
    public static final BlockType POTTED_OXEYE_DAISY = register("potted_oxeye_daisy");
    public static final BlockType POTTED_CORNFLOWER = register("potted_cornflower");
    public static final BlockType POTTED_LILY_OF_THE_VALLEY = register("potted_lily_of_the_valley");
    public static final BlockType POTTED_WITHER_ROSE = register("potted_wither_rose");
    public static final BlockType POTTED_RED_MUSHROOM = register("potted_red_mushroom");
    public static final BlockType POTTED_BROWN_MUSHROOM = register("potted_brown_mushroom");
    public static final BlockType POTTED_DEAD_BUSH = register("potted_dead_bush");
    public static final BlockType POTTED_CACTUS = register("potted_cactus");
    public static final BlockType CARROTS = register("carrots");
    public static final BlockType POTATOES = register("potatoes");
    public static final BlockType OAK_BUTTON = register("oak_button");
    public static final BlockType SPRUCE_BUTTON = register("spruce_button");
    public static final BlockType BIRCH_BUTTON = register("birch_button");
    public static final BlockType JUNGLE_BUTTON = register("jungle_button");
    public static final BlockType ACACIA_BUTTON = register("acacia_button");
    public static final BlockType CHERRY_BUTTON = register("cherry_button");
    public static final BlockType DARK_OAK_BUTTON = register("dark_oak_button");
    public static final BlockType MANGROVE_BUTTON = register("mangrove_button");
    public static final BlockType BAMBOO_BUTTON = register("bamboo_button");
    public static final BlockType SKELETON_SKULL = register("skeleton_skull");
    public static final BlockType SKELETON_WALL_SKULL = register("skeleton_wall_skull");
    public static final BlockType WITHER_SKELETON_SKULL = register("wither_skeleton_skull");
    public static final BlockType WITHER_SKELETON_WALL_SKULL = register("wither_skeleton_wall_skull");
    public static final BlockType ZOMBIE_HEAD = register("zombie_head");
    public static final BlockType ZOMBIE_WALL_HEAD = register("zombie_wall_head");
    public static final BlockType PLAYER_HEAD = register("player_head");
    public static final BlockType PLAYER_WALL_HEAD = register("player_wall_head");
    public static final BlockType CREEPER_HEAD = register("creeper_head");
    public static final BlockType CREEPER_WALL_HEAD = register("creeper_wall_head");
    public static final BlockType DRAGON_HEAD = register("dragon_head");
    public static final BlockType DRAGON_WALL_HEAD = register("dragon_wall_head");
    public static final BlockType PIGLIN_HEAD = register("piglin_head");
    public static final BlockType PIGLIN_WALL_HEAD = register("piglin_wall_head");
    public static final BlockType ANVIL = register("anvil");
    public static final BlockType CHIPPED_ANVIL = register("chipped_anvil");
    public static final BlockType DAMAGED_ANVIL = register("damaged_anvil");
    public static final BlockType TRAPPED_CHEST = register("trapped_chest");
    public static final BlockType LIGHT_WEIGHTED_PRESSURE_PLATE = register("light_weighted_pressure_plate");
    public static final BlockType HEAVY_WEIGHTED_PRESSURE_PLATE = register("heavy_weighted_pressure_plate");
    public static final BlockType COMPARATOR = register("comparator");
    public static final BlockType DAYLIGHT_DETECTOR = register("daylight_detector");
    public static final BlockType REDSTONE_BLOCK = register("redstone_block");
    public static final BlockType NETHER_QUARTZ_ORE = register("nether_quartz_ore");
    public static final BlockType HOPPER = register("hopper");
    public static final BlockType QUARTZ_BLOCK = register("quartz_block");
    public static final BlockType CHISELED_QUARTZ_BLOCK = register("chiseled_quartz_block");
    public static final BlockType QUARTZ_PILLAR = register("quartz_pillar");
    public static final BlockType QUARTZ_STAIRS = register("quartz_stairs");
    public static final BlockType ACTIVATOR_RAIL = register("activator_rail");
    public static final BlockType DROPPER = register("dropper");
    public static final BlockType WHITE_TERRACOTTA = register("white_terracotta");
    public static final BlockType ORANGE_TERRACOTTA = register("orange_terracotta");
    public static final BlockType MAGENTA_TERRACOTTA = register("magenta_terracotta");
    public static final BlockType LIGHT_BLUE_TERRACOTTA = register("light_blue_terracotta");
    public static final BlockType YELLOW_TERRACOTTA = register("yellow_terracotta");
    public static final BlockType LIME_TERRACOTTA = register("lime_terracotta");
    public static final BlockType PINK_TERRACOTTA = register("pink_terracotta");
    public static final BlockType GRAY_TERRACOTTA = register("gray_terracotta");
    public static final BlockType LIGHT_GRAY_TERRACOTTA = register("light_gray_terracotta");
    public static final BlockType CYAN_TERRACOTTA = register("cyan_terracotta");
    public static final BlockType PURPLE_TERRACOTTA = register("purple_terracotta");
    public static final BlockType BLUE_TERRACOTTA = register("blue_terracotta");
    public static final BlockType BROWN_TERRACOTTA = register("brown_terracotta");
    public static final BlockType GREEN_TERRACOTTA = register("green_terracotta");
    public static final BlockType RED_TERRACOTTA = register("red_terracotta");
    public static final BlockType BLACK_TERRACOTTA = register("black_terracotta");
    public static final BlockType WHITE_STAINED_GLASS_PANE = register("white_stained_glass_pane");
    public static final BlockType ORANGE_STAINED_GLASS_PANE = register("orange_stained_glass_pane");
    public static final BlockType MAGENTA_STAINED_GLASS_PANE = register("magenta_stained_glass_pane");
    public static final BlockType LIGHT_BLUE_STAINED_GLASS_PANE = register("light_blue_stained_glass_pane");
    public static final BlockType YELLOW_STAINED_GLASS_PANE = register("yellow_stained_glass_pane");
    public static final BlockType LIME_STAINED_GLASS_PANE = register("lime_stained_glass_pane");
    public static final BlockType PINK_STAINED_GLASS_PANE = register("pink_stained_glass_pane");
    public static final BlockType GRAY_STAINED_GLASS_PANE = register("gray_stained_glass_pane");
    public static final BlockType LIGHT_GRAY_STAINED_GLASS_PANE = register("light_gray_stained_glass_pane");
    public static final BlockType CYAN_STAINED_GLASS_PANE = register("cyan_stained_glass_pane");
    public static final BlockType PURPLE_STAINED_GLASS_PANE = register("purple_stained_glass_pane");
    public static final BlockType BLUE_STAINED_GLASS_PANE = register("blue_stained_glass_pane");
    public static final BlockType BROWN_STAINED_GLASS_PANE = register("brown_stained_glass_pane");
    public static final BlockType GREEN_STAINED_GLASS_PANE = register("green_stained_glass_pane");
    public static final BlockType RED_STAINED_GLASS_PANE = register("red_stained_glass_pane");
    public static final BlockType BLACK_STAINED_GLASS_PANE = register("black_stained_glass_pane");
    public static final BlockType ACACIA_STAIRS = register("acacia_stairs");
    public static final BlockType CHERRY_STAIRS = register("cherry_stairs");
    public static final BlockType DARK_OAK_STAIRS = register("dark_oak_stairs");
    public static final BlockType MANGROVE_STAIRS = register("mangrove_stairs");
    public static final BlockType BAMBOO_STAIRS = register("bamboo_stairs");
    public static final BlockType BAMBOO_MOSAIC_STAIRS = register("bamboo_mosaic_stairs");
    public static final BlockType SLIME_BLOCK = register("slime_block");
    public static final BlockType BARRIER = register("barrier");
    public static final BlockType LIGHT = register("light");
    public static final BlockType IRON_TRAPDOOR = register("iron_trapdoor");
    public static final BlockType PRISMARINE = register("prismarine");
    public static final BlockType PRISMARINE_BRICKS = register("prismarine_bricks");
    public static final BlockType DARK_PRISMARINE = register("dark_prismarine");
    public static final BlockType PRISMARINE_STAIRS = register("prismarine_stairs");
    public static final BlockType PRISMARINE_BRICK_STAIRS = register("prismarine_brick_stairs");
    public static final BlockType DARK_PRISMARINE_STAIRS = register("dark_prismarine_stairs");
    public static final BlockType PRISMARINE_SLAB = register("prismarine_slab");
    public static final BlockType PRISMARINE_BRICK_SLAB = register("prismarine_brick_slab");
    public static final BlockType DARK_PRISMARINE_SLAB = register("dark_prismarine_slab");
    public static final BlockType SEA_LANTERN = register("sea_lantern");
    public static final BlockType HAY_BLOCK = register("hay_block");
    public static final BlockType WHITE_CARPET = register("white_carpet");
    public static final BlockType ORANGE_CARPET = register("orange_carpet");
    public static final BlockType MAGENTA_CARPET = register("magenta_carpet");
    public static final BlockType LIGHT_BLUE_CARPET = register("light_blue_carpet");
    public static final BlockType YELLOW_CARPET = register("yellow_carpet");
    public static final BlockType LIME_CARPET = register("lime_carpet");
    public static final BlockType PINK_CARPET = register("pink_carpet");
    public static final BlockType GRAY_CARPET = register("gray_carpet");
    public static final BlockType LIGHT_GRAY_CARPET = register("light_gray_carpet");
    public static final BlockType CYAN_CARPET = register("cyan_carpet");
    public static final BlockType PURPLE_CARPET = register("purple_carpet");
    public static final BlockType BLUE_CARPET = register("blue_carpet");
    public static final BlockType BROWN_CARPET = register("brown_carpet");
    public static final BlockType GREEN_CARPET = register("green_carpet");
    public static final BlockType RED_CARPET = register("red_carpet");
    public static final BlockType BLACK_CARPET = register("black_carpet");
    public static final BlockType TERRACOTTA = register("terracotta");
    public static final BlockType COAL_BLOCK = register("coal_block");
    public static final BlockType PACKED_ICE = register("packed_ice");
    public static final BlockType SUNFLOWER = register("sunflower");
    public static final BlockType LILAC = register("lilac");
    public static final BlockType ROSE_BUSH = register("rose_bush");
    public static final BlockType PEONY = register("peony");
    public static final BlockType TALL_GRASS = register("tall_grass");
    public static final BlockType LARGE_FERN = register("large_fern");
    public static final BlockType WHITE_BANNER = register("white_banner");
    public static final BlockType ORANGE_BANNER = register("orange_banner");
    public static final BlockType MAGENTA_BANNER = register("magenta_banner");
    public static final BlockType LIGHT_BLUE_BANNER = register("light_blue_banner");
    public static final BlockType YELLOW_BANNER = register("yellow_banner");
    public static final BlockType LIME_BANNER = register("lime_banner");
    public static final BlockType PINK_BANNER = register("pink_banner");
    public static final BlockType GRAY_BANNER = register("gray_banner");
    public static final BlockType LIGHT_GRAY_BANNER = register("light_gray_banner");
    public static final BlockType CYAN_BANNER = register("cyan_banner");
    public static final BlockType PURPLE_BANNER = register("purple_banner");
    public static final BlockType BLUE_BANNER = register("blue_banner");
    public static final BlockType BROWN_BANNER = register("brown_banner");
    public static final BlockType GREEN_BANNER = register("green_banner");
    public static final BlockType RED_BANNER = register("red_banner");
    public static final BlockType BLACK_BANNER = register("black_banner");
    public static final BlockType WHITE_WALL_BANNER = register("white_wall_banner");
    public static final BlockType ORANGE_WALL_BANNER = register("orange_wall_banner");
    public static final BlockType MAGENTA_WALL_BANNER = register("magenta_wall_banner");
    public static final BlockType LIGHT_BLUE_WALL_BANNER = register("light_blue_wall_banner");
    public static final BlockType YELLOW_WALL_BANNER = register("yellow_wall_banner");
    public static final BlockType LIME_WALL_BANNER = register("lime_wall_banner");
    public static final BlockType PINK_WALL_BANNER = register("pink_wall_banner");
    public static final BlockType GRAY_WALL_BANNER = register("gray_wall_banner");
    public static final BlockType LIGHT_GRAY_WALL_BANNER = register("light_gray_wall_banner");
    public static final BlockType CYAN_WALL_BANNER = register("cyan_wall_banner");
    public static final BlockType PURPLE_WALL_BANNER = register("purple_wall_banner");
    public static final BlockType BLUE_WALL_BANNER = register("blue_wall_banner");
    public static final BlockType BROWN_WALL_BANNER = register("brown_wall_banner");
    public static final BlockType GREEN_WALL_BANNER = register("green_wall_banner");
    public static final BlockType RED_WALL_BANNER = register("red_wall_banner");
    public static final BlockType BLACK_WALL_BANNER = register("black_wall_banner");
    public static final BlockType RED_SANDSTONE = register("red_sandstone");
    public static final BlockType CHISELED_RED_SANDSTONE = register("chiseled_red_sandstone");
    public static final BlockType CUT_RED_SANDSTONE = register("cut_red_sandstone");
    public static final BlockType RED_SANDSTONE_STAIRS = register("red_sandstone_stairs");
    public static final BlockType OAK_SLAB = register("oak_slab");
    public static final BlockType SPRUCE_SLAB = register("spruce_slab");
    public static final BlockType BIRCH_SLAB = register("birch_slab");
    public static final BlockType JUNGLE_SLAB = register("jungle_slab");
    public static final BlockType ACACIA_SLAB = register("acacia_slab");
    public static final BlockType CHERRY_SLAB = register("cherry_slab");
    public static final BlockType DARK_OAK_SLAB = register("dark_oak_slab");
    public static final BlockType MANGROVE_SLAB = register("mangrove_slab");
    public static final BlockType BAMBOO_SLAB = register("bamboo_slab");
    public static final BlockType BAMBOO_MOSAIC_SLAB = register("bamboo_mosaic_slab");
    public static final BlockType STONE_SLAB = register("stone_slab");
    public static final BlockType SMOOTH_STONE_SLAB = register("smooth_stone_slab");
    public static final BlockType SANDSTONE_SLAB = register("sandstone_slab");
    public static final BlockType CUT_SANDSTONE_SLAB = register("cut_sandstone_slab");
    public static final BlockType PETRIFIED_OAK_SLAB = register("petrified_oak_slab");
    public static final BlockType COBBLESTONE_SLAB = register("cobblestone_slab");
    public static final BlockType BRICK_SLAB = register("brick_slab");
    public static final BlockType STONE_BRICK_SLAB = register("stone_brick_slab");
    public static final BlockType MUD_BRICK_SLAB = register("mud_brick_slab");
    public static final BlockType NETHER_BRICK_SLAB = register("nether_brick_slab");
    public static final BlockType QUARTZ_SLAB = register("quartz_slab");
    public static final BlockType RED_SANDSTONE_SLAB = register("red_sandstone_slab");
    public static final BlockType CUT_RED_SANDSTONE_SLAB = register("cut_red_sandstone_slab");
    public static final BlockType PURPUR_SLAB = register("purpur_slab");
    public static final BlockType SMOOTH_STONE = register("smooth_stone");
    public static final BlockType SMOOTH_SANDSTONE = register("smooth_sandstone");
    public static final BlockType SMOOTH_QUARTZ = register("smooth_quartz");
    public static final BlockType SMOOTH_RED_SANDSTONE = register("smooth_red_sandstone");
    public static final BlockType SPRUCE_FENCE_GATE = register("spruce_fence_gate");
    public static final BlockType BIRCH_FENCE_GATE = register("birch_fence_gate");
    public static final BlockType JUNGLE_FENCE_GATE = register("jungle_fence_gate");
    public static final BlockType ACACIA_FENCE_GATE = register("acacia_fence_gate");
    public static final BlockType CHERRY_FENCE_GATE = register("cherry_fence_gate");
    public static final BlockType DARK_OAK_FENCE_GATE = register("dark_oak_fence_gate");
    public static final BlockType MANGROVE_FENCE_GATE = register("mangrove_fence_gate");
    public static final BlockType BAMBOO_FENCE_GATE = register("bamboo_fence_gate");
    public static final BlockType SPRUCE_FENCE = register("spruce_fence");
    public static final BlockType BIRCH_FENCE = register("birch_fence");
    public static final BlockType JUNGLE_FENCE = register("jungle_fence");
    public static final BlockType ACACIA_FENCE = register("acacia_fence");
    public static final BlockType CHERRY_FENCE = register("cherry_fence");
    public static final BlockType DARK_OAK_FENCE = register("dark_oak_fence");
    public static final BlockType MANGROVE_FENCE = register("mangrove_fence");
    public static final BlockType BAMBOO_FENCE = register("bamboo_fence");
    public static final BlockType SPRUCE_DOOR = register("spruce_door");
    public static final BlockType BIRCH_DOOR = register("birch_door");
    public static final BlockType JUNGLE_DOOR = register("jungle_door");
    public static final BlockType ACACIA_DOOR = register("acacia_door");
    public static final BlockType CHERRY_DOOR = register("cherry_door");
    public static final BlockType DARK_OAK_DOOR = register("dark_oak_door");
    public static final BlockType MANGROVE_DOOR = register("mangrove_door");
    public static final BlockType BAMBOO_DOOR = register("bamboo_door");
    public static final BlockType END_ROD = register("end_rod");
    public static final BlockType CHORUS_PLANT = register("chorus_plant");
    public static final BlockType CHORUS_FLOWER = register("chorus_flower");
    public static final BlockType PURPUR_BLOCK = register("purpur_block");
    public static final BlockType PURPUR_PILLAR = register("purpur_pillar");
    public static final BlockType PURPUR_STAIRS = register("purpur_stairs");
    public static final BlockType END_STONE_BRICKS = register("end_stone_bricks");
    public static final BlockType TORCHFLOWER_CROP = register("torchflower_crop");
    public static final BlockType PITCHER_CROP = register("pitcher_crop");
    public static final BlockType PITCHER_PLANT = register("pitcher_plant");
    public static final BlockType BEETROOTS = register("beetroots");
    public static final BlockType DIRT_PATH = register("dirt_path");
    public static final BlockType END_GATEWAY = register("end_gateway");
    public static final BlockType REPEATING_COMMAND_BLOCK = register("repeating_command_block");
    public static final BlockType CHAIN_COMMAND_BLOCK = register("chain_command_block");
    public static final BlockType FROSTED_ICE = register("frosted_ice");
    public static final BlockType MAGMA_BLOCK = register("magma_block");
    public static final BlockType NETHER_WART_BLOCK = register("nether_wart_block");
    public static final BlockType RED_NETHER_BRICKS = register("red_nether_bricks");
    public static final BlockType BONE_BLOCK = register("bone_block");
    public static final BlockType STRUCTURE_VOID = register("structure_void");
    public static final BlockType OBSERVER = register("observer");
    public static final BlockType SHULKER_BOX = register("shulker_box");
    public static final BlockType WHITE_SHULKER_BOX = register("white_shulker_box");
    public static final BlockType ORANGE_SHULKER_BOX = register("orange_shulker_box");
    public static final BlockType MAGENTA_SHULKER_BOX = register("magenta_shulker_box");
    public static final BlockType LIGHT_BLUE_SHULKER_BOX = register("light_blue_shulker_box");
    public static final BlockType YELLOW_SHULKER_BOX = register("yellow_shulker_box");
    public static final BlockType LIME_SHULKER_BOX = register("lime_shulker_box");
    public static final BlockType PINK_SHULKER_BOX = register("pink_shulker_box");
    public static final BlockType GRAY_SHULKER_BOX = register("gray_shulker_box");
    public static final BlockType LIGHT_GRAY_SHULKER_BOX = register("light_gray_shulker_box");
    public static final BlockType CYAN_SHULKER_BOX = register("cyan_shulker_box");
    public static final BlockType PURPLE_SHULKER_BOX = register("purple_shulker_box");
    public static final BlockType BLUE_SHULKER_BOX = register("blue_shulker_box");
    public static final BlockType BROWN_SHULKER_BOX = register("brown_shulker_box");
    public static final BlockType GREEN_SHULKER_BOX = register("green_shulker_box");
    public static final BlockType RED_SHULKER_BOX = register("red_shulker_box");
    public static final BlockType BLACK_SHULKER_BOX = register("black_shulker_box");
    public static final BlockType WHITE_GLAZED_TERRACOTTA = register("white_glazed_terracotta");
    public static final BlockType ORANGE_GLAZED_TERRACOTTA = register("orange_glazed_terracotta");
    public static final BlockType MAGENTA_GLAZED_TERRACOTTA = register("magenta_glazed_terracotta");
    public static final BlockType LIGHT_BLUE_GLAZED_TERRACOTTA = register("light_blue_glazed_terracotta");
    public static final BlockType YELLOW_GLAZED_TERRACOTTA = register("yellow_glazed_terracotta");
    public static final BlockType LIME_GLAZED_TERRACOTTA = register("lime_glazed_terracotta");
    public static final BlockType PINK_GLAZED_TERRACOTTA = register("pink_glazed_terracotta");
    public static final BlockType GRAY_GLAZED_TERRACOTTA = register("gray_glazed_terracotta");
    public static final BlockType LIGHT_GRAY_GLAZED_TERRACOTTA = register("light_gray_glazed_terracotta");
    public static final BlockType CYAN_GLAZED_TERRACOTTA = register("cyan_glazed_terracotta");
    public static final BlockType PURPLE_GLAZED_TERRACOTTA = register("purple_glazed_terracotta");
    public static final BlockType BLUE_GLAZED_TERRACOTTA = register("blue_glazed_terracotta");
    public static final BlockType BROWN_GLAZED_TERRACOTTA = register("brown_glazed_terracotta");
    public static final BlockType GREEN_GLAZED_TERRACOTTA = register("green_glazed_terracotta");
    public static final BlockType RED_GLAZED_TERRACOTTA = register("red_glazed_terracotta");
    public static final BlockType BLACK_GLAZED_TERRACOTTA = register("black_glazed_terracotta");
    public static final BlockType WHITE_CONCRETE = register("white_concrete");
    public static final BlockType ORANGE_CONCRETE = register("orange_concrete");
    public static final BlockType MAGENTA_CONCRETE = register("magenta_concrete");
    public static final BlockType LIGHT_BLUE_CONCRETE = register("light_blue_concrete");
    public static final BlockType YELLOW_CONCRETE = register("yellow_concrete");
    public static final BlockType LIME_CONCRETE = register("lime_concrete");
    public static final BlockType PINK_CONCRETE = register("pink_concrete");
    public static final BlockType GRAY_CONCRETE = register("gray_concrete");
    public static final BlockType LIGHT_GRAY_CONCRETE = register("light_gray_concrete");
    public static final BlockType CYAN_CONCRETE = register("cyan_concrete");
    public static final BlockType PURPLE_CONCRETE = register("purple_concrete");
    public static final BlockType BLUE_CONCRETE = register("blue_concrete");
    public static final BlockType BROWN_CONCRETE = register("brown_concrete");
    public static final BlockType GREEN_CONCRETE = register("green_concrete");
    public static final BlockType RED_CONCRETE = register("red_concrete");
    public static final BlockType BLACK_CONCRETE = register("black_concrete");
    public static final BlockType WHITE_CONCRETE_POWDER = register("white_concrete_powder");
    public static final BlockType ORANGE_CONCRETE_POWDER = register("orange_concrete_powder");
    public static final BlockType MAGENTA_CONCRETE_POWDER = register("magenta_concrete_powder");
    public static final BlockType LIGHT_BLUE_CONCRETE_POWDER = register("light_blue_concrete_powder");
    public static final BlockType YELLOW_CONCRETE_POWDER = register("yellow_concrete_powder");
    public static final BlockType LIME_CONCRETE_POWDER = register("lime_concrete_powder");
    public static final BlockType PINK_CONCRETE_POWDER = register("pink_concrete_powder");
    public static final BlockType GRAY_CONCRETE_POWDER = register("gray_concrete_powder");
    public static final BlockType LIGHT_GRAY_CONCRETE_POWDER = register("light_gray_concrete_powder");
    public static final BlockType CYAN_CONCRETE_POWDER = register("cyan_concrete_powder");
    public static final BlockType PURPLE_CONCRETE_POWDER = register("purple_concrete_powder");
    public static final BlockType BLUE_CONCRETE_POWDER = register("blue_concrete_powder");
    public static final BlockType BROWN_CONCRETE_POWDER = register("brown_concrete_powder");
    public static final BlockType GREEN_CONCRETE_POWDER = register("green_concrete_powder");
    public static final BlockType RED_CONCRETE_POWDER = register("red_concrete_powder");
    public static final BlockType BLACK_CONCRETE_POWDER = register("black_concrete_powder");
    public static final BlockType KELP = register("kelp");
    public static final BlockType KELP_PLANT = register("kelp_plant");
    public static final BlockType DRIED_KELP_BLOCK = register("dried_kelp_block");
    public static final BlockType TURTLE_EGG = register("turtle_egg");
    public static final BlockType SNIFFER_EGG = register("sniffer_egg");
    public static final BlockType DEAD_TUBE_CORAL_BLOCK = register("dead_tube_coral_block");
    public static final BlockType DEAD_BRAIN_CORAL_BLOCK = register("dead_brain_coral_block");
    public static final BlockType DEAD_BUBBLE_CORAL_BLOCK = register("dead_bubble_coral_block");
    public static final BlockType DEAD_FIRE_CORAL_BLOCK = register("dead_fire_coral_block");
    public static final BlockType DEAD_HORN_CORAL_BLOCK = register("dead_horn_coral_block");
    public static final BlockType TUBE_CORAL_BLOCK = register("tube_coral_block");
    public static final BlockType BRAIN_CORAL_BLOCK = register("brain_coral_block");
    public static final BlockType BUBBLE_CORAL_BLOCK = register("bubble_coral_block");
    public static final BlockType FIRE_CORAL_BLOCK = register("fire_coral_block");
    public static final BlockType HORN_CORAL_BLOCK = register("horn_coral_block");
    public static final BlockType DEAD_TUBE_CORAL = register("dead_tube_coral");
    public static final BlockType DEAD_BRAIN_CORAL = register("dead_brain_coral");
    public static final BlockType DEAD_BUBBLE_CORAL = register("dead_bubble_coral");
    public static final BlockType DEAD_FIRE_CORAL = register("dead_fire_coral");
    public static final BlockType DEAD_HORN_CORAL = register("dead_horn_coral");
    public static final BlockType TUBE_CORAL = register("tube_coral");
    public static final BlockType BRAIN_CORAL = register("brain_coral");
    public static final BlockType BUBBLE_CORAL = register("bubble_coral");
    public static final BlockType FIRE_CORAL = register("fire_coral");
    public static final BlockType HORN_CORAL = register("horn_coral");
    public static final BlockType DEAD_TUBE_CORAL_FAN = register("dead_tube_coral_fan");
    public static final BlockType DEAD_BRAIN_CORAL_FAN = register("dead_brain_coral_fan");
    public static final BlockType DEAD_BUBBLE_CORAL_FAN = register("dead_bubble_coral_fan");
    public static final BlockType DEAD_FIRE_CORAL_FAN = register("dead_fire_coral_fan");
    public static final BlockType DEAD_HORN_CORAL_FAN = register("dead_horn_coral_fan");
    public static final BlockType TUBE_CORAL_FAN = register("tube_coral_fan");
    public static final BlockType BRAIN_CORAL_FAN = register("brain_coral_fan");
    public static final BlockType BUBBLE_CORAL_FAN = register("bubble_coral_fan");
    public static final BlockType FIRE_CORAL_FAN = register("fire_coral_fan");
    public static final BlockType HORN_CORAL_FAN = register("horn_coral_fan");
    public static final BlockType DEAD_TUBE_CORAL_WALL_FAN = register("dead_tube_coral_wall_fan");
    public static final BlockType DEAD_BRAIN_CORAL_WALL_FAN = register("dead_brain_coral_wall_fan");
    public static final BlockType DEAD_BUBBLE_CORAL_WALL_FAN = register("dead_bubble_coral_wall_fan");
    public static final BlockType DEAD_FIRE_CORAL_WALL_FAN = register("dead_fire_coral_wall_fan");
    public static final BlockType DEAD_HORN_CORAL_WALL_FAN = register("dead_horn_coral_wall_fan");
    public static final BlockType TUBE_CORAL_WALL_FAN = register("tube_coral_wall_fan");
    public static final BlockType BRAIN_CORAL_WALL_FAN = register("brain_coral_wall_fan");
    public static final BlockType BUBBLE_CORAL_WALL_FAN = register("bubble_coral_wall_fan");
    public static final BlockType FIRE_CORAL_WALL_FAN = register("fire_coral_wall_fan");
    public static final BlockType HORN_CORAL_WALL_FAN = register("horn_coral_wall_fan");
    public static final BlockType SEA_PICKLE = register("sea_pickle");
    public static final BlockType BLUE_ICE = register("blue_ice");
    public static final BlockType CONDUIT = register("conduit");
    public static final BlockType BAMBOO_SAPLING = register("bamboo_sapling");
    public static final BlockType BAMBOO = register("bamboo");
    public static final BlockType POTTED_BAMBOO = register("potted_bamboo");
    public static final BlockType VOID_AIR = register("void_air");
    public static final BlockType CAVE_AIR = register("cave_air");
    public static final BlockType BUBBLE_COLUMN = register("bubble_column");
    public static final BlockType POLISHED_GRANITE_STAIRS = register("polished_granite_stairs");
    public static final BlockType SMOOTH_RED_SANDSTONE_STAIRS = register("smooth_red_sandstone_stairs");
    public static final BlockType MOSSY_STONE_BRICK_STAIRS = register("mossy_stone_brick_stairs");
    public static final BlockType POLISHED_DIORITE_STAIRS = register("polished_diorite_stairs");
    public static final BlockType MOSSY_COBBLESTONE_STAIRS = register("mossy_cobblestone_stairs");
    public static final BlockType END_STONE_BRICK_STAIRS = register("end_stone_brick_stairs");
    public static final BlockType STONE_STAIRS = register("stone_stairs");
    public static final BlockType SMOOTH_SANDSTONE_STAIRS = register("smooth_sandstone_stairs");
    public static final BlockType SMOOTH_QUARTZ_STAIRS = register("smooth_quartz_stairs");
    public static final BlockType GRANITE_STAIRS = register("granite_stairs");
    public static final BlockType ANDESITE_STAIRS = register("andesite_stairs");
    public static final BlockType RED_NETHER_BRICK_STAIRS = register("red_nether_brick_stairs");
    public static final BlockType POLISHED_ANDESITE_STAIRS = register("polished_andesite_stairs");
    public static final BlockType DIORITE_STAIRS = register("diorite_stairs");
    public static final BlockType POLISHED_GRANITE_SLAB = register("polished_granite_slab");
    public static final BlockType SMOOTH_RED_SANDSTONE_SLAB = register("smooth_red_sandstone_slab");
    public static final BlockType MOSSY_STONE_BRICK_SLAB = register("mossy_stone_brick_slab");
    public static final BlockType POLISHED_DIORITE_SLAB = register("polished_diorite_slab");
    public static final BlockType MOSSY_COBBLESTONE_SLAB = register("mossy_cobblestone_slab");
    public static final BlockType END_STONE_BRICK_SLAB = register("end_stone_brick_slab");
    public static final BlockType SMOOTH_SANDSTONE_SLAB = register("smooth_sandstone_slab");
    public static final BlockType SMOOTH_QUARTZ_SLAB = register("smooth_quartz_slab");
    public static final BlockType GRANITE_SLAB = register("granite_slab");
    public static final BlockType ANDESITE_SLAB = register("andesite_slab");
    public static final BlockType RED_NETHER_BRICK_SLAB = register("red_nether_brick_slab");
    public static final BlockType POLISHED_ANDESITE_SLAB = register("polished_andesite_slab");
    public static final BlockType DIORITE_SLAB = register("diorite_slab");
    public static final BlockType BRICK_WALL = register("brick_wall");
    public static final BlockType PRISMARINE_WALL = register("prismarine_wall");
    public static final BlockType RED_SANDSTONE_WALL = register("red_sandstone_wall");
    public static final BlockType MOSSY_STONE_BRICK_WALL = register("mossy_stone_brick_wall");
    public static final BlockType GRANITE_WALL = register("granite_wall");
    public static final BlockType STONE_BRICK_WALL = register("stone_brick_wall");
    public static final BlockType MUD_BRICK_WALL = register("mud_brick_wall");
    public static final BlockType NETHER_BRICK_WALL = register("nether_brick_wall");
    public static final BlockType ANDESITE_WALL = register("andesite_wall");
    public static final BlockType RED_NETHER_BRICK_WALL = register("red_nether_brick_wall");
    public static final BlockType SANDSTONE_WALL = register("sandstone_wall");
    public static final BlockType END_STONE_BRICK_WALL = register("end_stone_brick_wall");
    public static final BlockType DIORITE_WALL = register("diorite_wall");
    public static final BlockType SCAFFOLDING = register("scaffolding");
    public static final BlockType LOOM = register("loom");
    public static final BlockType BARREL = register("barrel");
    public static final BlockType SMOKER = register("smoker");
    public static final BlockType BLAST_FURNACE = register("blast_furnace");
    public static final BlockType CARTOGRAPHY_TABLE = register("cartography_table");
    public static final BlockType FLETCHING_TABLE = register("fletching_table");
    public static final BlockType GRINDSTONE = register("grindstone");
    public static final BlockType LECTERN = register("lectern");
    public static final BlockType SMITHING_TABLE = register("smithing_table");
    public static final BlockType STONECUTTER = register("stonecutter");
    public static final BlockType BELL = register("bell");
    public static final BlockType LANTERN = register("lantern");
    public static final BlockType SOUL_LANTERN = register("soul_lantern");
    public static final BlockType CAMPFIRE = register("campfire");
    public static final BlockType SOUL_CAMPFIRE = register("soul_campfire");
    public static final BlockType SWEET_BERRY_BUSH = register("sweet_berry_bush");
    public static final BlockType WARPED_STEM = register("warped_stem");
    public static final BlockType STRIPPED_WARPED_STEM = register("stripped_warped_stem");
    public static final BlockType WARPED_HYPHAE = register("warped_hyphae");
    public static final BlockType STRIPPED_WARPED_HYPHAE = register("stripped_warped_hyphae");
    public static final BlockType WARPED_NYLIUM = register("warped_nylium");
    public static final BlockType WARPED_FUNGUS = register("warped_fungus");
    public static final BlockType WARPED_WART_BLOCK = register("warped_wart_block");
    public static final BlockType WARPED_ROOTS = register("warped_roots");
    public static final BlockType NETHER_SPROUTS = register("nether_sprouts");
    public static final BlockType CRIMSON_STEM = register("crimson_stem");
    public static final BlockType STRIPPED_CRIMSON_STEM = register("stripped_crimson_stem");
    public static final BlockType CRIMSON_HYPHAE = register("crimson_hyphae");
    public static final BlockType STRIPPED_CRIMSON_HYPHAE = register("stripped_crimson_hyphae");
    public static final BlockType CRIMSON_NYLIUM = register("crimson_nylium");
    public static final BlockType CRIMSON_FUNGUS = register("crimson_fungus");
    public static final BlockType SHROOMLIGHT = register("shroomlight");
    public static final BlockType WEEPING_VINES = register("weeping_vines");
    public static final BlockType WEEPING_VINES_PLANT = register("weeping_vines_plant");
    public static final BlockType TWISTING_VINES = register("twisting_vines");
    public static final BlockType TWISTING_VINES_PLANT = register("twisting_vines_plant");
    public static final BlockType CRIMSON_ROOTS = register("crimson_roots");
    public static final BlockType CRIMSON_PLANKS = register("crimson_planks");
    public static final BlockType WARPED_PLANKS = register("warped_planks");
    public static final BlockType CRIMSON_SLAB = register("crimson_slab");
    public static final BlockType WARPED_SLAB = register("warped_slab");
    public static final BlockType CRIMSON_PRESSURE_PLATE = register("crimson_pressure_plate");
    public static final BlockType WARPED_PRESSURE_PLATE = register("warped_pressure_plate");
    public static final BlockType CRIMSON_FENCE = register("crimson_fence");
    public static final BlockType WARPED_FENCE = register("warped_fence");
    public static final BlockType CRIMSON_TRAPDOOR = register("crimson_trapdoor");
    public static final BlockType WARPED_TRAPDOOR = register("warped_trapdoor");
    public static final BlockType CRIMSON_FENCE_GATE = register("crimson_fence_gate");
    public static final BlockType WARPED_FENCE_GATE = register("warped_fence_gate");
    public static final BlockType CRIMSON_STAIRS = register("crimson_stairs");
    public static final BlockType WARPED_STAIRS = register("warped_stairs");
    public static final BlockType CRIMSON_BUTTON = register("crimson_button");
    public static final BlockType WARPED_BUTTON = register("warped_button");
    public static final BlockType CRIMSON_DOOR = register("crimson_door");
    public static final BlockType WARPED_DOOR = register("warped_door");
    public static final BlockType CRIMSON_SIGN = register("crimson_sign");
    public static final BlockType WARPED_SIGN = register("warped_sign");
    public static final BlockType CRIMSON_WALL_SIGN = register("crimson_wall_sign");
    public static final BlockType WARPED_WALL_SIGN = register("warped_wall_sign");
    public static final BlockType STRUCTURE_BLOCK = register("structure_block");
    public static final BlockType JIGSAW = register("jigsaw");
    public static final BlockType COMPOSTER = register("composter");
    public static final BlockType TARGET = register("target");
    public static final BlockType BEE_NEST = register("bee_nest");
    public static final BlockType BEEHIVE = register("beehive");
    public static final BlockType HONEY_BLOCK = register("honey_block");
    public static final BlockType HONEYCOMB_BLOCK = register("honeycomb_block");
    public static final BlockType NETHERITE_BLOCK = register("netherite_block");
    public static final BlockType ANCIENT_DEBRIS = register("ancient_debris");
    public static final BlockType CRYING_OBSIDIAN = register("crying_obsidian");
    public static final BlockType RESPAWN_ANCHOR = register("respawn_anchor");
    public static final BlockType POTTED_CRIMSON_FUNGUS = register("potted_crimson_fungus");
    public static final BlockType POTTED_WARPED_FUNGUS = register("potted_warped_fungus");
    public static final BlockType POTTED_CRIMSON_ROOTS = register("potted_crimson_roots");
    public static final BlockType POTTED_WARPED_ROOTS = register("potted_warped_roots");
    public static final BlockType LODESTONE = register("lodestone");
    public static final BlockType BLACKSTONE = register("blackstone");
    public static final BlockType BLACKSTONE_STAIRS = register("blackstone_stairs");
    public static final BlockType BLACKSTONE_WALL = register("blackstone_wall");
    public static final BlockType BLACKSTONE_SLAB = register("blackstone_slab");
    public static final BlockType POLISHED_BLACKSTONE = register("polished_blackstone");
    public static final BlockType POLISHED_BLACKSTONE_BRICKS = register("polished_blackstone_bricks");
    public static final BlockType CRACKED_POLISHED_BLACKSTONE_BRICKS = register("cracked_polished_blackstone_bricks");
    public static final BlockType CHISELED_POLISHED_BLACKSTONE = register("chiseled_polished_blackstone");
    public static final BlockType POLISHED_BLACKSTONE_BRICK_SLAB = register("polished_blackstone_brick_slab");
    public static final BlockType POLISHED_BLACKSTONE_BRICK_STAIRS = register("polished_blackstone_brick_stairs");
    public static final BlockType POLISHED_BLACKSTONE_BRICK_WALL = register("polished_blackstone_brick_wall");
    public static final BlockType GILDED_BLACKSTONE = register("gilded_blackstone");
    public static final BlockType POLISHED_BLACKSTONE_STAIRS = register("polished_blackstone_stairs");
    public static final BlockType POLISHED_BLACKSTONE_SLAB = register("polished_blackstone_slab");
    public static final BlockType POLISHED_BLACKSTONE_PRESSURE_PLATE = register("polished_blackstone_pressure_plate");
    public static final BlockType POLISHED_BLACKSTONE_BUTTON = register("polished_blackstone_button");
    public static final BlockType POLISHED_BLACKSTONE_WALL = register("polished_blackstone_wall");
    public static final BlockType CHISELED_NETHER_BRICKS = register("chiseled_nether_bricks");
    public static final BlockType CRACKED_NETHER_BRICKS = register("cracked_nether_bricks");
    public static final BlockType QUARTZ_BRICKS = register("quartz_bricks");
    public static final BlockType CANDLE = register("candle");
    public static final BlockType WHITE_CANDLE = register("white_candle");
    public static final BlockType ORANGE_CANDLE = register("orange_candle");
    public static final BlockType MAGENTA_CANDLE = register("magenta_candle");
    public static final BlockType LIGHT_BLUE_CANDLE = register("light_blue_candle");
    public static final BlockType YELLOW_CANDLE = register("yellow_candle");
    public static final BlockType LIME_CANDLE = register("lime_candle");
    public static final BlockType PINK_CANDLE = register("pink_candle");
    public static final BlockType GRAY_CANDLE = register("gray_candle");
    public static final BlockType LIGHT_GRAY_CANDLE = register("light_gray_candle");
    public static final BlockType CYAN_CANDLE = register("cyan_candle");
    public static final BlockType PURPLE_CANDLE = register("purple_candle");
    public static final BlockType BLUE_CANDLE = register("blue_candle");
    public static final BlockType BROWN_CANDLE = register("brown_candle");
    public static final BlockType GREEN_CANDLE = register("green_candle");
    public static final BlockType RED_CANDLE = register("red_candle");
    public static final BlockType BLACK_CANDLE = register("black_candle");
    public static final BlockType CANDLE_CAKE = register("candle_cake");
    public static final BlockType WHITE_CANDLE_CAKE = register("white_candle_cake");
    public static final BlockType ORANGE_CANDLE_CAKE = register("orange_candle_cake");
    public static final BlockType MAGENTA_CANDLE_CAKE = register("magenta_candle_cake");
    public static final BlockType LIGHT_BLUE_CANDLE_CAKE = register("light_blue_candle_cake");
    public static final BlockType YELLOW_CANDLE_CAKE = register("yellow_candle_cake");
    public static final BlockType LIME_CANDLE_CAKE = register("lime_candle_cake");
    public static final BlockType PINK_CANDLE_CAKE = register("pink_candle_cake");
    public static final BlockType GRAY_CANDLE_CAKE = register("gray_candle_cake");
    public static final BlockType LIGHT_GRAY_CANDLE_CAKE = register("light_gray_candle_cake");
    public static final BlockType CYAN_CANDLE_CAKE = register("cyan_candle_cake");
    public static final BlockType PURPLE_CANDLE_CAKE = register("purple_candle_cake");
    public static final BlockType BLUE_CANDLE_CAKE = register("blue_candle_cake");
    public static final BlockType BROWN_CANDLE_CAKE = register("brown_candle_cake");
    public static final BlockType GREEN_CANDLE_CAKE = register("green_candle_cake");
    public static final BlockType RED_CANDLE_CAKE = register("red_candle_cake");
    public static final BlockType BLACK_CANDLE_CAKE = register("black_candle_cake");
    public static final BlockType AMETHYST_BLOCK = register("amethyst_block");
    public static final BlockType BUDDING_AMETHYST = register("budding_amethyst");
    public static final BlockType AMETHYST_CLUSTER = register("amethyst_cluster");
    public static final BlockType LARGE_AMETHYST_BUD = register("large_amethyst_bud");
    public static final BlockType MEDIUM_AMETHYST_BUD = register("medium_amethyst_bud");
    public static final BlockType SMALL_AMETHYST_BUD = register("small_amethyst_bud");
    public static final BlockType TUFF = register("tuff");
    public static final BlockType TUFF_SLAB = register("tuff_slab");
    public static final BlockType TUFF_STAIRS = register("tuff_stairs");
    public static final BlockType TUFF_WALL = register("tuff_wall");
    public static final BlockType POLISHED_TUFF = register("polished_tuff");
    public static final BlockType POLISHED_TUFF_SLAB = register("polished_tuff_slab");
    public static final BlockType POLISHED_TUFF_STAIRS = register("polished_tuff_stairs");
    public static final BlockType POLISHED_TUFF_WALL = register("polished_tuff_wall");
    public static final BlockType CHISELED_TUFF = register("chiseled_tuff");
    public static final BlockType TUFF_BRICKS = register("tuff_bricks");
    public static final BlockType TUFF_BRICK_SLAB = register("tuff_brick_slab");
    public static final BlockType TUFF_BRICK_STAIRS = register("tuff_brick_stairs");
    public static final BlockType TUFF_BRICK_WALL = register("tuff_brick_wall");
    public static final BlockType CHISELED_TUFF_BRICKS = register("chiseled_tuff_bricks");
    public static final BlockType CALCITE = register("calcite");
    public static final BlockType TINTED_GLASS = register("tinted_glass");
    public static final BlockType POWDER_SNOW = register("powder_snow");
    public static final BlockType SCULK_SENSOR = register("sculk_sensor");
    public static final BlockType CALIBRATED_SCULK_SENSOR = register("calibrated_sculk_sensor");
    public static final BlockType SCULK = register("sculk");
    public static final BlockType SCULK_VEIN = register("sculk_vein");
    public static final BlockType SCULK_CATALYST = register("sculk_catalyst");
    public static final BlockType SCULK_SHRIEKER = register("sculk_shrieker");
    public static final BlockType COPPER_BLOCK = register("copper_block");
    public static final BlockType EXPOSED_COPPER = register("exposed_copper");
    public static final BlockType WEATHERED_COPPER = register("weathered_copper");
    public static final BlockType OXIDIZED_COPPER = register("oxidized_copper");
    public static final BlockType COPPER_ORE = register("copper_ore");
    public static final BlockType DEEPSLATE_COPPER_ORE = register("deepslate_copper_ore");
    public static final BlockType OXIDIZED_CUT_COPPER = register("oxidized_cut_copper");
    public static final BlockType WEATHERED_CUT_COPPER = register("weathered_cut_copper");
    public static final BlockType EXPOSED_CUT_COPPER = register("exposed_cut_copper");
    public static final BlockType CUT_COPPER = register("cut_copper");
    public static final BlockType OXIDIZED_CHISELED_COPPER = register("oxidized_chiseled_copper");
    public static final BlockType WEATHERED_CHISELED_COPPER = register("weathered_chiseled_copper");
    public static final BlockType EXPOSED_CHISELED_COPPER = register("exposed_chiseled_copper");
    public static final BlockType CHISELED_COPPER = register("chiseled_copper");
    public static final BlockType WAXED_OXIDIZED_CHISELED_COPPER = register("waxed_oxidized_chiseled_copper");
    public static final BlockType WAXED_WEATHERED_CHISELED_COPPER = register("waxed_weathered_chiseled_copper");
    public static final BlockType WAXED_EXPOSED_CHISELED_COPPER = register("waxed_exposed_chiseled_copper");
    public static final BlockType WAXED_CHISELED_COPPER = register("waxed_chiseled_copper");
    public static final BlockType OXIDIZED_CUT_COPPER_STAIRS = register("oxidized_cut_copper_stairs");
    public static final BlockType WEATHERED_CUT_COPPER_STAIRS = register("weathered_cut_copper_stairs");
    public static final BlockType EXPOSED_CUT_COPPER_STAIRS = register("exposed_cut_copper_stairs");
    public static final BlockType CUT_COPPER_STAIRS = register("cut_copper_stairs");
    public static final BlockType OXIDIZED_CUT_COPPER_SLAB = register("oxidized_cut_copper_slab");
    public static final BlockType WEATHERED_CUT_COPPER_SLAB = register("weathered_cut_copper_slab");
    public static final BlockType EXPOSED_CUT_COPPER_SLAB = register("exposed_cut_copper_slab");
    public static final BlockType CUT_COPPER_SLAB = register("cut_copper_slab");
    public static final BlockType WAXED_COPPER_BLOCK = register("waxed_copper_block");
    public static final BlockType WAXED_WEATHERED_COPPER = register("waxed_weathered_copper");
    public static final BlockType WAXED_EXPOSED_COPPER = register("waxed_exposed_copper");
    public static final BlockType WAXED_OXIDIZED_COPPER = register("waxed_oxidized_copper");
    public static final BlockType WAXED_OXIDIZED_CUT_COPPER = register("waxed_oxidized_cut_copper");
    public static final BlockType WAXED_WEATHERED_CUT_COPPER = register("waxed_weathered_cut_copper");
    public static final BlockType WAXED_EXPOSED_CUT_COPPER = register("waxed_exposed_cut_copper");
    public static final BlockType WAXED_CUT_COPPER = register("waxed_cut_copper");
    public static final BlockType WAXED_OXIDIZED_CUT_COPPER_STAIRS = register("waxed_oxidized_cut_copper_stairs");
    public static final BlockType WAXED_WEATHERED_CUT_COPPER_STAIRS = register("waxed_weathered_cut_copper_stairs");
    public static final BlockType WAXED_EXPOSED_CUT_COPPER_STAIRS = register("waxed_exposed_cut_copper_stairs");
    public static final BlockType WAXED_CUT_COPPER_STAIRS = register("waxed_cut_copper_stairs");
    public static final BlockType WAXED_OXIDIZED_CUT_COPPER_SLAB = register("waxed_oxidized_cut_copper_slab");
    public static final BlockType WAXED_WEATHERED_CUT_COPPER_SLAB = register("waxed_weathered_cut_copper_slab");
    public static final BlockType WAXED_EXPOSED_CUT_COPPER_SLAB = register("waxed_exposed_cut_copper_slab");
    public static final BlockType WAXED_CUT_COPPER_SLAB = register("waxed_cut_copper_slab");
    public static final BlockType COPPER_DOOR = register("copper_door");
    public static final BlockType EXPOSED_COPPER_DOOR = register("exposed_copper_door");
    public static final BlockType OXIDIZED_COPPER_DOOR = register("oxidized_copper_door");
    public static final BlockType WEATHERED_COPPER_DOOR = register("weathered_copper_door");
    public static final BlockType WAXED_COPPER_DOOR = register("waxed_copper_door");
    public static final BlockType WAXED_EXPOSED_COPPER_DOOR = register("waxed_exposed_copper_door");
    public static final BlockType WAXED_OXIDIZED_COPPER_DOOR = register("waxed_oxidized_copper_door");
    public static final BlockType WAXED_WEATHERED_COPPER_DOOR = register("waxed_weathered_copper_door");
    public static final BlockType COPPER_TRAPDOOR = register("copper_trapdoor");
    public static final BlockType EXPOSED_COPPER_TRAPDOOR = register("exposed_copper_trapdoor");
    public static final BlockType OXIDIZED_COPPER_TRAPDOOR = register("oxidized_copper_trapdoor");
    public static final BlockType WEATHERED_COPPER_TRAPDOOR = register("weathered_copper_trapdoor");
    public static final BlockType WAXED_COPPER_TRAPDOOR = register("waxed_copper_trapdoor");
    public static final BlockType WAXED_EXPOSED_COPPER_TRAPDOOR = register("waxed_exposed_copper_trapdoor");
    public static final BlockType WAXED_OXIDIZED_COPPER_TRAPDOOR = register("waxed_oxidized_copper_trapdoor");
    public static final BlockType WAXED_WEATHERED_COPPER_TRAPDOOR = register("waxed_weathered_copper_trapdoor");
    public static final BlockType COPPER_GRATE = register("copper_grate");
    public static final BlockType EXPOSED_COPPER_GRATE = register("exposed_copper_grate");
    public static final BlockType WEATHERED_COPPER_GRATE = register("weathered_copper_grate");
    public static final BlockType OXIDIZED_COPPER_GRATE = register("oxidized_copper_grate");
    public static final BlockType WAXED_COPPER_GRATE = register("waxed_copper_grate");
    public static final BlockType WAXED_EXPOSED_COPPER_GRATE = register("waxed_exposed_copper_grate");
    public static final BlockType WAXED_WEATHERED_COPPER_GRATE = register("waxed_weathered_copper_grate");
    public static final BlockType WAXED_OXIDIZED_COPPER_GRATE = register("waxed_oxidized_copper_grate");
    public static final BlockType COPPER_BULB = register("copper_bulb");
    public static final BlockType EXPOSED_COPPER_BULB = register("exposed_copper_bulb");
    public static final BlockType WEATHERED_COPPER_BULB = register("weathered_copper_bulb");
    public static final BlockType OXIDIZED_COPPER_BULB = register("oxidized_copper_bulb");
    public static final BlockType WAXED_COPPER_BULB = register("waxed_copper_bulb");
    public static final BlockType WAXED_EXPOSED_COPPER_BULB = register("waxed_exposed_copper_bulb");
    public static final BlockType WAXED_WEATHERED_COPPER_BULB = register("waxed_weathered_copper_bulb");
    public static final BlockType WAXED_OXIDIZED_COPPER_BULB = register("waxed_oxidized_copper_bulb");
    public static final BlockType LIGHTNING_ROD = register("lightning_rod");
    public static final BlockType POINTED_DRIPSTONE = register("pointed_dripstone");
    public static final BlockType DRIPSTONE_BLOCK = register("dripstone_block");
    public static final BlockType CAVE_VINES = register("cave_vines");
    public static final BlockType CAVE_VINES_PLANT = register("cave_vines_plant");
    public static final BlockType SPORE_BLOSSOM = register("spore_blossom");
    public static final BlockType AZALEA = register("azalea");
    public static final BlockType FLOWERING_AZALEA = register("flowering_azalea");
    public static final BlockType MOSS_CARPET = register("moss_carpet");
    public static final BlockType PINK_PETALS = register("pink_petals");
    public static final BlockType MOSS_BLOCK = register("moss_block");
    public static final BlockType BIG_DRIPLEAF = register("big_dripleaf");
    public static final BlockType BIG_DRIPLEAF_STEM = register("big_dripleaf_stem");
    public static final BlockType SMALL_DRIPLEAF = register("small_dripleaf");
    public static final BlockType HANGING_ROOTS = register("hanging_roots");
    public static final BlockType ROOTED_DIRT = register("rooted_dirt");
    public static final BlockType MUD = register("mud");
    public static final BlockType DEEPSLATE = register("deepslate");
    public static final BlockType COBBLED_DEEPSLATE = register("cobbled_deepslate");
    public static final BlockType COBBLED_DEEPSLATE_STAIRS = register("cobbled_deepslate_stairs");
    public static final BlockType COBBLED_DEEPSLATE_SLAB = register("cobbled_deepslate_slab");
    public static final BlockType COBBLED_DEEPSLATE_WALL = register("cobbled_deepslate_wall");
    public static final BlockType POLISHED_DEEPSLATE = register("polished_deepslate");
    public static final BlockType POLISHED_DEEPSLATE_STAIRS = register("polished_deepslate_stairs");
    public static final BlockType POLISHED_DEEPSLATE_SLAB = register("polished_deepslate_slab");
    public static final BlockType POLISHED_DEEPSLATE_WALL = register("polished_deepslate_wall");
    public static final BlockType DEEPSLATE_TILES = register("deepslate_tiles");
    public static final BlockType DEEPSLATE_TILE_STAIRS = register("deepslate_tile_stairs");
    public static final BlockType DEEPSLATE_TILE_SLAB = register("deepslate_tile_slab");
    public static final BlockType DEEPSLATE_TILE_WALL = register("deepslate_tile_wall");
    public static final BlockType DEEPSLATE_BRICKS = register("deepslate_bricks");
    public static final BlockType DEEPSLATE_BRICK_STAIRS = register("deepslate_brick_stairs");
    public static final BlockType DEEPSLATE_BRICK_SLAB = register("deepslate_brick_slab");
    public static final BlockType DEEPSLATE_BRICK_WALL = register("deepslate_brick_wall");
    public static final BlockType CHISELED_DEEPSLATE = register("chiseled_deepslate");
    public static final BlockType CRACKED_DEEPSLATE_BRICKS = register("cracked_deepslate_bricks");
    public static final BlockType CRACKED_DEEPSLATE_TILES = register("cracked_deepslate_tiles");
    public static final BlockType INFESTED_DEEPSLATE = register("infested_deepslate");
    public static final BlockType SMOOTH_BASALT = register("smooth_basalt");
    public static final BlockType RAW_IRON_BLOCK = register("raw_iron_block");
    public static final BlockType RAW_COPPER_BLOCK = register("raw_copper_block");
    public static final BlockType RAW_GOLD_BLOCK = register("raw_gold_block");
    public static final BlockType POTTED_AZALEA_BUSH = register("potted_azalea_bush");
    public static final BlockType POTTED_FLOWERING_AZALEA_BUSH = register("potted_flowering_azalea_bush");
    public static final BlockType OCHRE_FROGLIGHT = register("ochre_froglight");
    public static final BlockType VERDANT_FROGLIGHT = register("verdant_froglight");
    public static final BlockType PEARLESCENT_FROGLIGHT = register("pearlescent_froglight");
    public static final BlockType FROGSPAWN = register("frogspawn");
    public static final BlockType REINFORCED_DEEPSLATE = register("reinforced_deepslate");
    public static final BlockType DECORATED_POT = register("decorated_pot");
    public static final BlockType CRAFTER = register("crafter");
    public static final BlockType TRIAL_SPAWNER = register("trial_spawner");

    public static BlockType register(String name) {
        var blockType = GsonDataHelper.fromJson("/minecraft/blocks.json", name, BlockType.class);
        blockType = blockType.withStatesData(BlockStates.fromJsonArray(
                blockType,
                GsonDataHelper.fromJson("/minecraft/blocks.json", name, JsonObject.class)
                        .getAsJsonArray("states")));

        FROM_ID.put(blockType.id(), blockType);
        FROM_NAME.put(blockType.name(), blockType);
        return blockType;
    }

    public static BlockType getById(int id) {
        return FROM_ID.get(id);
    }

    public static BlockType getByName(String name) {
        return FROM_NAME.get(name.replace("minecraft:", ""));
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof BlockType blockType)) return false;
        return id == blockType.id;
    }

    @Override
    public int hashCode() {
        return id;
    }

    public record OffsetData(float maxHorizontalOffset, float maxVerticalOffset, OffsetType offsetType) {
        public enum OffsetType {
            XZ,
            XYZ
        }
    }
}
