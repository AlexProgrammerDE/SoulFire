/*
 * ServerWrecker
 *
 * Copyright (C) 2023 ServerWrecker
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as
 * published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public
 * License along with this program.  If not, see
 * <http://www.gnu.org/licenses/gpl-3.0.html>.
 */
package net.pistonmaster.serverwrecker.data;

import java.util.ArrayList;
import java.util.List;

@SuppressWarnings("unused")
public record BlockType(int id, String name, String displayName, float hardness, int stackSize,
                        boolean diggable, boolean requiresCorrectTool, List<BlockShapeType> blockShapeTypes) {
    public static final List<BlockType> VALUES = new ArrayList<>();

    public static final BlockType AIR = register(new BlockType(0, "air", "Air", 0F, 64, true, false, BlockStateLoader.getBlockShapes("air")));
    public static final BlockType STONE = register(new BlockType(1, "stone", "Stone", 1.5F, 64, true, true, BlockStateLoader.getBlockShapes("stone")));
    public static final BlockType GRANITE = register(new BlockType(2, "granite", "Granite", 1.5F, 64, true, true, BlockStateLoader.getBlockShapes("granite")));
    public static final BlockType POLISHED_GRANITE = register(new BlockType(3, "polished_granite", "Polished Granite", 1.5F, 64, true, true, BlockStateLoader.getBlockShapes("polished_granite")));
    public static final BlockType DIORITE = register(new BlockType(4, "diorite", "Diorite", 1.5F, 64, true, true, BlockStateLoader.getBlockShapes("diorite")));
    public static final BlockType POLISHED_DIORITE = register(new BlockType(5, "polished_diorite", "Polished Diorite", 1.5F, 64, true, true, BlockStateLoader.getBlockShapes("polished_diorite")));
    public static final BlockType ANDESITE = register(new BlockType(6, "andesite", "Andesite", 1.5F, 64, true, true, BlockStateLoader.getBlockShapes("andesite")));
    public static final BlockType POLISHED_ANDESITE = register(new BlockType(7, "polished_andesite", "Polished Andesite", 1.5F, 64, true, true, BlockStateLoader.getBlockShapes("polished_andesite")));
    public static final BlockType GRASS_BLOCK = register(new BlockType(8, "grass_block", "Grass Block", 0.6F, 64, true, false, BlockStateLoader.getBlockShapes("grass_block")));
    public static final BlockType DIRT = register(new BlockType(9, "dirt", "Dirt", 0.5F, 64, true, false, BlockStateLoader.getBlockShapes("dirt")));
    public static final BlockType COARSE_DIRT = register(new BlockType(10, "coarse_dirt", "Coarse Dirt", 0.5F, 64, true, false, BlockStateLoader.getBlockShapes("coarse_dirt")));
    public static final BlockType PODZOL = register(new BlockType(11, "podzol", "Podzol", 0.5F, 64, true, false, BlockStateLoader.getBlockShapes("podzol")));
    public static final BlockType COBBLESTONE = register(new BlockType(12, "cobblestone", "Cobblestone", 2F, 64, true, true, BlockStateLoader.getBlockShapes("cobblestone")));
    public static final BlockType OAK_PLANKS = register(new BlockType(13, "oak_planks", "Oak Planks", 2F, 64, true, false, BlockStateLoader.getBlockShapes("oak_planks")));
    public static final BlockType SPRUCE_PLANKS = register(new BlockType(14, "spruce_planks", "Spruce Planks", 2F, 64, true, false, BlockStateLoader.getBlockShapes("spruce_planks")));
    public static final BlockType BIRCH_PLANKS = register(new BlockType(15, "birch_planks", "Birch Planks", 2F, 64, true, false, BlockStateLoader.getBlockShapes("birch_planks")));
    public static final BlockType JUNGLE_PLANKS = register(new BlockType(16, "jungle_planks", "Jungle Planks", 2F, 64, true, false, BlockStateLoader.getBlockShapes("jungle_planks")));
    public static final BlockType ACACIA_PLANKS = register(new BlockType(17, "acacia_planks", "Acacia Planks", 2F, 64, true, false, BlockStateLoader.getBlockShapes("acacia_planks")));
    public static final BlockType CHERRY_PLANKS = register(new BlockType(18, "cherry_planks", "Cherry Planks", 2F, 64, true, false, BlockStateLoader.getBlockShapes("cherry_planks")));
    public static final BlockType DARK_OAK_PLANKS = register(new BlockType(19, "dark_oak_planks", "Dark Oak Planks", 2F, 64, true, false, BlockStateLoader.getBlockShapes("dark_oak_planks")));
    public static final BlockType MANGROVE_PLANKS = register(new BlockType(20, "mangrove_planks", "Mangrove Planks", 2F, 64, true, false, BlockStateLoader.getBlockShapes("mangrove_planks")));
    public static final BlockType BAMBOO_PLANKS = register(new BlockType(21, "bamboo_planks", "Bamboo Planks", 2F, 64, true, false, BlockStateLoader.getBlockShapes("bamboo_planks")));
    public static final BlockType BAMBOO_MOSAIC = register(new BlockType(22, "bamboo_mosaic", "Bamboo Mosaic", 2F, 64, true, false, BlockStateLoader.getBlockShapes("bamboo_mosaic")));
    public static final BlockType OAK_SAPLING = register(new BlockType(23, "oak_sapling", "Oak Sapling", 0F, 64, true, false, BlockStateLoader.getBlockShapes("oak_sapling")));
    public static final BlockType SPRUCE_SAPLING = register(new BlockType(24, "spruce_sapling", "Spruce Sapling", 0F, 64, true, false, BlockStateLoader.getBlockShapes("spruce_sapling")));
    public static final BlockType BIRCH_SAPLING = register(new BlockType(25, "birch_sapling", "Birch Sapling", 0F, 64, true, false, BlockStateLoader.getBlockShapes("birch_sapling")));
    public static final BlockType JUNGLE_SAPLING = register(new BlockType(26, "jungle_sapling", "Jungle Sapling", 0F, 64, true, false, BlockStateLoader.getBlockShapes("jungle_sapling")));
    public static final BlockType ACACIA_SAPLING = register(new BlockType(27, "acacia_sapling", "Acacia Sapling", 0F, 64, true, false, BlockStateLoader.getBlockShapes("acacia_sapling")));
    public static final BlockType CHERRY_SAPLING = register(new BlockType(28, "cherry_sapling", "Cherry Sapling", 0F, 64, true, false, BlockStateLoader.getBlockShapes("cherry_sapling")));
    public static final BlockType DARK_OAK_SAPLING = register(new BlockType(29, "dark_oak_sapling", "Dark Oak Sapling", 0F, 64, true, false, BlockStateLoader.getBlockShapes("dark_oak_sapling")));
    public static final BlockType MANGROVE_PROPAGULE = register(new BlockType(30, "mangrove_propagule", "Mangrove Propagule", 0F, 64, true, false, BlockStateLoader.getBlockShapes("mangrove_propagule")));
    public static final BlockType BEDROCK = register(new BlockType(31, "bedrock", "Bedrock", -1F, 64, false, false, BlockStateLoader.getBlockShapes("bedrock")));
    public static final BlockType WATER = register(new BlockType(32, "water", "Water", 100F, 64, false, false, BlockStateLoader.getBlockShapes("water")));
    public static final BlockType LAVA = register(new BlockType(33, "lava", "Lava", 100F, 64, false, false, BlockStateLoader.getBlockShapes("lava")));
    public static final BlockType SAND = register(new BlockType(34, "sand", "Sand", 0.5F, 64, true, false, BlockStateLoader.getBlockShapes("sand")));
    public static final BlockType SUSPICIOUS_SAND = register(new BlockType(35, "suspicious_sand", "Suspicious Sand", 0.25F, 64, true, false, BlockStateLoader.getBlockShapes("suspicious_sand")));
    public static final BlockType RED_SAND = register(new BlockType(36, "red_sand", "Red Sand", 0.5F, 64, true, false, BlockStateLoader.getBlockShapes("red_sand")));
    public static final BlockType GRAVEL = register(new BlockType(37, "gravel", "Gravel", 0.6F, 64, true, false, BlockStateLoader.getBlockShapes("gravel")));
    public static final BlockType SUSPICIOUS_GRAVEL = register(new BlockType(38, "suspicious_gravel", "Suspicious Gravel", 0.25F, 64, true, false, BlockStateLoader.getBlockShapes("suspicious_gravel")));
    public static final BlockType GOLD_ORE = register(new BlockType(39, "gold_ore", "Gold Ore", 3F, 64, true, true, BlockStateLoader.getBlockShapes("gold_ore")));
    public static final BlockType DEEPSLATE_GOLD_ORE = register(new BlockType(40, "deepslate_gold_ore", "Deepslate Gold Ore", 4.5F, 64, true, true, BlockStateLoader.getBlockShapes("deepslate_gold_ore")));
    public static final BlockType IRON_ORE = register(new BlockType(41, "iron_ore", "Iron Ore", 3F, 64, true, true, BlockStateLoader.getBlockShapes("iron_ore")));
    public static final BlockType DEEPSLATE_IRON_ORE = register(new BlockType(42, "deepslate_iron_ore", "Deepslate Iron Ore", 4.5F, 64, true, true, BlockStateLoader.getBlockShapes("deepslate_iron_ore")));
    public static final BlockType COAL_ORE = register(new BlockType(43, "coal_ore", "Coal Ore", 3F, 64, true, true, BlockStateLoader.getBlockShapes("coal_ore")));
    public static final BlockType DEEPSLATE_COAL_ORE = register(new BlockType(44, "deepslate_coal_ore", "Deepslate Coal Ore", 4.5F, 64, true, true, BlockStateLoader.getBlockShapes("deepslate_coal_ore")));
    public static final BlockType NETHER_GOLD_ORE = register(new BlockType(45, "nether_gold_ore", "Nether Gold Ore", 3F, 64, true, true, BlockStateLoader.getBlockShapes("nether_gold_ore")));
    public static final BlockType OAK_LOG = register(new BlockType(46, "oak_log", "Oak Log", 2F, 64, true, false, BlockStateLoader.getBlockShapes("oak_log")));
    public static final BlockType SPRUCE_LOG = register(new BlockType(47, "spruce_log", "Spruce Log", 2F, 64, true, false, BlockStateLoader.getBlockShapes("spruce_log")));
    public static final BlockType BIRCH_LOG = register(new BlockType(48, "birch_log", "Birch Log", 2F, 64, true, false, BlockStateLoader.getBlockShapes("birch_log")));
    public static final BlockType JUNGLE_LOG = register(new BlockType(49, "jungle_log", "Jungle Log", 2F, 64, true, false, BlockStateLoader.getBlockShapes("jungle_log")));
    public static final BlockType ACACIA_LOG = register(new BlockType(50, "acacia_log", "Acacia Log", 2F, 64, true, false, BlockStateLoader.getBlockShapes("acacia_log")));
    public static final BlockType CHERRY_LOG = register(new BlockType(51, "cherry_log", "Cherry Log", 2F, 64, true, false, BlockStateLoader.getBlockShapes("cherry_log")));
    public static final BlockType DARK_OAK_LOG = register(new BlockType(52, "dark_oak_log", "Dark Oak Log", 2F, 64, true, false, BlockStateLoader.getBlockShapes("dark_oak_log")));
    public static final BlockType MANGROVE_LOG = register(new BlockType(53, "mangrove_log", "Mangrove Log", 2F, 64, true, false, BlockStateLoader.getBlockShapes("mangrove_log")));
    public static final BlockType MANGROVE_ROOTS = register(new BlockType(54, "mangrove_roots", "Mangrove Roots", 0.7F, 64, true, false, BlockStateLoader.getBlockShapes("mangrove_roots")));
    public static final BlockType MUDDY_MANGROVE_ROOTS = register(new BlockType(55, "muddy_mangrove_roots", "Muddy Mangrove Roots", 0.7F, 64, true, false, BlockStateLoader.getBlockShapes("muddy_mangrove_roots")));
    public static final BlockType BAMBOO_BLOCK = register(new BlockType(56, "bamboo_block", "Block of Bamboo", 2F, 64, true, false, BlockStateLoader.getBlockShapes("bamboo_block")));
    public static final BlockType STRIPPED_SPRUCE_LOG = register(new BlockType(57, "stripped_spruce_log", "Stripped Spruce Log", 2F, 64, true, false, BlockStateLoader.getBlockShapes("stripped_spruce_log")));
    public static final BlockType STRIPPED_BIRCH_LOG = register(new BlockType(58, "stripped_birch_log", "Stripped Birch Log", 2F, 64, true, false, BlockStateLoader.getBlockShapes("stripped_birch_log")));
    public static final BlockType STRIPPED_JUNGLE_LOG = register(new BlockType(59, "stripped_jungle_log", "Stripped Jungle Log", 2F, 64, true, false, BlockStateLoader.getBlockShapes("stripped_jungle_log")));
    public static final BlockType STRIPPED_ACACIA_LOG = register(new BlockType(60, "stripped_acacia_log", "Stripped Acacia Log", 2F, 64, true, false, BlockStateLoader.getBlockShapes("stripped_acacia_log")));
    public static final BlockType STRIPPED_CHERRY_LOG = register(new BlockType(61, "stripped_cherry_log", "Stripped Cherry Log", 2F, 64, true, false, BlockStateLoader.getBlockShapes("stripped_cherry_log")));
    public static final BlockType STRIPPED_DARK_OAK_LOG = register(new BlockType(62, "stripped_dark_oak_log", "Stripped Dark Oak Log", 2F, 64, true, false, BlockStateLoader.getBlockShapes("stripped_dark_oak_log")));
    public static final BlockType STRIPPED_OAK_LOG = register(new BlockType(63, "stripped_oak_log", "Stripped Oak Log", 2F, 64, true, false, BlockStateLoader.getBlockShapes("stripped_oak_log")));
    public static final BlockType STRIPPED_MANGROVE_LOG = register(new BlockType(64, "stripped_mangrove_log", "Stripped Mangrove Log", 2F, 64, true, false, BlockStateLoader.getBlockShapes("stripped_mangrove_log")));
    public static final BlockType STRIPPED_BAMBOO_BLOCK = register(new BlockType(65, "stripped_bamboo_block", "Block of Stripped Bamboo", 2F, 64, true, false, BlockStateLoader.getBlockShapes("stripped_bamboo_block")));
    public static final BlockType OAK_WOOD = register(new BlockType(66, "oak_wood", "Oak Wood", 2F, 64, true, false, BlockStateLoader.getBlockShapes("oak_wood")));
    public static final BlockType SPRUCE_WOOD = register(new BlockType(67, "spruce_wood", "Spruce Wood", 2F, 64, true, false, BlockStateLoader.getBlockShapes("spruce_wood")));
    public static final BlockType BIRCH_WOOD = register(new BlockType(68, "birch_wood", "Birch Wood", 2F, 64, true, false, BlockStateLoader.getBlockShapes("birch_wood")));
    public static final BlockType JUNGLE_WOOD = register(new BlockType(69, "jungle_wood", "Jungle Wood", 2F, 64, true, false, BlockStateLoader.getBlockShapes("jungle_wood")));
    public static final BlockType ACACIA_WOOD = register(new BlockType(70, "acacia_wood", "Acacia Wood", 2F, 64, true, false, BlockStateLoader.getBlockShapes("acacia_wood")));
    public static final BlockType CHERRY_WOOD = register(new BlockType(71, "cherry_wood", "Cherry Wood", 2F, 64, true, false, BlockStateLoader.getBlockShapes("cherry_wood")));
    public static final BlockType DARK_OAK_WOOD = register(new BlockType(72, "dark_oak_wood", "Dark Oak Wood", 2F, 64, true, false, BlockStateLoader.getBlockShapes("dark_oak_wood")));
    public static final BlockType MANGROVE_WOOD = register(new BlockType(73, "mangrove_wood", "Mangrove Wood", 2F, 64, true, false, BlockStateLoader.getBlockShapes("mangrove_wood")));
    public static final BlockType STRIPPED_OAK_WOOD = register(new BlockType(74, "stripped_oak_wood", "Stripped Oak Wood", 2F, 64, true, false, BlockStateLoader.getBlockShapes("stripped_oak_wood")));
    public static final BlockType STRIPPED_SPRUCE_WOOD = register(new BlockType(75, "stripped_spruce_wood", "Stripped Spruce Wood", 2F, 64, true, false, BlockStateLoader.getBlockShapes("stripped_spruce_wood")));
    public static final BlockType STRIPPED_BIRCH_WOOD = register(new BlockType(76, "stripped_birch_wood", "Stripped Birch Wood", 2F, 64, true, false, BlockStateLoader.getBlockShapes("stripped_birch_wood")));
    public static final BlockType STRIPPED_JUNGLE_WOOD = register(new BlockType(77, "stripped_jungle_wood", "Stripped Jungle Wood", 2F, 64, true, false, BlockStateLoader.getBlockShapes("stripped_jungle_wood")));
    public static final BlockType STRIPPED_ACACIA_WOOD = register(new BlockType(78, "stripped_acacia_wood", "Stripped Acacia Wood", 2F, 64, true, false, BlockStateLoader.getBlockShapes("stripped_acacia_wood")));
    public static final BlockType STRIPPED_CHERRY_WOOD = register(new BlockType(79, "stripped_cherry_wood", "Stripped Cherry Wood", 2F, 64, true, false, BlockStateLoader.getBlockShapes("stripped_cherry_wood")));
    public static final BlockType STRIPPED_DARK_OAK_WOOD = register(new BlockType(80, "stripped_dark_oak_wood", "Stripped Dark Oak Wood", 2F, 64, true, false, BlockStateLoader.getBlockShapes("stripped_dark_oak_wood")));
    public static final BlockType STRIPPED_MANGROVE_WOOD = register(new BlockType(81, "stripped_mangrove_wood", "Stripped Mangrove Wood", 2F, 64, true, false, BlockStateLoader.getBlockShapes("stripped_mangrove_wood")));
    public static final BlockType OAK_LEAVES = register(new BlockType(82, "oak_leaves", "Oak Leaves", 0.2F, 64, true, false, BlockStateLoader.getBlockShapes("oak_leaves")));
    public static final BlockType SPRUCE_LEAVES = register(new BlockType(83, "spruce_leaves", "Spruce Leaves", 0.2F, 64, true, false, BlockStateLoader.getBlockShapes("spruce_leaves")));
    public static final BlockType BIRCH_LEAVES = register(new BlockType(84, "birch_leaves", "Birch Leaves", 0.2F, 64, true, false, BlockStateLoader.getBlockShapes("birch_leaves")));
    public static final BlockType JUNGLE_LEAVES = register(new BlockType(85, "jungle_leaves", "Jungle Leaves", 0.2F, 64, true, false, BlockStateLoader.getBlockShapes("jungle_leaves")));
    public static final BlockType ACACIA_LEAVES = register(new BlockType(86, "acacia_leaves", "Acacia Leaves", 0.2F, 64, true, false, BlockStateLoader.getBlockShapes("acacia_leaves")));
    public static final BlockType CHERRY_LEAVES = register(new BlockType(87, "cherry_leaves", "Cherry Leaves", 0.2F, 64, true, false, BlockStateLoader.getBlockShapes("cherry_leaves")));
    public static final BlockType DARK_OAK_LEAVES = register(new BlockType(88, "dark_oak_leaves", "Dark Oak Leaves", 0.2F, 64, true, false, BlockStateLoader.getBlockShapes("dark_oak_leaves")));
    public static final BlockType MANGROVE_LEAVES = register(new BlockType(89, "mangrove_leaves", "Mangrove Leaves", 0.2F, 64, true, false, BlockStateLoader.getBlockShapes("mangrove_leaves")));
    public static final BlockType AZALEA_LEAVES = register(new BlockType(90, "azalea_leaves", "Azalea Leaves", 0.2F, 64, true, false, BlockStateLoader.getBlockShapes("azalea_leaves")));
    public static final BlockType FLOWERING_AZALEA_LEAVES = register(new BlockType(91, "flowering_azalea_leaves", "Flowering Azalea Leaves", 0.2F, 64, true, false, BlockStateLoader.getBlockShapes("flowering_azalea_leaves")));
    public static final BlockType SPONGE = register(new BlockType(92, "sponge", "Sponge", 0.6F, 64, true, false, BlockStateLoader.getBlockShapes("sponge")));
    public static final BlockType WET_SPONGE = register(new BlockType(93, "wet_sponge", "Wet Sponge", 0.6F, 64, true, false, BlockStateLoader.getBlockShapes("wet_sponge")));
    public static final BlockType GLASS = register(new BlockType(94, "glass", "Glass", 0.3F, 64, true, false, BlockStateLoader.getBlockShapes("glass")));
    public static final BlockType LAPIS_ORE = register(new BlockType(95, "lapis_ore", "Lapis Lazuli Ore", 3F, 64, true, true, BlockStateLoader.getBlockShapes("lapis_ore")));
    public static final BlockType DEEPSLATE_LAPIS_ORE = register(new BlockType(96, "deepslate_lapis_ore", "Deepslate Lapis Lazuli Ore", 4.5F, 64, true, true, BlockStateLoader.getBlockShapes("deepslate_lapis_ore")));
    public static final BlockType LAPIS_BLOCK = register(new BlockType(97, "lapis_block", "Block of Lapis Lazuli", 3F, 64, true, true, BlockStateLoader.getBlockShapes("lapis_block")));
    public static final BlockType DISPENSER = register(new BlockType(98, "dispenser", "Dispenser", 3.5F, 64, true, true, BlockStateLoader.getBlockShapes("dispenser")));
    public static final BlockType SANDSTONE = register(new BlockType(99, "sandstone", "Sandstone", 0.8F, 64, true, true, BlockStateLoader.getBlockShapes("sandstone")));
    public static final BlockType CHISELED_SANDSTONE = register(new BlockType(100, "chiseled_sandstone", "Chiseled Sandstone", 0.8F, 64, true, true, BlockStateLoader.getBlockShapes("chiseled_sandstone")));
    public static final BlockType CUT_SANDSTONE = register(new BlockType(101, "cut_sandstone", "Cut Sandstone", 0.8F, 64, true, true, BlockStateLoader.getBlockShapes("cut_sandstone")));
    public static final BlockType NOTE_BLOCK = register(new BlockType(102, "note_block", "Note Block", 0.8F, 64, true, false, BlockStateLoader.getBlockShapes("note_block")));
    public static final BlockType WHITE_BED = register(new BlockType(103, "white_bed", "White Bed", 0.2F, 1, true, false, BlockStateLoader.getBlockShapes("white_bed")));
    public static final BlockType ORANGE_BED = register(new BlockType(104, "orange_bed", "Orange Bed", 0.2F, 1, true, false, BlockStateLoader.getBlockShapes("orange_bed")));
    public static final BlockType MAGENTA_BED = register(new BlockType(105, "magenta_bed", "Magenta Bed", 0.2F, 1, true, false, BlockStateLoader.getBlockShapes("magenta_bed")));
    public static final BlockType LIGHT_BLUE_BED = register(new BlockType(106, "light_blue_bed", "Light Blue Bed", 0.2F, 1, true, false, BlockStateLoader.getBlockShapes("light_blue_bed")));
    public static final BlockType YELLOW_BED = register(new BlockType(107, "yellow_bed", "Yellow Bed", 0.2F, 1, true, false, BlockStateLoader.getBlockShapes("yellow_bed")));
    public static final BlockType LIME_BED = register(new BlockType(108, "lime_bed", "Lime Bed", 0.2F, 1, true, false, BlockStateLoader.getBlockShapes("lime_bed")));
    public static final BlockType PINK_BED = register(new BlockType(109, "pink_bed", "Pink Bed", 0.2F, 1, true, false, BlockStateLoader.getBlockShapes("pink_bed")));
    public static final BlockType GRAY_BED = register(new BlockType(110, "gray_bed", "Gray Bed", 0.2F, 1, true, false, BlockStateLoader.getBlockShapes("gray_bed")));
    public static final BlockType LIGHT_GRAY_BED = register(new BlockType(111, "light_gray_bed", "Light Gray Bed", 0.2F, 1, true, false, BlockStateLoader.getBlockShapes("light_gray_bed")));
    public static final BlockType CYAN_BED = register(new BlockType(112, "cyan_bed", "Cyan Bed", 0.2F, 1, true, false, BlockStateLoader.getBlockShapes("cyan_bed")));
    public static final BlockType PURPLE_BED = register(new BlockType(113, "purple_bed", "Purple Bed", 0.2F, 1, true, false, BlockStateLoader.getBlockShapes("purple_bed")));
    public static final BlockType BLUE_BED = register(new BlockType(114, "blue_bed", "Blue Bed", 0.2F, 1, true, false, BlockStateLoader.getBlockShapes("blue_bed")));
    public static final BlockType BROWN_BED = register(new BlockType(115, "brown_bed", "Brown Bed", 0.2F, 1, true, false, BlockStateLoader.getBlockShapes("brown_bed")));
    public static final BlockType GREEN_BED = register(new BlockType(116, "green_bed", "Green Bed", 0.2F, 1, true, false, BlockStateLoader.getBlockShapes("green_bed")));
    public static final BlockType RED_BED = register(new BlockType(117, "red_bed", "Red Bed", 0.2F, 1, true, false, BlockStateLoader.getBlockShapes("red_bed")));
    public static final BlockType BLACK_BED = register(new BlockType(118, "black_bed", "Black Bed", 0.2F, 1, true, false, BlockStateLoader.getBlockShapes("black_bed")));
    public static final BlockType POWERED_RAIL = register(new BlockType(119, "powered_rail", "Powered Rail", 0.7F, 64, true, false, BlockStateLoader.getBlockShapes("powered_rail")));
    public static final BlockType DETECTOR_RAIL = register(new BlockType(120, "detector_rail", "Detector Rail", 0.7F, 64, true, false, BlockStateLoader.getBlockShapes("detector_rail")));
    public static final BlockType STICKY_PISTON = register(new BlockType(121, "sticky_piston", "Sticky Piston", 1.5F, 64, true, false, BlockStateLoader.getBlockShapes("sticky_piston")));
    public static final BlockType COBWEB = register(new BlockType(122, "cobweb", "Cobweb", 4F, 64, true, true, BlockStateLoader.getBlockShapes("cobweb")));
    public static final BlockType GRASS = register(new BlockType(123, "grass", "Grass", 0F, 64, true, false, BlockStateLoader.getBlockShapes("grass")));
    public static final BlockType FERN = register(new BlockType(124, "fern", "Fern", 0F, 64, true, false, BlockStateLoader.getBlockShapes("fern")));
    public static final BlockType DEAD_BUSH = register(new BlockType(125, "dead_bush", "Dead Bush", 0F, 64, true, false, BlockStateLoader.getBlockShapes("dead_bush")));
    public static final BlockType SEAGRASS = register(new BlockType(126, "seagrass", "Seagrass", 0F, 64, true, false, BlockStateLoader.getBlockShapes("seagrass")));
    public static final BlockType TALL_SEAGRASS = register(new BlockType(127, "tall_seagrass", "Tall Seagrass", 0F, 64, true, false, BlockStateLoader.getBlockShapes("tall_seagrass")));
    public static final BlockType PISTON = register(new BlockType(128, "piston", "Piston", 1.5F, 64, true, false, BlockStateLoader.getBlockShapes("piston")));
    public static final BlockType PISTON_HEAD = register(new BlockType(129, "piston_head", "Piston Head", 1.5F, 64, true, false, BlockStateLoader.getBlockShapes("piston_head")));
    public static final BlockType WHITE_WOOL = register(new BlockType(130, "white_wool", "White Wool", 0.8F, 64, true, false, BlockStateLoader.getBlockShapes("white_wool")));
    public static final BlockType ORANGE_WOOL = register(new BlockType(131, "orange_wool", "Orange Wool", 0.8F, 64, true, false, BlockStateLoader.getBlockShapes("orange_wool")));
    public static final BlockType MAGENTA_WOOL = register(new BlockType(132, "magenta_wool", "Magenta Wool", 0.8F, 64, true, false, BlockStateLoader.getBlockShapes("magenta_wool")));
    public static final BlockType LIGHT_BLUE_WOOL = register(new BlockType(133, "light_blue_wool", "Light Blue Wool", 0.8F, 64, true, false, BlockStateLoader.getBlockShapes("light_blue_wool")));
    public static final BlockType YELLOW_WOOL = register(new BlockType(134, "yellow_wool", "Yellow Wool", 0.8F, 64, true, false, BlockStateLoader.getBlockShapes("yellow_wool")));
    public static final BlockType LIME_WOOL = register(new BlockType(135, "lime_wool", "Lime Wool", 0.8F, 64, true, false, BlockStateLoader.getBlockShapes("lime_wool")));
    public static final BlockType PINK_WOOL = register(new BlockType(136, "pink_wool", "Pink Wool", 0.8F, 64, true, false, BlockStateLoader.getBlockShapes("pink_wool")));
    public static final BlockType GRAY_WOOL = register(new BlockType(137, "gray_wool", "Gray Wool", 0.8F, 64, true, false, BlockStateLoader.getBlockShapes("gray_wool")));
    public static final BlockType LIGHT_GRAY_WOOL = register(new BlockType(138, "light_gray_wool", "Light Gray Wool", 0.8F, 64, true, false, BlockStateLoader.getBlockShapes("light_gray_wool")));
    public static final BlockType CYAN_WOOL = register(new BlockType(139, "cyan_wool", "Cyan Wool", 0.8F, 64, true, false, BlockStateLoader.getBlockShapes("cyan_wool")));
    public static final BlockType PURPLE_WOOL = register(new BlockType(140, "purple_wool", "Purple Wool", 0.8F, 64, true, false, BlockStateLoader.getBlockShapes("purple_wool")));
    public static final BlockType BLUE_WOOL = register(new BlockType(141, "blue_wool", "Blue Wool", 0.8F, 64, true, false, BlockStateLoader.getBlockShapes("blue_wool")));
    public static final BlockType BROWN_WOOL = register(new BlockType(142, "brown_wool", "Brown Wool", 0.8F, 64, true, false, BlockStateLoader.getBlockShapes("brown_wool")));
    public static final BlockType GREEN_WOOL = register(new BlockType(143, "green_wool", "Green Wool", 0.8F, 64, true, false, BlockStateLoader.getBlockShapes("green_wool")));
    public static final BlockType RED_WOOL = register(new BlockType(144, "red_wool", "Red Wool", 0.8F, 64, true, false, BlockStateLoader.getBlockShapes("red_wool")));
    public static final BlockType BLACK_WOOL = register(new BlockType(145, "black_wool", "Black Wool", 0.8F, 64, true, false, BlockStateLoader.getBlockShapes("black_wool")));
    public static final BlockType MOVING_PISTON = register(new BlockType(146, "moving_piston", "Moving Piston", -1F, 64, false, false, BlockStateLoader.getBlockShapes("moving_piston")));
    public static final BlockType DANDELION = register(new BlockType(147, "dandelion", "Dandelion", 0F, 64, true, false, BlockStateLoader.getBlockShapes("dandelion")));
    public static final BlockType TORCHFLOWER = register(new BlockType(148, "torchflower", "Torchflower", 0F, 64, true, false, BlockStateLoader.getBlockShapes("torchflower")));
    public static final BlockType POPPY = register(new BlockType(149, "poppy", "Poppy", 0F, 64, true, false, BlockStateLoader.getBlockShapes("poppy")));
    public static final BlockType BLUE_ORCHID = register(new BlockType(150, "blue_orchid", "Blue Orchid", 0F, 64, true, false, BlockStateLoader.getBlockShapes("blue_orchid")));
    public static final BlockType ALLIUM = register(new BlockType(151, "allium", "Allium", 0F, 64, true, false, BlockStateLoader.getBlockShapes("allium")));
    public static final BlockType AZURE_BLUET = register(new BlockType(152, "azure_bluet", "Azure Bluet", 0F, 64, true, false, BlockStateLoader.getBlockShapes("azure_bluet")));
    public static final BlockType RED_TULIP = register(new BlockType(153, "red_tulip", "Red Tulip", 0F, 64, true, false, BlockStateLoader.getBlockShapes("red_tulip")));
    public static final BlockType ORANGE_TULIP = register(new BlockType(154, "orange_tulip", "Orange Tulip", 0F, 64, true, false, BlockStateLoader.getBlockShapes("orange_tulip")));
    public static final BlockType WHITE_TULIP = register(new BlockType(155, "white_tulip", "White Tulip", 0F, 64, true, false, BlockStateLoader.getBlockShapes("white_tulip")));
    public static final BlockType PINK_TULIP = register(new BlockType(156, "pink_tulip", "Pink Tulip", 0F, 64, true, false, BlockStateLoader.getBlockShapes("pink_tulip")));
    public static final BlockType OXEYE_DAISY = register(new BlockType(157, "oxeye_daisy", "Oxeye Daisy", 0F, 64, true, false, BlockStateLoader.getBlockShapes("oxeye_daisy")));
    public static final BlockType CORNFLOWER = register(new BlockType(158, "cornflower", "Cornflower", 0F, 64, true, false, BlockStateLoader.getBlockShapes("cornflower")));
    public static final BlockType WITHER_ROSE = register(new BlockType(159, "wither_rose", "Wither Rose", 0F, 64, true, false, BlockStateLoader.getBlockShapes("wither_rose")));
    public static final BlockType LILY_OF_THE_VALLEY = register(new BlockType(160, "lily_of_the_valley", "Lily of the Valley", 0F, 64, true, false, BlockStateLoader.getBlockShapes("lily_of_the_valley")));
    public static final BlockType BROWN_MUSHROOM = register(new BlockType(161, "brown_mushroom", "Brown Mushroom", 0F, 64, true, false, BlockStateLoader.getBlockShapes("brown_mushroom")));
    public static final BlockType RED_MUSHROOM = register(new BlockType(162, "red_mushroom", "Red Mushroom", 0F, 64, true, false, BlockStateLoader.getBlockShapes("red_mushroom")));
    public static final BlockType GOLD_BLOCK = register(new BlockType(163, "gold_block", "Block of Gold", 3F, 64, true, true, BlockStateLoader.getBlockShapes("gold_block")));
    public static final BlockType IRON_BLOCK = register(new BlockType(164, "iron_block", "Block of Iron", 5F, 64, true, true, BlockStateLoader.getBlockShapes("iron_block")));
    public static final BlockType BRICKS = register(new BlockType(165, "bricks", "Bricks", 2F, 64, true, true, BlockStateLoader.getBlockShapes("bricks")));
    public static final BlockType TNT = register(new BlockType(166, "tnt", "TNT", 0F, 64, true, false, BlockStateLoader.getBlockShapes("tnt")));
    public static final BlockType BOOKSHELF = register(new BlockType(167, "bookshelf", "Bookshelf", 1.5F, 64, true, false, BlockStateLoader.getBlockShapes("bookshelf")));
    public static final BlockType CHISELED_BOOKSHELF = register(new BlockType(168, "chiseled_bookshelf", "Chiseled Bookshelf", 1.5F, 64, true, false, BlockStateLoader.getBlockShapes("chiseled_bookshelf")));
    public static final BlockType MOSSY_COBBLESTONE = register(new BlockType(169, "mossy_cobblestone", "Mossy Cobblestone", 2F, 64, true, true, BlockStateLoader.getBlockShapes("mossy_cobblestone")));
    public static final BlockType OBSIDIAN = register(new BlockType(170, "obsidian", "Obsidian", 50F, 64, true, true, BlockStateLoader.getBlockShapes("obsidian")));
    public static final BlockType TORCH = register(new BlockType(171, "torch", "Torch", 0F, 64, true, false, BlockStateLoader.getBlockShapes("torch")));
    public static final BlockType WALL_TORCH = register(new BlockType(172, "wall_torch", "Wall Torch", 0F, 64, true, false, BlockStateLoader.getBlockShapes("wall_torch")));
    public static final BlockType FIRE = register(new BlockType(173, "fire", "Fire", 0F, 64, true, false, BlockStateLoader.getBlockShapes("fire")));
    public static final BlockType SOUL_FIRE = register(new BlockType(174, "soul_fire", "Soul Fire", 0F, 64, true, false, BlockStateLoader.getBlockShapes("soul_fire")));
    public static final BlockType SPAWNER = register(new BlockType(175, "spawner", "Monster Spawner", 5F, 64, true, true, BlockStateLoader.getBlockShapes("spawner")));
    public static final BlockType OAK_STAIRS = register(new BlockType(176, "oak_stairs", "Oak Stairs", 2F, 64, true, false, BlockStateLoader.getBlockShapes("oak_stairs")));
    public static final BlockType CHEST = register(new BlockType(177, "chest", "Chest", 2.5F, 64, true, false, BlockStateLoader.getBlockShapes("chest")));
    public static final BlockType REDSTONE_WIRE = register(new BlockType(178, "redstone_wire", "Redstone Wire", 0F, 64, true, false, BlockStateLoader.getBlockShapes("redstone_wire")));
    public static final BlockType DIAMOND_ORE = register(new BlockType(179, "diamond_ore", "Diamond Ore", 3F, 64, true, true, BlockStateLoader.getBlockShapes("diamond_ore")));
    public static final BlockType DEEPSLATE_DIAMOND_ORE = register(new BlockType(180, "deepslate_diamond_ore", "Deepslate Diamond Ore", 4.5F, 64, true, true, BlockStateLoader.getBlockShapes("deepslate_diamond_ore")));
    public static final BlockType DIAMOND_BLOCK = register(new BlockType(181, "diamond_block", "Block of Diamond", 5F, 64, true, true, BlockStateLoader.getBlockShapes("diamond_block")));
    public static final BlockType CRAFTING_TABLE = register(new BlockType(182, "crafting_table", "Crafting Table", 2.5F, 64, true, false, BlockStateLoader.getBlockShapes("crafting_table")));
    public static final BlockType WHEAT = register(new BlockType(183, "wheat", "Wheat Crops", 0F, 64, true, false, BlockStateLoader.getBlockShapes("wheat")));
    public static final BlockType FARMLAND = register(new BlockType(184, "farmland", "Farmland", 0.6F, 64, true, false, BlockStateLoader.getBlockShapes("farmland")));
    public static final BlockType FURNACE = register(new BlockType(185, "furnace", "Furnace", 3.5F, 64, true, true, BlockStateLoader.getBlockShapes("furnace")));
    public static final BlockType OAK_SIGN = register(new BlockType(186, "oak_sign", "Oak Sign", 1F, 16, true, false, BlockStateLoader.getBlockShapes("oak_sign")));
    public static final BlockType SPRUCE_SIGN = register(new BlockType(187, "spruce_sign", "Spruce Sign", 1F, 16, true, false, BlockStateLoader.getBlockShapes("spruce_sign")));
    public static final BlockType BIRCH_SIGN = register(new BlockType(188, "birch_sign", "Birch Sign", 1F, 16, true, false, BlockStateLoader.getBlockShapes("birch_sign")));
    public static final BlockType ACACIA_SIGN = register(new BlockType(189, "acacia_sign", "Acacia Sign", 1F, 16, true, false, BlockStateLoader.getBlockShapes("acacia_sign")));
    public static final BlockType CHERRY_SIGN = register(new BlockType(190, "cherry_sign", "Cherry Sign", 1F, 16, true, false, BlockStateLoader.getBlockShapes("cherry_sign")));
    public static final BlockType JUNGLE_SIGN = register(new BlockType(191, "jungle_sign", "Jungle Sign", 1F, 16, true, false, BlockStateLoader.getBlockShapes("jungle_sign")));
    public static final BlockType DARK_OAK_SIGN = register(new BlockType(192, "dark_oak_sign", "Dark Oak Sign", 1F, 16, true, false, BlockStateLoader.getBlockShapes("dark_oak_sign")));
    public static final BlockType MANGROVE_SIGN = register(new BlockType(193, "mangrove_sign", "Mangrove Sign", 1F, 16, true, false, BlockStateLoader.getBlockShapes("mangrove_sign")));
    public static final BlockType BAMBOO_SIGN = register(new BlockType(194, "bamboo_sign", "Bamboo Sign", 1F, 16, true, false, BlockStateLoader.getBlockShapes("bamboo_sign")));
    public static final BlockType OAK_DOOR = register(new BlockType(195, "oak_door", "Oak Door", 3F, 64, true, false, BlockStateLoader.getBlockShapes("oak_door")));
    public static final BlockType LADDER = register(new BlockType(196, "ladder", "Ladder", 0.4F, 64, true, false, BlockStateLoader.getBlockShapes("ladder")));
    public static final BlockType RAIL = register(new BlockType(197, "rail", "Rail", 0.7F, 64, true, false, BlockStateLoader.getBlockShapes("rail")));
    public static final BlockType COBBLESTONE_STAIRS = register(new BlockType(198, "cobblestone_stairs", "Cobblestone Stairs", 2F, 64, true, true, BlockStateLoader.getBlockShapes("cobblestone_stairs")));
    public static final BlockType OAK_WALL_SIGN = register(new BlockType(199, "oak_wall_sign", "Oak Wall Sign", 1F, 16, true, false, BlockStateLoader.getBlockShapes("oak_wall_sign")));
    public static final BlockType SPRUCE_WALL_SIGN = register(new BlockType(200, "spruce_wall_sign", "Spruce Wall Sign", 1F, 16, true, false, BlockStateLoader.getBlockShapes("spruce_wall_sign")));
    public static final BlockType BIRCH_WALL_SIGN = register(new BlockType(201, "birch_wall_sign", "Birch Wall Sign", 1F, 16, true, false, BlockStateLoader.getBlockShapes("birch_wall_sign")));
    public static final BlockType ACACIA_WALL_SIGN = register(new BlockType(202, "acacia_wall_sign", "Acacia Wall Sign", 1F, 16, true, false, BlockStateLoader.getBlockShapes("acacia_wall_sign")));
    public static final BlockType CHERRY_WALL_SIGN = register(new BlockType(203, "cherry_wall_sign", "Cherry Wall Sign", 1F, 16, true, false, BlockStateLoader.getBlockShapes("cherry_wall_sign")));
    public static final BlockType JUNGLE_WALL_SIGN = register(new BlockType(204, "jungle_wall_sign", "Jungle Wall Sign", 1F, 16, true, false, BlockStateLoader.getBlockShapes("jungle_wall_sign")));
    public static final BlockType DARK_OAK_WALL_SIGN = register(new BlockType(205, "dark_oak_wall_sign", "Dark Oak Wall Sign", 1F, 16, true, false, BlockStateLoader.getBlockShapes("dark_oak_wall_sign")));
    public static final BlockType MANGROVE_WALL_SIGN = register(new BlockType(206, "mangrove_wall_sign", "Mangrove Wall Sign", 1F, 16, true, false, BlockStateLoader.getBlockShapes("mangrove_wall_sign")));
    public static final BlockType BAMBOO_WALL_SIGN = register(new BlockType(207, "bamboo_wall_sign", "Bamboo Wall Sign", 1F, 16, true, false, BlockStateLoader.getBlockShapes("bamboo_wall_sign")));
    public static final BlockType OAK_HANGING_SIGN = register(new BlockType(208, "oak_hanging_sign", "Oak Hanging Sign", 1F, 16, true, false, BlockStateLoader.getBlockShapes("oak_hanging_sign")));
    public static final BlockType SPRUCE_HANGING_SIGN = register(new BlockType(209, "spruce_hanging_sign", "Spruce Hanging Sign", 1F, 16, true, false, BlockStateLoader.getBlockShapes("spruce_hanging_sign")));
    public static final BlockType BIRCH_HANGING_SIGN = register(new BlockType(210, "birch_hanging_sign", "Birch Hanging Sign", 1F, 16, true, false, BlockStateLoader.getBlockShapes("birch_hanging_sign")));
    public static final BlockType ACACIA_HANGING_SIGN = register(new BlockType(211, "acacia_hanging_sign", "Acacia Hanging Sign", 1F, 16, true, false, BlockStateLoader.getBlockShapes("acacia_hanging_sign")));
    public static final BlockType CHERRY_HANGING_SIGN = register(new BlockType(212, "cherry_hanging_sign", "Cherry Hanging Sign", 1F, 16, true, false, BlockStateLoader.getBlockShapes("cherry_hanging_sign")));
    public static final BlockType JUNGLE_HANGING_SIGN = register(new BlockType(213, "jungle_hanging_sign", "Jungle Hanging Sign", 1F, 16, true, false, BlockStateLoader.getBlockShapes("jungle_hanging_sign")));
    public static final BlockType DARK_OAK_HANGING_SIGN = register(new BlockType(214, "dark_oak_hanging_sign", "Dark Oak Hanging Sign", 1F, 16, true, false, BlockStateLoader.getBlockShapes("dark_oak_hanging_sign")));
    public static final BlockType CRIMSON_HANGING_SIGN = register(new BlockType(215, "crimson_hanging_sign", "Crimson Hanging Sign", 1F, 16, true, false, BlockStateLoader.getBlockShapes("crimson_hanging_sign")));
    public static final BlockType WARPED_HANGING_SIGN = register(new BlockType(216, "warped_hanging_sign", "Warped Hanging Sign", 1F, 16, true, false, BlockStateLoader.getBlockShapes("warped_hanging_sign")));
    public static final BlockType MANGROVE_HANGING_SIGN = register(new BlockType(217, "mangrove_hanging_sign", "Mangrove Hanging Sign", 1F, 16, true, false, BlockStateLoader.getBlockShapes("mangrove_hanging_sign")));
    public static final BlockType BAMBOO_HANGING_SIGN = register(new BlockType(218, "bamboo_hanging_sign", "Bamboo Hanging Sign", 1F, 16, true, false, BlockStateLoader.getBlockShapes("bamboo_hanging_sign")));
    public static final BlockType OAK_WALL_HANGING_SIGN = register(new BlockType(219, "oak_wall_hanging_sign", "Oak Wall Hanging Sign", 1F, 16, true, false, BlockStateLoader.getBlockShapes("oak_wall_hanging_sign")));
    public static final BlockType SPRUCE_WALL_HANGING_SIGN = register(new BlockType(220, "spruce_wall_hanging_sign", "Spruce Wall Hanging Sign", 1F, 16, true, false, BlockStateLoader.getBlockShapes("spruce_wall_hanging_sign")));
    public static final BlockType BIRCH_WALL_HANGING_SIGN = register(new BlockType(221, "birch_wall_hanging_sign", "Birch Wall Hanging Sign", 1F, 16, true, false, BlockStateLoader.getBlockShapes("birch_wall_hanging_sign")));
    public static final BlockType ACACIA_WALL_HANGING_SIGN = register(new BlockType(222, "acacia_wall_hanging_sign", "Acacia Wall Hanging Sign", 1F, 16, true, false, BlockStateLoader.getBlockShapes("acacia_wall_hanging_sign")));
    public static final BlockType CHERRY_WALL_HANGING_SIGN = register(new BlockType(223, "cherry_wall_hanging_sign", "Cherry Wall Hanging Sign", 1F, 16, true, false, BlockStateLoader.getBlockShapes("cherry_wall_hanging_sign")));
    public static final BlockType JUNGLE_WALL_HANGING_SIGN = register(new BlockType(224, "jungle_wall_hanging_sign", "Jungle Wall Hanging Sign", 1F, 16, true, false, BlockStateLoader.getBlockShapes("jungle_wall_hanging_sign")));
    public static final BlockType DARK_OAK_WALL_HANGING_SIGN = register(new BlockType(225, "dark_oak_wall_hanging_sign", "Dark Oak Wall Hanging Sign", 1F, 16, true, false, BlockStateLoader.getBlockShapes("dark_oak_wall_hanging_sign")));
    public static final BlockType MANGROVE_WALL_HANGING_SIGN = register(new BlockType(226, "mangrove_wall_hanging_sign", "Mangrove Wall Hanging Sign", 1F, 16, true, false, BlockStateLoader.getBlockShapes("mangrove_wall_hanging_sign")));
    public static final BlockType CRIMSON_WALL_HANGING_SIGN = register(new BlockType(227, "crimson_wall_hanging_sign", "Crimson Wall Hanging Sign", 1F, 16, true, false, BlockStateLoader.getBlockShapes("crimson_wall_hanging_sign")));
    public static final BlockType WARPED_WALL_HANGING_SIGN = register(new BlockType(228, "warped_wall_hanging_sign", "Warped Wall Hanging Sign", 1F, 16, true, false, BlockStateLoader.getBlockShapes("warped_wall_hanging_sign")));
    public static final BlockType BAMBOO_WALL_HANGING_SIGN = register(new BlockType(229, "bamboo_wall_hanging_sign", "Bamboo Wall Hanging Sign", 1F, 16, true, false, BlockStateLoader.getBlockShapes("bamboo_wall_hanging_sign")));
    public static final BlockType LEVER = register(new BlockType(230, "lever", "Lever", 0.5F, 64, true, false, BlockStateLoader.getBlockShapes("lever")));
    public static final BlockType STONE_PRESSURE_PLATE = register(new BlockType(231, "stone_pressure_plate", "Stone Pressure Plate", 0.5F, 64, true, true, BlockStateLoader.getBlockShapes("stone_pressure_plate")));
    public static final BlockType IRON_DOOR = register(new BlockType(232, "iron_door", "Iron Door", 5F, 64, true, true, BlockStateLoader.getBlockShapes("iron_door")));
    public static final BlockType OAK_PRESSURE_PLATE = register(new BlockType(233, "oak_pressure_plate", "Oak Pressure Plate", 0.5F, 64, true, false, BlockStateLoader.getBlockShapes("oak_pressure_plate")));
    public static final BlockType SPRUCE_PRESSURE_PLATE = register(new BlockType(234, "spruce_pressure_plate", "Spruce Pressure Plate", 0.5F, 64, true, false, BlockStateLoader.getBlockShapes("spruce_pressure_plate")));
    public static final BlockType BIRCH_PRESSURE_PLATE = register(new BlockType(235, "birch_pressure_plate", "Birch Pressure Plate", 0.5F, 64, true, false, BlockStateLoader.getBlockShapes("birch_pressure_plate")));
    public static final BlockType JUNGLE_PRESSURE_PLATE = register(new BlockType(236, "jungle_pressure_plate", "Jungle Pressure Plate", 0.5F, 64, true, false, BlockStateLoader.getBlockShapes("jungle_pressure_plate")));
    public static final BlockType ACACIA_PRESSURE_PLATE = register(new BlockType(237, "acacia_pressure_plate", "Acacia Pressure Plate", 0.5F, 64, true, false, BlockStateLoader.getBlockShapes("acacia_pressure_plate")));
    public static final BlockType CHERRY_PRESSURE_PLATE = register(new BlockType(238, "cherry_pressure_plate", "Cherry Pressure Plate", 0.5F, 64, true, false, BlockStateLoader.getBlockShapes("cherry_pressure_plate")));
    public static final BlockType DARK_OAK_PRESSURE_PLATE = register(new BlockType(239, "dark_oak_pressure_plate", "Dark Oak Pressure Plate", 0.5F, 64, true, false, BlockStateLoader.getBlockShapes("dark_oak_pressure_plate")));
    public static final BlockType MANGROVE_PRESSURE_PLATE = register(new BlockType(240, "mangrove_pressure_plate", "Mangrove Pressure Plate", 0.5F, 64, true, false, BlockStateLoader.getBlockShapes("mangrove_pressure_plate")));
    public static final BlockType BAMBOO_PRESSURE_PLATE = register(new BlockType(241, "bamboo_pressure_plate", "Bamboo Pressure Plate", 0.5F, 64, true, false, BlockStateLoader.getBlockShapes("bamboo_pressure_plate")));
    public static final BlockType REDSTONE_ORE = register(new BlockType(242, "redstone_ore", "Redstone Ore", 3F, 64, true, true, BlockStateLoader.getBlockShapes("redstone_ore")));
    public static final BlockType DEEPSLATE_REDSTONE_ORE = register(new BlockType(243, "deepslate_redstone_ore", "Deepslate Redstone Ore", 4.5F, 64, true, true, BlockStateLoader.getBlockShapes("deepslate_redstone_ore")));
    public static final BlockType REDSTONE_TORCH = register(new BlockType(244, "redstone_torch", "Redstone Torch", 0F, 64, true, false, BlockStateLoader.getBlockShapes("redstone_torch")));
    public static final BlockType REDSTONE_WALL_TORCH = register(new BlockType(245, "redstone_wall_torch", "Redstone Wall Torch", 0F, 64, true, false, BlockStateLoader.getBlockShapes("redstone_wall_torch")));
    public static final BlockType STONE_BUTTON = register(new BlockType(246, "stone_button", "Stone Button", 0.5F, 64, true, false, BlockStateLoader.getBlockShapes("stone_button")));
    public static final BlockType SNOW = register(new BlockType(247, "snow", "Snow", 0.1F, 64, true, true, BlockStateLoader.getBlockShapes("snow")));
    public static final BlockType ICE = register(new BlockType(248, "ice", "Ice", 0.5F, 64, true, false, BlockStateLoader.getBlockShapes("ice")));
    public static final BlockType SNOW_BLOCK = register(new BlockType(249, "snow_block", "Snow Block", 0.2F, 64, true, true, BlockStateLoader.getBlockShapes("snow_block")));
    public static final BlockType CACTUS = register(new BlockType(250, "cactus", "Cactus", 0.4F, 64, true, false, BlockStateLoader.getBlockShapes("cactus")));
    public static final BlockType CLAY = register(new BlockType(251, "clay", "Clay", 0.6F, 64, true, false, BlockStateLoader.getBlockShapes("clay")));
    public static final BlockType SUGAR_CANE = register(new BlockType(252, "sugar_cane", "Sugar Cane", 0F, 64, true, false, BlockStateLoader.getBlockShapes("sugar_cane")));
    public static final BlockType JUKEBOX = register(new BlockType(253, "jukebox", "Jukebox", 2F, 64, true, false, BlockStateLoader.getBlockShapes("jukebox")));
    public static final BlockType OAK_FENCE = register(new BlockType(254, "oak_fence", "Oak Fence", 2F, 64, true, false, BlockStateLoader.getBlockShapes("oak_fence")));
    public static final BlockType PUMPKIN = register(new BlockType(255, "pumpkin", "Pumpkin", 1F, 64, true, false, BlockStateLoader.getBlockShapes("pumpkin")));
    public static final BlockType NETHERRACK = register(new BlockType(256, "netherrack", "Netherrack", 0.4F, 64, true, true, BlockStateLoader.getBlockShapes("netherrack")));
    public static final BlockType SOUL_SAND = register(new BlockType(257, "soul_sand", "Soul Sand", 0.5F, 64, true, false, BlockStateLoader.getBlockShapes("soul_sand")));
    public static final BlockType SOUL_SOIL = register(new BlockType(258, "soul_soil", "Soul Soil", 0.5F, 64, true, false, BlockStateLoader.getBlockShapes("soul_soil")));
    public static final BlockType BASALT = register(new BlockType(259, "basalt", "Basalt", 1.25F, 64, true, true, BlockStateLoader.getBlockShapes("basalt")));
    public static final BlockType POLISHED_BASALT = register(new BlockType(260, "polished_basalt", "Polished Basalt", 1.25F, 64, true, true, BlockStateLoader.getBlockShapes("polished_basalt")));
    public static final BlockType SOUL_TORCH = register(new BlockType(261, "soul_torch", "Soul Torch", 0F, 64, true, false, BlockStateLoader.getBlockShapes("soul_torch")));
    public static final BlockType SOUL_WALL_TORCH = register(new BlockType(262, "soul_wall_torch", "Soul Wall Torch", 0F, 64, true, false, BlockStateLoader.getBlockShapes("soul_wall_torch")));
    public static final BlockType GLOWSTONE = register(new BlockType(263, "glowstone", "Glowstone", 0.3F, 64, true, false, BlockStateLoader.getBlockShapes("glowstone")));
    public static final BlockType NETHER_PORTAL = register(new BlockType(264, "nether_portal", "Nether Portal", -1F, 64, false, false, BlockStateLoader.getBlockShapes("nether_portal")));
    public static final BlockType CARVED_PUMPKIN = register(new BlockType(265, "carved_pumpkin", "Carved Pumpkin", 1F, 64, true, false, BlockStateLoader.getBlockShapes("carved_pumpkin")));
    public static final BlockType JACK_O_LANTERN = register(new BlockType(266, "jack_o_lantern", "Jack o'Lantern", 1F, 64, true, false, BlockStateLoader.getBlockShapes("jack_o_lantern")));
    public static final BlockType CAKE = register(new BlockType(267, "cake", "Cake", 0.5F, 1, true, false, BlockStateLoader.getBlockShapes("cake")));
    public static final BlockType REPEATER = register(new BlockType(268, "repeater", "Redstone Repeater", 0F, 64, true, false, BlockStateLoader.getBlockShapes("repeater")));
    public static final BlockType WHITE_STAINED_GLASS = register(new BlockType(269, "white_stained_glass", "White Stained Glass", 0.3F, 64, true, false, BlockStateLoader.getBlockShapes("white_stained_glass")));
    public static final BlockType ORANGE_STAINED_GLASS = register(new BlockType(270, "orange_stained_glass", "Orange Stained Glass", 0.3F, 64, true, false, BlockStateLoader.getBlockShapes("orange_stained_glass")));
    public static final BlockType MAGENTA_STAINED_GLASS = register(new BlockType(271, "magenta_stained_glass", "Magenta Stained Glass", 0.3F, 64, true, false, BlockStateLoader.getBlockShapes("magenta_stained_glass")));
    public static final BlockType LIGHT_BLUE_STAINED_GLASS = register(new BlockType(272, "light_blue_stained_glass", "Light Blue Stained Glass", 0.3F, 64, true, false, BlockStateLoader.getBlockShapes("light_blue_stained_glass")));
    public static final BlockType YELLOW_STAINED_GLASS = register(new BlockType(273, "yellow_stained_glass", "Yellow Stained Glass", 0.3F, 64, true, false, BlockStateLoader.getBlockShapes("yellow_stained_glass")));
    public static final BlockType LIME_STAINED_GLASS = register(new BlockType(274, "lime_stained_glass", "Lime Stained Glass", 0.3F, 64, true, false, BlockStateLoader.getBlockShapes("lime_stained_glass")));
    public static final BlockType PINK_STAINED_GLASS = register(new BlockType(275, "pink_stained_glass", "Pink Stained Glass", 0.3F, 64, true, false, BlockStateLoader.getBlockShapes("pink_stained_glass")));
    public static final BlockType GRAY_STAINED_GLASS = register(new BlockType(276, "gray_stained_glass", "Gray Stained Glass", 0.3F, 64, true, false, BlockStateLoader.getBlockShapes("gray_stained_glass")));
    public static final BlockType LIGHT_GRAY_STAINED_GLASS = register(new BlockType(277, "light_gray_stained_glass", "Light Gray Stained Glass", 0.3F, 64, true, false, BlockStateLoader.getBlockShapes("light_gray_stained_glass")));
    public static final BlockType CYAN_STAINED_GLASS = register(new BlockType(278, "cyan_stained_glass", "Cyan Stained Glass", 0.3F, 64, true, false, BlockStateLoader.getBlockShapes("cyan_stained_glass")));
    public static final BlockType PURPLE_STAINED_GLASS = register(new BlockType(279, "purple_stained_glass", "Purple Stained Glass", 0.3F, 64, true, false, BlockStateLoader.getBlockShapes("purple_stained_glass")));
    public static final BlockType BLUE_STAINED_GLASS = register(new BlockType(280, "blue_stained_glass", "Blue Stained Glass", 0.3F, 64, true, false, BlockStateLoader.getBlockShapes("blue_stained_glass")));
    public static final BlockType BROWN_STAINED_GLASS = register(new BlockType(281, "brown_stained_glass", "Brown Stained Glass", 0.3F, 64, true, false, BlockStateLoader.getBlockShapes("brown_stained_glass")));
    public static final BlockType GREEN_STAINED_GLASS = register(new BlockType(282, "green_stained_glass", "Green Stained Glass", 0.3F, 64, true, false, BlockStateLoader.getBlockShapes("green_stained_glass")));
    public static final BlockType RED_STAINED_GLASS = register(new BlockType(283, "red_stained_glass", "Red Stained Glass", 0.3F, 64, true, false, BlockStateLoader.getBlockShapes("red_stained_glass")));
    public static final BlockType BLACK_STAINED_GLASS = register(new BlockType(284, "black_stained_glass", "Black Stained Glass", 0.3F, 64, true, false, BlockStateLoader.getBlockShapes("black_stained_glass")));
    public static final BlockType OAK_TRAPDOOR = register(new BlockType(285, "oak_trapdoor", "Oak Trapdoor", 3F, 64, true, false, BlockStateLoader.getBlockShapes("oak_trapdoor")));
    public static final BlockType SPRUCE_TRAPDOOR = register(new BlockType(286, "spruce_trapdoor", "Spruce Trapdoor", 3F, 64, true, false, BlockStateLoader.getBlockShapes("spruce_trapdoor")));
    public static final BlockType BIRCH_TRAPDOOR = register(new BlockType(287, "birch_trapdoor", "Birch Trapdoor", 3F, 64, true, false, BlockStateLoader.getBlockShapes("birch_trapdoor")));
    public static final BlockType JUNGLE_TRAPDOOR = register(new BlockType(288, "jungle_trapdoor", "Jungle Trapdoor", 3F, 64, true, false, BlockStateLoader.getBlockShapes("jungle_trapdoor")));
    public static final BlockType ACACIA_TRAPDOOR = register(new BlockType(289, "acacia_trapdoor", "Acacia Trapdoor", 3F, 64, true, false, BlockStateLoader.getBlockShapes("acacia_trapdoor")));
    public static final BlockType CHERRY_TRAPDOOR = register(new BlockType(290, "cherry_trapdoor", "Cherry Trapdoor", 3F, 64, true, false, BlockStateLoader.getBlockShapes("cherry_trapdoor")));
    public static final BlockType DARK_OAK_TRAPDOOR = register(new BlockType(291, "dark_oak_trapdoor", "Dark Oak Trapdoor", 3F, 64, true, false, BlockStateLoader.getBlockShapes("dark_oak_trapdoor")));
    public static final BlockType MANGROVE_TRAPDOOR = register(new BlockType(292, "mangrove_trapdoor", "Mangrove Trapdoor", 3F, 64, true, false, BlockStateLoader.getBlockShapes("mangrove_trapdoor")));
    public static final BlockType BAMBOO_TRAPDOOR = register(new BlockType(293, "bamboo_trapdoor", "Bamboo Trapdoor", 3F, 64, true, false, BlockStateLoader.getBlockShapes("bamboo_trapdoor")));
    public static final BlockType STONE_BRICKS = register(new BlockType(294, "stone_bricks", "Stone Bricks", 1.5F, 64, true, true, BlockStateLoader.getBlockShapes("stone_bricks")));
    public static final BlockType MOSSY_STONE_BRICKS = register(new BlockType(295, "mossy_stone_bricks", "Mossy Stone Bricks", 1.5F, 64, true, true, BlockStateLoader.getBlockShapes("mossy_stone_bricks")));
    public static final BlockType CRACKED_STONE_BRICKS = register(new BlockType(296, "cracked_stone_bricks", "Cracked Stone Bricks", 1.5F, 64, true, true, BlockStateLoader.getBlockShapes("cracked_stone_bricks")));
    public static final BlockType CHISELED_STONE_BRICKS = register(new BlockType(297, "chiseled_stone_bricks", "Chiseled Stone Bricks", 1.5F, 64, true, true, BlockStateLoader.getBlockShapes("chiseled_stone_bricks")));
    public static final BlockType PACKED_MUD = register(new BlockType(298, "packed_mud", "Packed Mud", 1F, 64, true, false, BlockStateLoader.getBlockShapes("packed_mud")));
    public static final BlockType MUD_BRICKS = register(new BlockType(299, "mud_bricks", "Mud Bricks", 1.5F, 64, true, true, BlockStateLoader.getBlockShapes("mud_bricks")));
    public static final BlockType INFESTED_STONE = register(new BlockType(300, "infested_stone", "Infested Stone", 0F, 64, true, false, BlockStateLoader.getBlockShapes("infested_stone")));
    public static final BlockType INFESTED_COBBLESTONE = register(new BlockType(301, "infested_cobblestone", "Infested Cobblestone", 0F, 64, true, false, BlockStateLoader.getBlockShapes("infested_cobblestone")));
    public static final BlockType INFESTED_STONE_BRICKS = register(new BlockType(302, "infested_stone_bricks", "Infested Stone Bricks", 0F, 64, true, false, BlockStateLoader.getBlockShapes("infested_stone_bricks")));
    public static final BlockType INFESTED_MOSSY_STONE_BRICKS = register(new BlockType(303, "infested_mossy_stone_bricks", "Infested Mossy Stone Bricks", 0F, 64, true, false, BlockStateLoader.getBlockShapes("infested_mossy_stone_bricks")));
    public static final BlockType INFESTED_CRACKED_STONE_BRICKS = register(new BlockType(304, "infested_cracked_stone_bricks", "Infested Cracked Stone Bricks", 0F, 64, true, false, BlockStateLoader.getBlockShapes("infested_cracked_stone_bricks")));
    public static final BlockType INFESTED_CHISELED_STONE_BRICKS = register(new BlockType(305, "infested_chiseled_stone_bricks", "Infested Chiseled Stone Bricks", 0F, 64, true, false, BlockStateLoader.getBlockShapes("infested_chiseled_stone_bricks")));
    public static final BlockType BROWN_MUSHROOM_BLOCK = register(new BlockType(306, "brown_mushroom_block", "Brown Mushroom Block", 0.2F, 64, true, false, BlockStateLoader.getBlockShapes("brown_mushroom_block")));
    public static final BlockType RED_MUSHROOM_BLOCK = register(new BlockType(307, "red_mushroom_block", "Red Mushroom Block", 0.2F, 64, true, false, BlockStateLoader.getBlockShapes("red_mushroom_block")));
    public static final BlockType MUSHROOM_STEM = register(new BlockType(308, "mushroom_stem", "Mushroom Stem", 0.2F, 64, true, false, BlockStateLoader.getBlockShapes("mushroom_stem")));
    public static final BlockType IRON_BARS = register(new BlockType(309, "iron_bars", "Iron Bars", 5F, 64, true, true, BlockStateLoader.getBlockShapes("iron_bars")));
    public static final BlockType CHAIN = register(new BlockType(310, "chain", "Chain", 5F, 64, true, true, BlockStateLoader.getBlockShapes("chain")));
    public static final BlockType GLASS_PANE = register(new BlockType(311, "glass_pane", "Glass Pane", 0.3F, 64, true, false, BlockStateLoader.getBlockShapes("glass_pane")));
    public static final BlockType MELON = register(new BlockType(312, "melon", "Melon", 1F, 64, true, false, BlockStateLoader.getBlockShapes("melon")));
    public static final BlockType ATTACHED_PUMPKIN_STEM = register(new BlockType(313, "attached_pumpkin_stem", "Attached Pumpkin Stem", 0F, 64, true, false, BlockStateLoader.getBlockShapes("attached_pumpkin_stem")));
    public static final BlockType ATTACHED_MELON_STEM = register(new BlockType(314, "attached_melon_stem", "Attached Melon Stem", 0F, 64, true, false, BlockStateLoader.getBlockShapes("attached_melon_stem")));
    public static final BlockType PUMPKIN_STEM = register(new BlockType(315, "pumpkin_stem", "Pumpkin Stem", 0F, 64, true, false, BlockStateLoader.getBlockShapes("pumpkin_stem")));
    public static final BlockType MELON_STEM = register(new BlockType(316, "melon_stem", "Melon Stem", 0F, 64, true, false, BlockStateLoader.getBlockShapes("melon_stem")));
    public static final BlockType VINE = register(new BlockType(317, "vine", "Vines", 0.2F, 64, true, false, BlockStateLoader.getBlockShapes("vine")));
    public static final BlockType GLOW_LICHEN = register(new BlockType(318, "glow_lichen", "Glow Lichen", 0.2F, 64, true, false, BlockStateLoader.getBlockShapes("glow_lichen")));
    public static final BlockType OAK_FENCE_GATE = register(new BlockType(319, "oak_fence_gate", "Oak Fence Gate", 2F, 64, true, false, BlockStateLoader.getBlockShapes("oak_fence_gate")));
    public static final BlockType BRICK_STAIRS = register(new BlockType(320, "brick_stairs", "Brick Stairs", 2F, 64, true, true, BlockStateLoader.getBlockShapes("brick_stairs")));
    public static final BlockType STONE_BRICK_STAIRS = register(new BlockType(321, "stone_brick_stairs", "Stone Brick Stairs", 1.5F, 64, true, true, BlockStateLoader.getBlockShapes("stone_brick_stairs")));
    public static final BlockType MUD_BRICK_STAIRS = register(new BlockType(322, "mud_brick_stairs", "Mud Brick Stairs", 0F, 64, true, true, BlockStateLoader.getBlockShapes("mud_brick_stairs")));
    public static final BlockType MYCELIUM = register(new BlockType(323, "mycelium", "Mycelium", 0.6F, 64, true, false, BlockStateLoader.getBlockShapes("mycelium")));
    public static final BlockType LILY_PAD = register(new BlockType(324, "lily_pad", "Lily Pad", 0F, 64, true, false, BlockStateLoader.getBlockShapes("lily_pad")));
    public static final BlockType NETHER_BRICKS = register(new BlockType(325, "nether_bricks", "Nether Bricks", 2F, 64, true, true, BlockStateLoader.getBlockShapes("nether_bricks")));
    public static final BlockType NETHER_BRICK_FENCE = register(new BlockType(326, "nether_brick_fence", "Nether Brick Fence", 2F, 64, true, true, BlockStateLoader.getBlockShapes("nether_brick_fence")));
    public static final BlockType NETHER_BRICK_STAIRS = register(new BlockType(327, "nether_brick_stairs", "Nether Brick Stairs", 2F, 64, true, true, BlockStateLoader.getBlockShapes("nether_brick_stairs")));
    public static final BlockType NETHER_WART = register(new BlockType(328, "nether_wart", "Nether Wart", 0F, 64, true, false, BlockStateLoader.getBlockShapes("nether_wart")));
    public static final BlockType ENCHANTING_TABLE = register(new BlockType(329, "enchanting_table", "Enchanting Table", 5F, 64, true, true, BlockStateLoader.getBlockShapes("enchanting_table")));
    public static final BlockType BREWING_STAND = register(new BlockType(330, "brewing_stand", "Brewing Stand", 0.5F, 64, true, true, BlockStateLoader.getBlockShapes("brewing_stand")));
    public static final BlockType CAULDRON = register(new BlockType(331, "cauldron", "Cauldron", 2F, 64, true, true, BlockStateLoader.getBlockShapes("cauldron")));
    public static final BlockType WATER_CAULDRON = register(new BlockType(332, "water_cauldron", "Water Cauldron", 0F, 64, true, true, BlockStateLoader.getBlockShapes("water_cauldron")));
    public static final BlockType LAVA_CAULDRON = register(new BlockType(333, "lava_cauldron", "Lava Cauldron", 0F, 64, true, true, BlockStateLoader.getBlockShapes("lava_cauldron")));
    public static final BlockType POWDER_SNOW_CAULDRON = register(new BlockType(334, "powder_snow_cauldron", "Powder Snow Cauldron", 0F, 64, true, true, BlockStateLoader.getBlockShapes("powder_snow_cauldron")));
    public static final BlockType END_PORTAL = register(new BlockType(335, "end_portal", "End Portal", -1F, 64, false, false, BlockStateLoader.getBlockShapes("end_portal")));
    public static final BlockType END_PORTAL_FRAME = register(new BlockType(336, "end_portal_frame", "End Portal Frame", -1F, 64, false, false, BlockStateLoader.getBlockShapes("end_portal_frame")));
    public static final BlockType END_STONE = register(new BlockType(337, "end_stone", "End Stone", 3F, 64, true, true, BlockStateLoader.getBlockShapes("end_stone")));
    public static final BlockType DRAGON_EGG = register(new BlockType(338, "dragon_egg", "Dragon Egg", 3F, 64, true, false, BlockStateLoader.getBlockShapes("dragon_egg")));
    public static final BlockType REDSTONE_LAMP = register(new BlockType(339, "redstone_lamp", "Redstone Lamp", 0.3F, 64, true, false, BlockStateLoader.getBlockShapes("redstone_lamp")));
    public static final BlockType COCOA = register(new BlockType(340, "cocoa", "Cocoa", 0.2F, 64, true, false, BlockStateLoader.getBlockShapes("cocoa")));
    public static final BlockType SANDSTONE_STAIRS = register(new BlockType(341, "sandstone_stairs", "Sandstone Stairs", 0.8F, 64, true, true, BlockStateLoader.getBlockShapes("sandstone_stairs")));
    public static final BlockType EMERALD_ORE = register(new BlockType(342, "emerald_ore", "Emerald Ore", 3F, 64, true, true, BlockStateLoader.getBlockShapes("emerald_ore")));
    public static final BlockType DEEPSLATE_EMERALD_ORE = register(new BlockType(343, "deepslate_emerald_ore", "Deepslate Emerald Ore", 4.5F, 64, true, true, BlockStateLoader.getBlockShapes("deepslate_emerald_ore")));
    public static final BlockType ENDER_CHEST = register(new BlockType(344, "ender_chest", "Ender Chest", 22.5F, 64, true, true, BlockStateLoader.getBlockShapes("ender_chest")));
    public static final BlockType TRIPWIRE_HOOK = register(new BlockType(345, "tripwire_hook", "Tripwire Hook", 0F, 64, true, false, BlockStateLoader.getBlockShapes("tripwire_hook")));
    public static final BlockType TRIPWIRE = register(new BlockType(346, "tripwire", "Tripwire", 0F, 64, true, false, BlockStateLoader.getBlockShapes("tripwire")));
    public static final BlockType EMERALD_BLOCK = register(new BlockType(347, "emerald_block", "Block of Emerald", 5F, 64, true, true, BlockStateLoader.getBlockShapes("emerald_block")));
    public static final BlockType SPRUCE_STAIRS = register(new BlockType(348, "spruce_stairs", "Spruce Stairs", 2F, 64, true, false, BlockStateLoader.getBlockShapes("spruce_stairs")));
    public static final BlockType BIRCH_STAIRS = register(new BlockType(349, "birch_stairs", "Birch Stairs", 2F, 64, true, false, BlockStateLoader.getBlockShapes("birch_stairs")));
    public static final BlockType JUNGLE_STAIRS = register(new BlockType(350, "jungle_stairs", "Jungle Stairs", 2F, 64, true, false, BlockStateLoader.getBlockShapes("jungle_stairs")));
    public static final BlockType COMMAND_BLOCK = register(new BlockType(351, "command_block", "Command Block", -1F, 64, false, true, BlockStateLoader.getBlockShapes("command_block")));
    public static final BlockType BEACON = register(new BlockType(352, "beacon", "Beacon", 3F, 64, true, false, BlockStateLoader.getBlockShapes("beacon")));
    public static final BlockType COBBLESTONE_WALL = register(new BlockType(353, "cobblestone_wall", "Cobblestone Wall", 2F, 64, true, true, BlockStateLoader.getBlockShapes("cobblestone_wall")));
    public static final BlockType MOSSY_COBBLESTONE_WALL = register(new BlockType(354, "mossy_cobblestone_wall", "Mossy Cobblestone Wall", 2F, 64, true, true, BlockStateLoader.getBlockShapes("mossy_cobblestone_wall")));
    public static final BlockType FLOWER_POT = register(new BlockType(355, "flower_pot", "Flower Pot", 0F, 64, true, false, BlockStateLoader.getBlockShapes("flower_pot")));
    public static final BlockType POTTED_TORCHFLOWER = register(new BlockType(356, "potted_torchflower", "Potted Torchflower", 0F, 64, true, false, BlockStateLoader.getBlockShapes("potted_torchflower")));
    public static final BlockType POTTED_OAK_SAPLING = register(new BlockType(357, "potted_oak_sapling", "Potted Oak Sapling", 0F, 64, true, false, BlockStateLoader.getBlockShapes("potted_oak_sapling")));
    public static final BlockType POTTED_SPRUCE_SAPLING = register(new BlockType(358, "potted_spruce_sapling", "Potted Spruce Sapling", 0F, 64, true, false, BlockStateLoader.getBlockShapes("potted_spruce_sapling")));
    public static final BlockType POTTED_BIRCH_SAPLING = register(new BlockType(359, "potted_birch_sapling", "Potted Birch Sapling", 0F, 64, true, false, BlockStateLoader.getBlockShapes("potted_birch_sapling")));
    public static final BlockType POTTED_JUNGLE_SAPLING = register(new BlockType(360, "potted_jungle_sapling", "Potted Jungle Sapling", 0F, 64, true, false, BlockStateLoader.getBlockShapes("potted_jungle_sapling")));
    public static final BlockType POTTED_ACACIA_SAPLING = register(new BlockType(361, "potted_acacia_sapling", "Potted Acacia Sapling", 0F, 64, true, false, BlockStateLoader.getBlockShapes("potted_acacia_sapling")));
    public static final BlockType POTTED_CHERRY_SAPLING = register(new BlockType(362, "potted_cherry_sapling", "Potted Cherry Sapling", 0F, 64, true, false, BlockStateLoader.getBlockShapes("potted_cherry_sapling")));
    public static final BlockType POTTED_DARK_OAK_SAPLING = register(new BlockType(363, "potted_dark_oak_sapling", "Potted Dark Oak Sapling", 0F, 64, true, false, BlockStateLoader.getBlockShapes("potted_dark_oak_sapling")));
    public static final BlockType POTTED_MANGROVE_PROPAGULE = register(new BlockType(364, "potted_mangrove_propagule", "Potted Mangrove Propagule", 0F, 64, true, false, BlockStateLoader.getBlockShapes("potted_mangrove_propagule")));
    public static final BlockType POTTED_FERN = register(new BlockType(365, "potted_fern", "Potted Fern", 0F, 64, true, false, BlockStateLoader.getBlockShapes("potted_fern")));
    public static final BlockType POTTED_DANDELION = register(new BlockType(366, "potted_dandelion", "Potted Dandelion", 0F, 64, true, false, BlockStateLoader.getBlockShapes("potted_dandelion")));
    public static final BlockType POTTED_POPPY = register(new BlockType(367, "potted_poppy", "Potted Poppy", 0F, 64, true, false, BlockStateLoader.getBlockShapes("potted_poppy")));
    public static final BlockType POTTED_BLUE_ORCHID = register(new BlockType(368, "potted_blue_orchid", "Potted Blue Orchid", 0F, 64, true, false, BlockStateLoader.getBlockShapes("potted_blue_orchid")));
    public static final BlockType POTTED_ALLIUM = register(new BlockType(369, "potted_allium", "Potted Allium", 0F, 64, true, false, BlockStateLoader.getBlockShapes("potted_allium")));
    public static final BlockType POTTED_AZURE_BLUET = register(new BlockType(370, "potted_azure_bluet", "Potted Azure Bluet", 0F, 64, true, false, BlockStateLoader.getBlockShapes("potted_azure_bluet")));
    public static final BlockType POTTED_RED_TULIP = register(new BlockType(371, "potted_red_tulip", "Potted Red Tulip", 0F, 64, true, false, BlockStateLoader.getBlockShapes("potted_red_tulip")));
    public static final BlockType POTTED_ORANGE_TULIP = register(new BlockType(372, "potted_orange_tulip", "Potted Orange Tulip", 0F, 64, true, false, BlockStateLoader.getBlockShapes("potted_orange_tulip")));
    public static final BlockType POTTED_WHITE_TULIP = register(new BlockType(373, "potted_white_tulip", "Potted White Tulip", 0F, 64, true, false, BlockStateLoader.getBlockShapes("potted_white_tulip")));
    public static final BlockType POTTED_PINK_TULIP = register(new BlockType(374, "potted_pink_tulip", "Potted Pink Tulip", 0F, 64, true, false, BlockStateLoader.getBlockShapes("potted_pink_tulip")));
    public static final BlockType POTTED_OXEYE_DAISY = register(new BlockType(375, "potted_oxeye_daisy", "Potted Oxeye Daisy", 0F, 64, true, false, BlockStateLoader.getBlockShapes("potted_oxeye_daisy")));
    public static final BlockType POTTED_CORNFLOWER = register(new BlockType(376, "potted_cornflower", "Potted Cornflower", 0F, 64, true, false, BlockStateLoader.getBlockShapes("potted_cornflower")));
    public static final BlockType POTTED_LILY_OF_THE_VALLEY = register(new BlockType(377, "potted_lily_of_the_valley", "Potted Lily of the Valley", 0F, 64, true, false, BlockStateLoader.getBlockShapes("potted_lily_of_the_valley")));
    public static final BlockType POTTED_WITHER_ROSE = register(new BlockType(378, "potted_wither_rose", "Potted Wither Rose", 0F, 64, true, false, BlockStateLoader.getBlockShapes("potted_wither_rose")));
    public static final BlockType POTTED_RED_MUSHROOM = register(new BlockType(379, "potted_red_mushroom", "Potted Red Mushroom", 0F, 64, true, false, BlockStateLoader.getBlockShapes("potted_red_mushroom")));
    public static final BlockType POTTED_BROWN_MUSHROOM = register(new BlockType(380, "potted_brown_mushroom", "Potted Brown Mushroom", 0F, 64, true, false, BlockStateLoader.getBlockShapes("potted_brown_mushroom")));
    public static final BlockType POTTED_DEAD_BUSH = register(new BlockType(381, "potted_dead_bush", "Potted Dead Bush", 0F, 64, true, false, BlockStateLoader.getBlockShapes("potted_dead_bush")));
    public static final BlockType POTTED_CACTUS = register(new BlockType(382, "potted_cactus", "Potted Cactus", 0F, 64, true, false, BlockStateLoader.getBlockShapes("potted_cactus")));
    public static final BlockType CARROTS = register(new BlockType(383, "carrots", "Carrots", 0F, 64, true, false, BlockStateLoader.getBlockShapes("carrots")));
    public static final BlockType POTATOES = register(new BlockType(384, "potatoes", "Potatoes", 0F, 64, true, false, BlockStateLoader.getBlockShapes("potatoes")));
    public static final BlockType OAK_BUTTON = register(new BlockType(385, "oak_button", "Oak Button", 0.5F, 64, true, false, BlockStateLoader.getBlockShapes("oak_button")));
    public static final BlockType SPRUCE_BUTTON = register(new BlockType(386, "spruce_button", "Spruce Button", 0.5F, 64, true, false, BlockStateLoader.getBlockShapes("spruce_button")));
    public static final BlockType BIRCH_BUTTON = register(new BlockType(387, "birch_button", "Birch Button", 0.5F, 64, true, false, BlockStateLoader.getBlockShapes("birch_button")));
    public static final BlockType JUNGLE_BUTTON = register(new BlockType(388, "jungle_button", "Jungle Button", 0.5F, 64, true, false, BlockStateLoader.getBlockShapes("jungle_button")));
    public static final BlockType ACACIA_BUTTON = register(new BlockType(389, "acacia_button", "Acacia Button", 0.5F, 64, true, false, BlockStateLoader.getBlockShapes("acacia_button")));
    public static final BlockType CHERRY_BUTTON = register(new BlockType(390, "cherry_button", "Cherry Button", 0.5F, 64, true, false, BlockStateLoader.getBlockShapes("cherry_button")));
    public static final BlockType DARK_OAK_BUTTON = register(new BlockType(391, "dark_oak_button", "Dark Oak Button", 0.5F, 64, true, false, BlockStateLoader.getBlockShapes("dark_oak_button")));
    public static final BlockType MANGROVE_BUTTON = register(new BlockType(392, "mangrove_button", "Mangrove Button", 0.5F, 64, true, false, BlockStateLoader.getBlockShapes("mangrove_button")));
    public static final BlockType BAMBOO_BUTTON = register(new BlockType(393, "bamboo_button", "Bamboo Button", 0.5F, 64, true, false, BlockStateLoader.getBlockShapes("bamboo_button")));
    public static final BlockType SKELETON_SKULL = register(new BlockType(394, "skeleton_skull", "Skeleton Skull", 1F, 64, true, false, BlockStateLoader.getBlockShapes("skeleton_skull")));
    public static final BlockType SKELETON_WALL_SKULL = register(new BlockType(395, "skeleton_wall_skull", "Skeleton Wall Skull", 1F, 64, true, false, BlockStateLoader.getBlockShapes("skeleton_wall_skull")));
    public static final BlockType WITHER_SKELETON_SKULL = register(new BlockType(396, "wither_skeleton_skull", "Wither Skeleton Skull", 1F, 64, true, false, BlockStateLoader.getBlockShapes("wither_skeleton_skull")));
    public static final BlockType WITHER_SKELETON_WALL_SKULL = register(new BlockType(397, "wither_skeleton_wall_skull", "Wither Skeleton Wall Skull", 1F, 64, true, false, BlockStateLoader.getBlockShapes("wither_skeleton_wall_skull")));
    public static final BlockType ZOMBIE_HEAD = register(new BlockType(398, "zombie_head", "Zombie Head", 1F, 64, true, false, BlockStateLoader.getBlockShapes("zombie_head")));
    public static final BlockType ZOMBIE_WALL_HEAD = register(new BlockType(399, "zombie_wall_head", "Zombie Wall Head", 1F, 64, true, false, BlockStateLoader.getBlockShapes("zombie_wall_head")));
    public static final BlockType PLAYER_HEAD = register(new BlockType(400, "player_head", "Player Head", 1F, 64, true, false, BlockStateLoader.getBlockShapes("player_head")));
    public static final BlockType PLAYER_WALL_HEAD = register(new BlockType(401, "player_wall_head", "Player Wall Head", 1F, 64, true, false, BlockStateLoader.getBlockShapes("player_wall_head")));
    public static final BlockType CREEPER_HEAD = register(new BlockType(402, "creeper_head", "Creeper Head", 1F, 64, true, false, BlockStateLoader.getBlockShapes("creeper_head")));
    public static final BlockType CREEPER_WALL_HEAD = register(new BlockType(403, "creeper_wall_head", "Creeper Wall Head", 1F, 64, true, false, BlockStateLoader.getBlockShapes("creeper_wall_head")));
    public static final BlockType DRAGON_HEAD = register(new BlockType(404, "dragon_head", "Dragon Head", 1F, 64, true, false, BlockStateLoader.getBlockShapes("dragon_head")));
    public static final BlockType DRAGON_WALL_HEAD = register(new BlockType(405, "dragon_wall_head", "Dragon Wall Head", 1F, 64, true, false, BlockStateLoader.getBlockShapes("dragon_wall_head")));
    public static final BlockType PIGLIN_HEAD = register(new BlockType(406, "piglin_head", "Piglin Head", 1F, 64, true, false, BlockStateLoader.getBlockShapes("piglin_head")));
    public static final BlockType PIGLIN_WALL_HEAD = register(new BlockType(407, "piglin_wall_head", "Piglin Wall Head", 1F, 64, true, false, BlockStateLoader.getBlockShapes("piglin_wall_head")));
    public static final BlockType ANVIL = register(new BlockType(408, "anvil", "Anvil", 5F, 64, true, true, BlockStateLoader.getBlockShapes("anvil")));
    public static final BlockType CHIPPED_ANVIL = register(new BlockType(409, "chipped_anvil", "Chipped Anvil", 5F, 64, true, true, BlockStateLoader.getBlockShapes("chipped_anvil")));
    public static final BlockType DAMAGED_ANVIL = register(new BlockType(410, "damaged_anvil", "Damaged Anvil", 5F, 64, true, true, BlockStateLoader.getBlockShapes("damaged_anvil")));
    public static final BlockType TRAPPED_CHEST = register(new BlockType(411, "trapped_chest", "Trapped Chest", 2.5F, 64, true, false, BlockStateLoader.getBlockShapes("trapped_chest")));
    public static final BlockType LIGHT_WEIGHTED_PRESSURE_PLATE = register(new BlockType(412, "light_weighted_pressure_plate", "Light Weighted Pressure Plate", 0.5F, 64, true, true, BlockStateLoader.getBlockShapes("light_weighted_pressure_plate")));
    public static final BlockType HEAVY_WEIGHTED_PRESSURE_PLATE = register(new BlockType(413, "heavy_weighted_pressure_plate", "Heavy Weighted Pressure Plate", 0.5F, 64, true, true, BlockStateLoader.getBlockShapes("heavy_weighted_pressure_plate")));
    public static final BlockType COMPARATOR = register(new BlockType(414, "comparator", "Redstone Comparator", 0F, 64, true, false, BlockStateLoader.getBlockShapes("comparator")));
    public static final BlockType DAYLIGHT_DETECTOR = register(new BlockType(415, "daylight_detector", "Daylight Detector", 0.2F, 64, true, false, BlockStateLoader.getBlockShapes("daylight_detector")));
    public static final BlockType REDSTONE_BLOCK = register(new BlockType(416, "redstone_block", "Block of Redstone", 5F, 64, true, true, BlockStateLoader.getBlockShapes("redstone_block")));
    public static final BlockType NETHER_QUARTZ_ORE = register(new BlockType(417, "nether_quartz_ore", "Nether Quartz Ore", 3F, 64, true, true, BlockStateLoader.getBlockShapes("nether_quartz_ore")));
    public static final BlockType HOPPER = register(new BlockType(418, "hopper", "Hopper", 3F, 64, true, true, BlockStateLoader.getBlockShapes("hopper")));
    public static final BlockType QUARTZ_BLOCK = register(new BlockType(419, "quartz_block", "Block of Quartz", 0.8F, 64, true, true, BlockStateLoader.getBlockShapes("quartz_block")));
    public static final BlockType CHISELED_QUARTZ_BLOCK = register(new BlockType(420, "chiseled_quartz_block", "Chiseled Quartz Block", 0.8F, 64, true, true, BlockStateLoader.getBlockShapes("chiseled_quartz_block")));
    public static final BlockType QUARTZ_PILLAR = register(new BlockType(421, "quartz_pillar", "Quartz Pillar", 0.8F, 64, true, true, BlockStateLoader.getBlockShapes("quartz_pillar")));
    public static final BlockType QUARTZ_STAIRS = register(new BlockType(422, "quartz_stairs", "Quartz Stairs", 0.8F, 64, true, true, BlockStateLoader.getBlockShapes("quartz_stairs")));
    public static final BlockType ACTIVATOR_RAIL = register(new BlockType(423, "activator_rail", "Activator Rail", 0.7F, 64, true, false, BlockStateLoader.getBlockShapes("activator_rail")));
    public static final BlockType DROPPER = register(new BlockType(424, "dropper", "Dropper", 3.5F, 64, true, true, BlockStateLoader.getBlockShapes("dropper")));
    public static final BlockType WHITE_TERRACOTTA = register(new BlockType(425, "white_terracotta", "White Terracotta", 1.25F, 64, true, true, BlockStateLoader.getBlockShapes("white_terracotta")));
    public static final BlockType ORANGE_TERRACOTTA = register(new BlockType(426, "orange_terracotta", "Orange Terracotta", 1.25F, 64, true, true, BlockStateLoader.getBlockShapes("orange_terracotta")));
    public static final BlockType MAGENTA_TERRACOTTA = register(new BlockType(427, "magenta_terracotta", "Magenta Terracotta", 1.25F, 64, true, true, BlockStateLoader.getBlockShapes("magenta_terracotta")));
    public static final BlockType LIGHT_BLUE_TERRACOTTA = register(new BlockType(428, "light_blue_terracotta", "Light Blue Terracotta", 1.25F, 64, true, true, BlockStateLoader.getBlockShapes("light_blue_terracotta")));
    public static final BlockType YELLOW_TERRACOTTA = register(new BlockType(429, "yellow_terracotta", "Yellow Terracotta", 1.25F, 64, true, true, BlockStateLoader.getBlockShapes("yellow_terracotta")));
    public static final BlockType LIME_TERRACOTTA = register(new BlockType(430, "lime_terracotta", "Lime Terracotta", 1.25F, 64, true, true, BlockStateLoader.getBlockShapes("lime_terracotta")));
    public static final BlockType PINK_TERRACOTTA = register(new BlockType(431, "pink_terracotta", "Pink Terracotta", 1.25F, 64, true, true, BlockStateLoader.getBlockShapes("pink_terracotta")));
    public static final BlockType GRAY_TERRACOTTA = register(new BlockType(432, "gray_terracotta", "Gray Terracotta", 1.25F, 64, true, true, BlockStateLoader.getBlockShapes("gray_terracotta")));
    public static final BlockType LIGHT_GRAY_TERRACOTTA = register(new BlockType(433, "light_gray_terracotta", "Light Gray Terracotta", 1.25F, 64, true, true, BlockStateLoader.getBlockShapes("light_gray_terracotta")));
    public static final BlockType CYAN_TERRACOTTA = register(new BlockType(434, "cyan_terracotta", "Cyan Terracotta", 1.25F, 64, true, true, BlockStateLoader.getBlockShapes("cyan_terracotta")));
    public static final BlockType PURPLE_TERRACOTTA = register(new BlockType(435, "purple_terracotta", "Purple Terracotta", 1.25F, 64, true, true, BlockStateLoader.getBlockShapes("purple_terracotta")));
    public static final BlockType BLUE_TERRACOTTA = register(new BlockType(436, "blue_terracotta", "Blue Terracotta", 1.25F, 64, true, true, BlockStateLoader.getBlockShapes("blue_terracotta")));
    public static final BlockType BROWN_TERRACOTTA = register(new BlockType(437, "brown_terracotta", "Brown Terracotta", 1.25F, 64, true, true, BlockStateLoader.getBlockShapes("brown_terracotta")));
    public static final BlockType GREEN_TERRACOTTA = register(new BlockType(438, "green_terracotta", "Green Terracotta", 1.25F, 64, true, true, BlockStateLoader.getBlockShapes("green_terracotta")));
    public static final BlockType RED_TERRACOTTA = register(new BlockType(439, "red_terracotta", "Red Terracotta", 1.25F, 64, true, true, BlockStateLoader.getBlockShapes("red_terracotta")));
    public static final BlockType BLACK_TERRACOTTA = register(new BlockType(440, "black_terracotta", "Black Terracotta", 1.25F, 64, true, true, BlockStateLoader.getBlockShapes("black_terracotta")));
    public static final BlockType WHITE_STAINED_GLASS_PANE = register(new BlockType(441, "white_stained_glass_pane", "White Stained Glass Pane", 0.3F, 64, true, false, BlockStateLoader.getBlockShapes("white_stained_glass_pane")));
    public static final BlockType ORANGE_STAINED_GLASS_PANE = register(new BlockType(442, "orange_stained_glass_pane", "Orange Stained Glass Pane", 0.3F, 64, true, false, BlockStateLoader.getBlockShapes("orange_stained_glass_pane")));
    public static final BlockType MAGENTA_STAINED_GLASS_PANE = register(new BlockType(443, "magenta_stained_glass_pane", "Magenta Stained Glass Pane", 0.3F, 64, true, false, BlockStateLoader.getBlockShapes("magenta_stained_glass_pane")));
    public static final BlockType LIGHT_BLUE_STAINED_GLASS_PANE = register(new BlockType(444, "light_blue_stained_glass_pane", "Light Blue Stained Glass Pane", 0.3F, 64, true, false, BlockStateLoader.getBlockShapes("light_blue_stained_glass_pane")));
    public static final BlockType YELLOW_STAINED_GLASS_PANE = register(new BlockType(445, "yellow_stained_glass_pane", "Yellow Stained Glass Pane", 0.3F, 64, true, false, BlockStateLoader.getBlockShapes("yellow_stained_glass_pane")));
    public static final BlockType LIME_STAINED_GLASS_PANE = register(new BlockType(446, "lime_stained_glass_pane", "Lime Stained Glass Pane", 0.3F, 64, true, false, BlockStateLoader.getBlockShapes("lime_stained_glass_pane")));
    public static final BlockType PINK_STAINED_GLASS_PANE = register(new BlockType(447, "pink_stained_glass_pane", "Pink Stained Glass Pane", 0.3F, 64, true, false, BlockStateLoader.getBlockShapes("pink_stained_glass_pane")));
    public static final BlockType GRAY_STAINED_GLASS_PANE = register(new BlockType(448, "gray_stained_glass_pane", "Gray Stained Glass Pane", 0.3F, 64, true, false, BlockStateLoader.getBlockShapes("gray_stained_glass_pane")));
    public static final BlockType LIGHT_GRAY_STAINED_GLASS_PANE = register(new BlockType(449, "light_gray_stained_glass_pane", "Light Gray Stained Glass Pane", 0.3F, 64, true, false, BlockStateLoader.getBlockShapes("light_gray_stained_glass_pane")));
    public static final BlockType CYAN_STAINED_GLASS_PANE = register(new BlockType(450, "cyan_stained_glass_pane", "Cyan Stained Glass Pane", 0.3F, 64, true, false, BlockStateLoader.getBlockShapes("cyan_stained_glass_pane")));
    public static final BlockType PURPLE_STAINED_GLASS_PANE = register(new BlockType(451, "purple_stained_glass_pane", "Purple Stained Glass Pane", 0.3F, 64, true, false, BlockStateLoader.getBlockShapes("purple_stained_glass_pane")));
    public static final BlockType BLUE_STAINED_GLASS_PANE = register(new BlockType(452, "blue_stained_glass_pane", "Blue Stained Glass Pane", 0.3F, 64, true, false, BlockStateLoader.getBlockShapes("blue_stained_glass_pane")));
    public static final BlockType BROWN_STAINED_GLASS_PANE = register(new BlockType(453, "brown_stained_glass_pane", "Brown Stained Glass Pane", 0.3F, 64, true, false, BlockStateLoader.getBlockShapes("brown_stained_glass_pane")));
    public static final BlockType GREEN_STAINED_GLASS_PANE = register(new BlockType(454, "green_stained_glass_pane", "Green Stained Glass Pane", 0.3F, 64, true, false, BlockStateLoader.getBlockShapes("green_stained_glass_pane")));
    public static final BlockType RED_STAINED_GLASS_PANE = register(new BlockType(455, "red_stained_glass_pane", "Red Stained Glass Pane", 0.3F, 64, true, false, BlockStateLoader.getBlockShapes("red_stained_glass_pane")));
    public static final BlockType BLACK_STAINED_GLASS_PANE = register(new BlockType(456, "black_stained_glass_pane", "Black Stained Glass Pane", 0.3F, 64, true, false, BlockStateLoader.getBlockShapes("black_stained_glass_pane")));
    public static final BlockType ACACIA_STAIRS = register(new BlockType(457, "acacia_stairs", "Acacia Stairs", 2F, 64, true, false, BlockStateLoader.getBlockShapes("acacia_stairs")));
    public static final BlockType CHERRY_STAIRS = register(new BlockType(458, "cherry_stairs", "Cherry Stairs", 0F, 64, true, false, BlockStateLoader.getBlockShapes("cherry_stairs")));
    public static final BlockType DARK_OAK_STAIRS = register(new BlockType(459, "dark_oak_stairs", "Dark Oak Stairs", 2F, 64, true, false, BlockStateLoader.getBlockShapes("dark_oak_stairs")));
    public static final BlockType MANGROVE_STAIRS = register(new BlockType(460, "mangrove_stairs", "Mangrove Stairs", 0F, 64, true, false, BlockStateLoader.getBlockShapes("mangrove_stairs")));
    public static final BlockType BAMBOO_STAIRS = register(new BlockType(461, "bamboo_stairs", "Bamboo Stairs", 0F, 64, true, false, BlockStateLoader.getBlockShapes("bamboo_stairs")));
    public static final BlockType BAMBOO_MOSAIC_STAIRS = register(new BlockType(462, "bamboo_mosaic_stairs", "Bamboo Mosaic Stairs", 0F, 64, true, false, BlockStateLoader.getBlockShapes("bamboo_mosaic_stairs")));
    public static final BlockType SLIME_BLOCK = register(new BlockType(463, "slime_block", "Slime Block", 0F, 64, true, false, BlockStateLoader.getBlockShapes("slime_block")));
    public static final BlockType BARRIER = register(new BlockType(464, "barrier", "Barrier", -1F, 64, false, false, BlockStateLoader.getBlockShapes("barrier")));
    public static final BlockType LIGHT = register(new BlockType(465, "light", "Light", -1F, 64, false, false, BlockStateLoader.getBlockShapes("light")));
    public static final BlockType IRON_TRAPDOOR = register(new BlockType(466, "iron_trapdoor", "Iron Trapdoor", 5F, 64, true, true, BlockStateLoader.getBlockShapes("iron_trapdoor")));
    public static final BlockType PRISMARINE = register(new BlockType(467, "prismarine", "Prismarine", 1.5F, 64, true, true, BlockStateLoader.getBlockShapes("prismarine")));
    public static final BlockType PRISMARINE_BRICKS = register(new BlockType(468, "prismarine_bricks", "Prismarine Bricks", 1.5F, 64, true, true, BlockStateLoader.getBlockShapes("prismarine_bricks")));
    public static final BlockType DARK_PRISMARINE = register(new BlockType(469, "dark_prismarine", "Dark Prismarine", 1.5F, 64, true, true, BlockStateLoader.getBlockShapes("dark_prismarine")));
    public static final BlockType PRISMARINE_STAIRS = register(new BlockType(470, "prismarine_stairs", "Prismarine Stairs", 1.5F, 64, true, true, BlockStateLoader.getBlockShapes("prismarine_stairs")));
    public static final BlockType PRISMARINE_BRICK_STAIRS = register(new BlockType(471, "prismarine_brick_stairs", "Prismarine Brick Stairs", 1.5F, 64, true, true, BlockStateLoader.getBlockShapes("prismarine_brick_stairs")));
    public static final BlockType DARK_PRISMARINE_STAIRS = register(new BlockType(472, "dark_prismarine_stairs", "Dark Prismarine Stairs", 1.5F, 64, true, true, BlockStateLoader.getBlockShapes("dark_prismarine_stairs")));
    public static final BlockType PRISMARINE_SLAB = register(new BlockType(473, "prismarine_slab", "Prismarine Slab", 1.5F, 64, true, true, BlockStateLoader.getBlockShapes("prismarine_slab")));
    public static final BlockType PRISMARINE_BRICK_SLAB = register(new BlockType(474, "prismarine_brick_slab", "Prismarine Brick Slab", 1.5F, 64, true, true, BlockStateLoader.getBlockShapes("prismarine_brick_slab")));
    public static final BlockType DARK_PRISMARINE_SLAB = register(new BlockType(475, "dark_prismarine_slab", "Dark Prismarine Slab", 1.5F, 64, true, true, BlockStateLoader.getBlockShapes("dark_prismarine_slab")));
    public static final BlockType SEA_LANTERN = register(new BlockType(476, "sea_lantern", "Sea Lantern", 0.3F, 64, true, false, BlockStateLoader.getBlockShapes("sea_lantern")));
    public static final BlockType HAY_BLOCK = register(new BlockType(477, "hay_block", "Hay Bale", 0.5F, 64, true, false, BlockStateLoader.getBlockShapes("hay_block")));
    public static final BlockType WHITE_CARPET = register(new BlockType(478, "white_carpet", "White Carpet", 0.1F, 64, true, false, BlockStateLoader.getBlockShapes("white_carpet")));
    public static final BlockType ORANGE_CARPET = register(new BlockType(479, "orange_carpet", "Orange Carpet", 0.1F, 64, true, false, BlockStateLoader.getBlockShapes("orange_carpet")));
    public static final BlockType MAGENTA_CARPET = register(new BlockType(480, "magenta_carpet", "Magenta Carpet", 0.1F, 64, true, false, BlockStateLoader.getBlockShapes("magenta_carpet")));
    public static final BlockType LIGHT_BLUE_CARPET = register(new BlockType(481, "light_blue_carpet", "Light Blue Carpet", 0.1F, 64, true, false, BlockStateLoader.getBlockShapes("light_blue_carpet")));
    public static final BlockType YELLOW_CARPET = register(new BlockType(482, "yellow_carpet", "Yellow Carpet", 0.1F, 64, true, false, BlockStateLoader.getBlockShapes("yellow_carpet")));
    public static final BlockType LIME_CARPET = register(new BlockType(483, "lime_carpet", "Lime Carpet", 0.1F, 64, true, false, BlockStateLoader.getBlockShapes("lime_carpet")));
    public static final BlockType PINK_CARPET = register(new BlockType(484, "pink_carpet", "Pink Carpet", 0.1F, 64, true, false, BlockStateLoader.getBlockShapes("pink_carpet")));
    public static final BlockType GRAY_CARPET = register(new BlockType(485, "gray_carpet", "Gray Carpet", 0.1F, 64, true, false, BlockStateLoader.getBlockShapes("gray_carpet")));
    public static final BlockType LIGHT_GRAY_CARPET = register(new BlockType(486, "light_gray_carpet", "Light Gray Carpet", 0.1F, 64, true, false, BlockStateLoader.getBlockShapes("light_gray_carpet")));
    public static final BlockType CYAN_CARPET = register(new BlockType(487, "cyan_carpet", "Cyan Carpet", 0.1F, 64, true, false, BlockStateLoader.getBlockShapes("cyan_carpet")));
    public static final BlockType PURPLE_CARPET = register(new BlockType(488, "purple_carpet", "Purple Carpet", 0.1F, 64, true, false, BlockStateLoader.getBlockShapes("purple_carpet")));
    public static final BlockType BLUE_CARPET = register(new BlockType(489, "blue_carpet", "Blue Carpet", 0.1F, 64, true, false, BlockStateLoader.getBlockShapes("blue_carpet")));
    public static final BlockType BROWN_CARPET = register(new BlockType(490, "brown_carpet", "Brown Carpet", 0.1F, 64, true, false, BlockStateLoader.getBlockShapes("brown_carpet")));
    public static final BlockType GREEN_CARPET = register(new BlockType(491, "green_carpet", "Green Carpet", 0.1F, 64, true, false, BlockStateLoader.getBlockShapes("green_carpet")));
    public static final BlockType RED_CARPET = register(new BlockType(492, "red_carpet", "Red Carpet", 0.1F, 64, true, false, BlockStateLoader.getBlockShapes("red_carpet")));
    public static final BlockType BLACK_CARPET = register(new BlockType(493, "black_carpet", "Black Carpet", 0.1F, 64, true, false, BlockStateLoader.getBlockShapes("black_carpet")));
    public static final BlockType TERRACOTTA = register(new BlockType(494, "terracotta", "Terracotta", 1.25F, 64, true, true, BlockStateLoader.getBlockShapes("terracotta")));
    public static final BlockType COAL_BLOCK = register(new BlockType(495, "coal_block", "Block of Coal", 5F, 64, true, true, BlockStateLoader.getBlockShapes("coal_block")));
    public static final BlockType PACKED_ICE = register(new BlockType(496, "packed_ice", "Packed Ice", 0.5F, 64, true, false, BlockStateLoader.getBlockShapes("packed_ice")));
    public static final BlockType SUNFLOWER = register(new BlockType(497, "sunflower", "Sunflower", 0F, 64, true, false, BlockStateLoader.getBlockShapes("sunflower")));
    public static final BlockType LILAC = register(new BlockType(498, "lilac", "Lilac", 0F, 64, true, false, BlockStateLoader.getBlockShapes("lilac")));
    public static final BlockType ROSE_BUSH = register(new BlockType(499, "rose_bush", "Rose Bush", 0F, 64, true, false, BlockStateLoader.getBlockShapes("rose_bush")));
    public static final BlockType PEONY = register(new BlockType(500, "peony", "Peony", 0F, 64, true, false, BlockStateLoader.getBlockShapes("peony")));
    public static final BlockType TALL_GRASS = register(new BlockType(501, "tall_grass", "Tall Grass", 0F, 64, true, false, BlockStateLoader.getBlockShapes("tall_grass")));
    public static final BlockType LARGE_FERN = register(new BlockType(502, "large_fern", "Large Fern", 0F, 64, true, false, BlockStateLoader.getBlockShapes("large_fern")));
    public static final BlockType WHITE_BANNER = register(new BlockType(503, "white_banner", "White Banner", 1F, 16, true, false, BlockStateLoader.getBlockShapes("white_banner")));
    public static final BlockType ORANGE_BANNER = register(new BlockType(504, "orange_banner", "Orange Banner", 1F, 16, true, false, BlockStateLoader.getBlockShapes("orange_banner")));
    public static final BlockType MAGENTA_BANNER = register(new BlockType(505, "magenta_banner", "Magenta Banner", 1F, 16, true, false, BlockStateLoader.getBlockShapes("magenta_banner")));
    public static final BlockType LIGHT_BLUE_BANNER = register(new BlockType(506, "light_blue_banner", "Light Blue Banner", 1F, 16, true, false, BlockStateLoader.getBlockShapes("light_blue_banner")));
    public static final BlockType YELLOW_BANNER = register(new BlockType(507, "yellow_banner", "Yellow Banner", 1F, 16, true, false, BlockStateLoader.getBlockShapes("yellow_banner")));
    public static final BlockType LIME_BANNER = register(new BlockType(508, "lime_banner", "Lime Banner", 1F, 16, true, false, BlockStateLoader.getBlockShapes("lime_banner")));
    public static final BlockType PINK_BANNER = register(new BlockType(509, "pink_banner", "Pink Banner", 1F, 16, true, false, BlockStateLoader.getBlockShapes("pink_banner")));
    public static final BlockType GRAY_BANNER = register(new BlockType(510, "gray_banner", "Gray Banner", 1F, 16, true, false, BlockStateLoader.getBlockShapes("gray_banner")));
    public static final BlockType LIGHT_GRAY_BANNER = register(new BlockType(511, "light_gray_banner", "Light Gray Banner", 1F, 16, true, false, BlockStateLoader.getBlockShapes("light_gray_banner")));
    public static final BlockType CYAN_BANNER = register(new BlockType(512, "cyan_banner", "Cyan Banner", 1F, 16, true, false, BlockStateLoader.getBlockShapes("cyan_banner")));
    public static final BlockType PURPLE_BANNER = register(new BlockType(513, "purple_banner", "Purple Banner", 1F, 16, true, false, BlockStateLoader.getBlockShapes("purple_banner")));
    public static final BlockType BLUE_BANNER = register(new BlockType(514, "blue_banner", "Blue Banner", 1F, 16, true, false, BlockStateLoader.getBlockShapes("blue_banner")));
    public static final BlockType BROWN_BANNER = register(new BlockType(515, "brown_banner", "Brown Banner", 1F, 16, true, false, BlockStateLoader.getBlockShapes("brown_banner")));
    public static final BlockType GREEN_BANNER = register(new BlockType(516, "green_banner", "Green Banner", 1F, 16, true, false, BlockStateLoader.getBlockShapes("green_banner")));
    public static final BlockType RED_BANNER = register(new BlockType(517, "red_banner", "Red Banner", 1F, 16, true, false, BlockStateLoader.getBlockShapes("red_banner")));
    public static final BlockType BLACK_BANNER = register(new BlockType(518, "black_banner", "Black Banner", 1F, 16, true, false, BlockStateLoader.getBlockShapes("black_banner")));
    public static final BlockType WHITE_WALL_BANNER = register(new BlockType(519, "white_wall_banner", "White wall banner", 1F, 16, true, false, BlockStateLoader.getBlockShapes("white_wall_banner")));
    public static final BlockType ORANGE_WALL_BANNER = register(new BlockType(520, "orange_wall_banner", "Orange wall banner", 1F, 16, true, false, BlockStateLoader.getBlockShapes("orange_wall_banner")));
    public static final BlockType MAGENTA_WALL_BANNER = register(new BlockType(521, "magenta_wall_banner", "Magenta wall banner", 1F, 16, true, false, BlockStateLoader.getBlockShapes("magenta_wall_banner")));
    public static final BlockType LIGHT_BLUE_WALL_BANNER = register(new BlockType(522, "light_blue_wall_banner", "Light blue wall banner", 1F, 16, true, false, BlockStateLoader.getBlockShapes("light_blue_wall_banner")));
    public static final BlockType YELLOW_WALL_BANNER = register(new BlockType(523, "yellow_wall_banner", "Yellow wall banner", 1F, 16, true, false, BlockStateLoader.getBlockShapes("yellow_wall_banner")));
    public static final BlockType LIME_WALL_BANNER = register(new BlockType(524, "lime_wall_banner", "Lime wall banner", 1F, 16, true, false, BlockStateLoader.getBlockShapes("lime_wall_banner")));
    public static final BlockType PINK_WALL_BANNER = register(new BlockType(525, "pink_wall_banner", "Pink wall banner", 1F, 16, true, false, BlockStateLoader.getBlockShapes("pink_wall_banner")));
    public static final BlockType GRAY_WALL_BANNER = register(new BlockType(526, "gray_wall_banner", "Gray wall banner", 1F, 16, true, false, BlockStateLoader.getBlockShapes("gray_wall_banner")));
    public static final BlockType LIGHT_GRAY_WALL_BANNER = register(new BlockType(527, "light_gray_wall_banner", "Light gray wall banner", 1F, 16, true, false, BlockStateLoader.getBlockShapes("light_gray_wall_banner")));
    public static final BlockType CYAN_WALL_BANNER = register(new BlockType(528, "cyan_wall_banner", "Cyan wall banner", 1F, 16, true, false, BlockStateLoader.getBlockShapes("cyan_wall_banner")));
    public static final BlockType PURPLE_WALL_BANNER = register(new BlockType(529, "purple_wall_banner", "Purple wall banner", 1F, 16, true, false, BlockStateLoader.getBlockShapes("purple_wall_banner")));
    public static final BlockType BLUE_WALL_BANNER = register(new BlockType(530, "blue_wall_banner", "Blue wall banner", 1F, 16, true, false, BlockStateLoader.getBlockShapes("blue_wall_banner")));
    public static final BlockType BROWN_WALL_BANNER = register(new BlockType(531, "brown_wall_banner", "Brown wall banner", 1F, 16, true, false, BlockStateLoader.getBlockShapes("brown_wall_banner")));
    public static final BlockType GREEN_WALL_BANNER = register(new BlockType(532, "green_wall_banner", "Green wall banner", 1F, 16, true, false, BlockStateLoader.getBlockShapes("green_wall_banner")));
    public static final BlockType RED_WALL_BANNER = register(new BlockType(533, "red_wall_banner", "Red wall banner", 1F, 16, true, false, BlockStateLoader.getBlockShapes("red_wall_banner")));
    public static final BlockType BLACK_WALL_BANNER = register(new BlockType(534, "black_wall_banner", "Black wall banner", 1F, 16, true, false, BlockStateLoader.getBlockShapes("black_wall_banner")));
    public static final BlockType RED_SANDSTONE = register(new BlockType(535, "red_sandstone", "Red Sandstone", 0.8F, 64, true, true, BlockStateLoader.getBlockShapes("red_sandstone")));
    public static final BlockType CHISELED_RED_SANDSTONE = register(new BlockType(536, "chiseled_red_sandstone", "Chiseled Red Sandstone", 0.8F, 64, true, true, BlockStateLoader.getBlockShapes("chiseled_red_sandstone")));
    public static final BlockType CUT_RED_SANDSTONE = register(new BlockType(537, "cut_red_sandstone", "Cut Red Sandstone", 0.8F, 64, true, true, BlockStateLoader.getBlockShapes("cut_red_sandstone")));
    public static final BlockType RED_SANDSTONE_STAIRS = register(new BlockType(538, "red_sandstone_stairs", "Red Sandstone Stairs", 0.8F, 64, true, true, BlockStateLoader.getBlockShapes("red_sandstone_stairs")));
    public static final BlockType OAK_SLAB = register(new BlockType(539, "oak_slab", "Oak Slab", 2F, 64, true, false, BlockStateLoader.getBlockShapes("oak_slab")));
    public static final BlockType SPRUCE_SLAB = register(new BlockType(540, "spruce_slab", "Spruce Slab", 2F, 64, true, false, BlockStateLoader.getBlockShapes("spruce_slab")));
    public static final BlockType BIRCH_SLAB = register(new BlockType(541, "birch_slab", "Birch Slab", 2F, 64, true, false, BlockStateLoader.getBlockShapes("birch_slab")));
    public static final BlockType JUNGLE_SLAB = register(new BlockType(542, "jungle_slab", "Jungle Slab", 2F, 64, true, false, BlockStateLoader.getBlockShapes("jungle_slab")));
    public static final BlockType ACACIA_SLAB = register(new BlockType(543, "acacia_slab", "Acacia Slab", 2F, 64, true, false, BlockStateLoader.getBlockShapes("acacia_slab")));
    public static final BlockType CHERRY_SLAB = register(new BlockType(544, "cherry_slab", "Cherry Slab", 2F, 64, true, false, BlockStateLoader.getBlockShapes("cherry_slab")));
    public static final BlockType DARK_OAK_SLAB = register(new BlockType(545, "dark_oak_slab", "Dark Oak Slab", 2F, 64, true, false, BlockStateLoader.getBlockShapes("dark_oak_slab")));
    public static final BlockType MANGROVE_SLAB = register(new BlockType(546, "mangrove_slab", "Mangrove Slab", 2F, 64, true, false, BlockStateLoader.getBlockShapes("mangrove_slab")));
    public static final BlockType BAMBOO_SLAB = register(new BlockType(547, "bamboo_slab", "Bamboo Slab", 2F, 64, true, false, BlockStateLoader.getBlockShapes("bamboo_slab")));
    public static final BlockType BAMBOO_MOSAIC_SLAB = register(new BlockType(548, "bamboo_mosaic_slab", "Bamboo Mosaic Slab", 2F, 64, true, false, BlockStateLoader.getBlockShapes("bamboo_mosaic_slab")));
    public static final BlockType STONE_SLAB = register(new BlockType(549, "stone_slab", "Stone Slab", 2F, 64, true, true, BlockStateLoader.getBlockShapes("stone_slab")));
    public static final BlockType SMOOTH_STONE_SLAB = register(new BlockType(550, "smooth_stone_slab", "Smooth Stone Slab", 2F, 64, true, true, BlockStateLoader.getBlockShapes("smooth_stone_slab")));
    public static final BlockType SANDSTONE_SLAB = register(new BlockType(551, "sandstone_slab", "Sandstone Slab", 2F, 64, true, true, BlockStateLoader.getBlockShapes("sandstone_slab")));
    public static final BlockType CUT_SANDSTONE_SLAB = register(new BlockType(552, "cut_sandstone_slab", "Cut Sandstone Slab", 2F, 64, true, true, BlockStateLoader.getBlockShapes("cut_sandstone_slab")));
    public static final BlockType PETRIFIED_OAK_SLAB = register(new BlockType(553, "petrified_oak_slab", "Petrified Oak Slab", 2F, 64, true, true, BlockStateLoader.getBlockShapes("petrified_oak_slab")));
    public static final BlockType COBBLESTONE_SLAB = register(new BlockType(554, "cobblestone_slab", "Cobblestone Slab", 2F, 64, true, true, BlockStateLoader.getBlockShapes("cobblestone_slab")));
    public static final BlockType BRICK_SLAB = register(new BlockType(555, "brick_slab", "Brick Slab", 2F, 64, true, true, BlockStateLoader.getBlockShapes("brick_slab")));
    public static final BlockType STONE_BRICK_SLAB = register(new BlockType(556, "stone_brick_slab", "Stone Brick Slab", 2F, 64, true, true, BlockStateLoader.getBlockShapes("stone_brick_slab")));
    public static final BlockType MUD_BRICK_SLAB = register(new BlockType(557, "mud_brick_slab", "Mud Brick Slab", 1.5F, 64, true, true, BlockStateLoader.getBlockShapes("mud_brick_slab")));
    public static final BlockType NETHER_BRICK_SLAB = register(new BlockType(558, "nether_brick_slab", "Nether Brick Slab", 2F, 64, true, true, BlockStateLoader.getBlockShapes("nether_brick_slab")));
    public static final BlockType QUARTZ_SLAB = register(new BlockType(559, "quartz_slab", "Quartz Slab", 2F, 64, true, true, BlockStateLoader.getBlockShapes("quartz_slab")));
    public static final BlockType RED_SANDSTONE_SLAB = register(new BlockType(560, "red_sandstone_slab", "Red Sandstone Slab", 2F, 64, true, true, BlockStateLoader.getBlockShapes("red_sandstone_slab")));
    public static final BlockType CUT_RED_SANDSTONE_SLAB = register(new BlockType(561, "cut_red_sandstone_slab", "Cut Red Sandstone Slab", 2F, 64, true, true, BlockStateLoader.getBlockShapes("cut_red_sandstone_slab")));
    public static final BlockType PURPUR_SLAB = register(new BlockType(562, "purpur_slab", "Purpur Slab", 2F, 64, true, true, BlockStateLoader.getBlockShapes("purpur_slab")));
    public static final BlockType SMOOTH_STONE = register(new BlockType(563, "smooth_stone", "Smooth Stone", 2F, 64, true, true, BlockStateLoader.getBlockShapes("smooth_stone")));
    public static final BlockType SMOOTH_SANDSTONE = register(new BlockType(564, "smooth_sandstone", "Smooth Sandstone", 2F, 64, true, true, BlockStateLoader.getBlockShapes("smooth_sandstone")));
    public static final BlockType SMOOTH_QUARTZ = register(new BlockType(565, "smooth_quartz", "Smooth Quartz Block", 2F, 64, true, true, BlockStateLoader.getBlockShapes("smooth_quartz")));
    public static final BlockType SMOOTH_RED_SANDSTONE = register(new BlockType(566, "smooth_red_sandstone", "Smooth Red Sandstone", 2F, 64, true, true, BlockStateLoader.getBlockShapes("smooth_red_sandstone")));
    public static final BlockType SPRUCE_FENCE_GATE = register(new BlockType(567, "spruce_fence_gate", "Spruce Fence Gate", 2F, 64, true, false, BlockStateLoader.getBlockShapes("spruce_fence_gate")));
    public static final BlockType BIRCH_FENCE_GATE = register(new BlockType(568, "birch_fence_gate", "Birch Fence Gate", 2F, 64, true, false, BlockStateLoader.getBlockShapes("birch_fence_gate")));
    public static final BlockType JUNGLE_FENCE_GATE = register(new BlockType(569, "jungle_fence_gate", "Jungle Fence Gate", 2F, 64, true, false, BlockStateLoader.getBlockShapes("jungle_fence_gate")));
    public static final BlockType ACACIA_FENCE_GATE = register(new BlockType(570, "acacia_fence_gate", "Acacia Fence Gate", 2F, 64, true, false, BlockStateLoader.getBlockShapes("acacia_fence_gate")));
    public static final BlockType CHERRY_FENCE_GATE = register(new BlockType(571, "cherry_fence_gate", "Cherry Fence Gate", 2F, 64, true, false, BlockStateLoader.getBlockShapes("cherry_fence_gate")));
    public static final BlockType DARK_OAK_FENCE_GATE = register(new BlockType(572, "dark_oak_fence_gate", "Dark Oak Fence Gate", 2F, 64, true, false, BlockStateLoader.getBlockShapes("dark_oak_fence_gate")));
    public static final BlockType MANGROVE_FENCE_GATE = register(new BlockType(573, "mangrove_fence_gate", "Mangrove Fence Gate", 2F, 64, true, false, BlockStateLoader.getBlockShapes("mangrove_fence_gate")));
    public static final BlockType BAMBOO_FENCE_GATE = register(new BlockType(574, "bamboo_fence_gate", "Bamboo Fence Gate", 2F, 64, true, false, BlockStateLoader.getBlockShapes("bamboo_fence_gate")));
    public static final BlockType SPRUCE_FENCE = register(new BlockType(575, "spruce_fence", "Spruce Fence", 2F, 64, true, false, BlockStateLoader.getBlockShapes("spruce_fence")));
    public static final BlockType BIRCH_FENCE = register(new BlockType(576, "birch_fence", "Birch Fence", 2F, 64, true, false, BlockStateLoader.getBlockShapes("birch_fence")));
    public static final BlockType JUNGLE_FENCE = register(new BlockType(577, "jungle_fence", "Jungle Fence", 2F, 64, true, false, BlockStateLoader.getBlockShapes("jungle_fence")));
    public static final BlockType ACACIA_FENCE = register(new BlockType(578, "acacia_fence", "Acacia Fence", 2F, 64, true, false, BlockStateLoader.getBlockShapes("acacia_fence")));
    public static final BlockType CHERRY_FENCE = register(new BlockType(579, "cherry_fence", "Cherry Fence", 2F, 64, true, false, BlockStateLoader.getBlockShapes("cherry_fence")));
    public static final BlockType DARK_OAK_FENCE = register(new BlockType(580, "dark_oak_fence", "Dark Oak Fence", 2F, 64, true, false, BlockStateLoader.getBlockShapes("dark_oak_fence")));
    public static final BlockType MANGROVE_FENCE = register(new BlockType(581, "mangrove_fence", "Mangrove Fence", 2F, 64, true, false, BlockStateLoader.getBlockShapes("mangrove_fence")));
    public static final BlockType BAMBOO_FENCE = register(new BlockType(582, "bamboo_fence", "Bamboo Fence", 2F, 64, true, false, BlockStateLoader.getBlockShapes("bamboo_fence")));
    public static final BlockType SPRUCE_DOOR = register(new BlockType(583, "spruce_door", "Spruce Door", 3F, 64, true, false, BlockStateLoader.getBlockShapes("spruce_door")));
    public static final BlockType BIRCH_DOOR = register(new BlockType(584, "birch_door", "Birch Door", 3F, 64, true, false, BlockStateLoader.getBlockShapes("birch_door")));
    public static final BlockType JUNGLE_DOOR = register(new BlockType(585, "jungle_door", "Jungle Door", 3F, 64, true, false, BlockStateLoader.getBlockShapes("jungle_door")));
    public static final BlockType ACACIA_DOOR = register(new BlockType(586, "acacia_door", "Acacia Door", 3F, 64, true, false, BlockStateLoader.getBlockShapes("acacia_door")));
    public static final BlockType CHERRY_DOOR = register(new BlockType(587, "cherry_door", "Cherry Door", 3F, 64, true, false, BlockStateLoader.getBlockShapes("cherry_door")));
    public static final BlockType DARK_OAK_DOOR = register(new BlockType(588, "dark_oak_door", "Dark Oak Door", 3F, 64, true, false, BlockStateLoader.getBlockShapes("dark_oak_door")));
    public static final BlockType MANGROVE_DOOR = register(new BlockType(589, "mangrove_door", "Mangrove Door", 3F, 64, true, false, BlockStateLoader.getBlockShapes("mangrove_door")));
    public static final BlockType BAMBOO_DOOR = register(new BlockType(590, "bamboo_door", "Bamboo Door", 3F, 64, true, false, BlockStateLoader.getBlockShapes("bamboo_door")));
    public static final BlockType END_ROD = register(new BlockType(591, "end_rod", "End Rod", 0F, 64, true, false, BlockStateLoader.getBlockShapes("end_rod")));
    public static final BlockType CHORUS_PLANT = register(new BlockType(592, "chorus_plant", "Chorus Plant", 0.4F, 64, true, false, BlockStateLoader.getBlockShapes("chorus_plant")));
    public static final BlockType CHORUS_FLOWER = register(new BlockType(593, "chorus_flower", "Chorus Flower", 0.4F, 64, true, false, BlockStateLoader.getBlockShapes("chorus_flower")));
    public static final BlockType PURPUR_BLOCK = register(new BlockType(594, "purpur_block", "Purpur Block", 1.5F, 64, true, true, BlockStateLoader.getBlockShapes("purpur_block")));
    public static final BlockType PURPUR_PILLAR = register(new BlockType(595, "purpur_pillar", "Purpur Pillar", 1.5F, 64, true, true, BlockStateLoader.getBlockShapes("purpur_pillar")));
    public static final BlockType PURPUR_STAIRS = register(new BlockType(596, "purpur_stairs", "Purpur Stairs", 1.5F, 64, true, true, BlockStateLoader.getBlockShapes("purpur_stairs")));
    public static final BlockType END_STONE_BRICKS = register(new BlockType(597, "end_stone_bricks", "End Stone Bricks", 3F, 64, true, true, BlockStateLoader.getBlockShapes("end_stone_bricks")));
    public static final BlockType TORCHFLOWER_CROP = register(new BlockType(598, "torchflower_crop", "Torchflower Crop", 0F, 64, true, false, BlockStateLoader.getBlockShapes("torchflower_crop")));
    public static final BlockType PITCHER_CROP = register(new BlockType(599, "pitcher_crop", "Pitcher Crop", 0F, 0, true, false, BlockStateLoader.getBlockShapes("pitcher_crop")));
    public static final BlockType PITCHER_PLANT = register(new BlockType(600, "pitcher_plant", "Pitcher Plant", 0F, 0, true, false, BlockStateLoader.getBlockShapes("pitcher_plant")));
    public static final BlockType BEETROOTS = register(new BlockType(601, "beetroots", "Beetroots", 0F, 64, true, false, BlockStateLoader.getBlockShapes("beetroots")));
    public static final BlockType DIRT_PATH = register(new BlockType(602, "dirt_path", "Dirt Path", 0.65F, 64, true, false, BlockStateLoader.getBlockShapes("dirt_path")));
    public static final BlockType END_GATEWAY = register(new BlockType(603, "end_gateway", "End Gateway", -1F, 64, false, false, BlockStateLoader.getBlockShapes("end_gateway")));
    public static final BlockType REPEATING_COMMAND_BLOCK = register(new BlockType(604, "repeating_command_block", "Repeating Command Block", -1F, 64, false, true, BlockStateLoader.getBlockShapes("repeating_command_block")));
    public static final BlockType CHAIN_COMMAND_BLOCK = register(new BlockType(605, "chain_command_block", "Chain Command Block", -1F, 64, false, true, BlockStateLoader.getBlockShapes("chain_command_block")));
    public static final BlockType FROSTED_ICE = register(new BlockType(606, "frosted_ice", "Frosted Ice", 0.5F, 64, true, false, BlockStateLoader.getBlockShapes("frosted_ice")));
    public static final BlockType MAGMA_BLOCK = register(new BlockType(607, "magma_block", "Magma Block", 0.5F, 64, true, true, BlockStateLoader.getBlockShapes("magma_block")));
    public static final BlockType NETHER_WART_BLOCK = register(new BlockType(608, "nether_wart_block", "Nether Wart Block", 1F, 64, true, false, BlockStateLoader.getBlockShapes("nether_wart_block")));
    public static final BlockType RED_NETHER_BRICKS = register(new BlockType(609, "red_nether_bricks", "Red Nether Bricks", 2F, 64, true, true, BlockStateLoader.getBlockShapes("red_nether_bricks")));
    public static final BlockType BONE_BLOCK = register(new BlockType(610, "bone_block", "Bone Block", 2F, 64, true, true, BlockStateLoader.getBlockShapes("bone_block")));
    public static final BlockType STRUCTURE_VOID = register(new BlockType(611, "structure_void", "Structure Void", 0F, 64, true, false, BlockStateLoader.getBlockShapes("structure_void")));
    public static final BlockType OBSERVER = register(new BlockType(612, "observer", "Observer", 3F, 64, true, true, BlockStateLoader.getBlockShapes("observer")));
    public static final BlockType SHULKER_BOX = register(new BlockType(613, "shulker_box", "Shulker Box", 2F, 1, true, false, BlockStateLoader.getBlockShapes("shulker_box")));
    public static final BlockType WHITE_SHULKER_BOX = register(new BlockType(614, "white_shulker_box", "White Shulker Box", 2F, 1, true, false, BlockStateLoader.getBlockShapes("white_shulker_box")));
    public static final BlockType ORANGE_SHULKER_BOX = register(new BlockType(615, "orange_shulker_box", "Orange Shulker Box", 2F, 1, true, false, BlockStateLoader.getBlockShapes("orange_shulker_box")));
    public static final BlockType MAGENTA_SHULKER_BOX = register(new BlockType(616, "magenta_shulker_box", "Magenta Shulker Box", 2F, 1, true, false, BlockStateLoader.getBlockShapes("magenta_shulker_box")));
    public static final BlockType LIGHT_BLUE_SHULKER_BOX = register(new BlockType(617, "light_blue_shulker_box", "Light Blue Shulker Box", 2F, 1, true, false, BlockStateLoader.getBlockShapes("light_blue_shulker_box")));
    public static final BlockType YELLOW_SHULKER_BOX = register(new BlockType(618, "yellow_shulker_box", "Yellow Shulker Box", 2F, 1, true, false, BlockStateLoader.getBlockShapes("yellow_shulker_box")));
    public static final BlockType LIME_SHULKER_BOX = register(new BlockType(619, "lime_shulker_box", "Lime Shulker Box", 2F, 1, true, false, BlockStateLoader.getBlockShapes("lime_shulker_box")));
    public static final BlockType PINK_SHULKER_BOX = register(new BlockType(620, "pink_shulker_box", "Pink Shulker Box", 2F, 1, true, false, BlockStateLoader.getBlockShapes("pink_shulker_box")));
    public static final BlockType GRAY_SHULKER_BOX = register(new BlockType(621, "gray_shulker_box", "Gray Shulker Box", 2F, 1, true, false, BlockStateLoader.getBlockShapes("gray_shulker_box")));
    public static final BlockType LIGHT_GRAY_SHULKER_BOX = register(new BlockType(622, "light_gray_shulker_box", "Light Gray Shulker Box", 2F, 1, true, false, BlockStateLoader.getBlockShapes("light_gray_shulker_box")));
    public static final BlockType CYAN_SHULKER_BOX = register(new BlockType(623, "cyan_shulker_box", "Cyan Shulker Box", 2F, 1, true, false, BlockStateLoader.getBlockShapes("cyan_shulker_box")));
    public static final BlockType PURPLE_SHULKER_BOX = register(new BlockType(624, "purple_shulker_box", "Purple Shulker Box", 2F, 1, true, false, BlockStateLoader.getBlockShapes("purple_shulker_box")));
    public static final BlockType BLUE_SHULKER_BOX = register(new BlockType(625, "blue_shulker_box", "Blue Shulker Box", 2F, 1, true, false, BlockStateLoader.getBlockShapes("blue_shulker_box")));
    public static final BlockType BROWN_SHULKER_BOX = register(new BlockType(626, "brown_shulker_box", "Brown Shulker Box", 2F, 1, true, false, BlockStateLoader.getBlockShapes("brown_shulker_box")));
    public static final BlockType GREEN_SHULKER_BOX = register(new BlockType(627, "green_shulker_box", "Green Shulker Box", 2F, 1, true, false, BlockStateLoader.getBlockShapes("green_shulker_box")));
    public static final BlockType RED_SHULKER_BOX = register(new BlockType(628, "red_shulker_box", "Red Shulker Box", 2F, 1, true, false, BlockStateLoader.getBlockShapes("red_shulker_box")));
    public static final BlockType BLACK_SHULKER_BOX = register(new BlockType(629, "black_shulker_box", "Black Shulker Box", 2F, 1, true, false, BlockStateLoader.getBlockShapes("black_shulker_box")));
    public static final BlockType WHITE_GLAZED_TERRACOTTA = register(new BlockType(630, "white_glazed_terracotta", "White Glazed Terracotta", 1.4F, 64, true, true, BlockStateLoader.getBlockShapes("white_glazed_terracotta")));
    public static final BlockType ORANGE_GLAZED_TERRACOTTA = register(new BlockType(631, "orange_glazed_terracotta", "Orange Glazed Terracotta", 1.4F, 64, true, true, BlockStateLoader.getBlockShapes("orange_glazed_terracotta")));
    public static final BlockType MAGENTA_GLAZED_TERRACOTTA = register(new BlockType(632, "magenta_glazed_terracotta", "Magenta Glazed Terracotta", 1.4F, 64, true, true, BlockStateLoader.getBlockShapes("magenta_glazed_terracotta")));
    public static final BlockType LIGHT_BLUE_GLAZED_TERRACOTTA = register(new BlockType(633, "light_blue_glazed_terracotta", "Light Blue Glazed Terracotta", 1.4F, 64, true, true, BlockStateLoader.getBlockShapes("light_blue_glazed_terracotta")));
    public static final BlockType YELLOW_GLAZED_TERRACOTTA = register(new BlockType(634, "yellow_glazed_terracotta", "Yellow Glazed Terracotta", 1.4F, 64, true, true, BlockStateLoader.getBlockShapes("yellow_glazed_terracotta")));
    public static final BlockType LIME_GLAZED_TERRACOTTA = register(new BlockType(635, "lime_glazed_terracotta", "Lime Glazed Terracotta", 1.4F, 64, true, true, BlockStateLoader.getBlockShapes("lime_glazed_terracotta")));
    public static final BlockType PINK_GLAZED_TERRACOTTA = register(new BlockType(636, "pink_glazed_terracotta", "Pink Glazed Terracotta", 1.4F, 64, true, true, BlockStateLoader.getBlockShapes("pink_glazed_terracotta")));
    public static final BlockType GRAY_GLAZED_TERRACOTTA = register(new BlockType(637, "gray_glazed_terracotta", "Gray Glazed Terracotta", 1.4F, 64, true, true, BlockStateLoader.getBlockShapes("gray_glazed_terracotta")));
    public static final BlockType LIGHT_GRAY_GLAZED_TERRACOTTA = register(new BlockType(638, "light_gray_glazed_terracotta", "Light Gray Glazed Terracotta", 1.4F, 64, true, true, BlockStateLoader.getBlockShapes("light_gray_glazed_terracotta")));
    public static final BlockType CYAN_GLAZED_TERRACOTTA = register(new BlockType(639, "cyan_glazed_terracotta", "Cyan Glazed Terracotta", 1.4F, 64, true, true, BlockStateLoader.getBlockShapes("cyan_glazed_terracotta")));
    public static final BlockType PURPLE_GLAZED_TERRACOTTA = register(new BlockType(640, "purple_glazed_terracotta", "Purple Glazed Terracotta", 1.4F, 64, true, true, BlockStateLoader.getBlockShapes("purple_glazed_terracotta")));
    public static final BlockType BLUE_GLAZED_TERRACOTTA = register(new BlockType(641, "blue_glazed_terracotta", "Blue Glazed Terracotta", 1.4F, 64, true, true, BlockStateLoader.getBlockShapes("blue_glazed_terracotta")));
    public static final BlockType BROWN_GLAZED_TERRACOTTA = register(new BlockType(642, "brown_glazed_terracotta", "Brown Glazed Terracotta", 1.4F, 64, true, true, BlockStateLoader.getBlockShapes("brown_glazed_terracotta")));
    public static final BlockType GREEN_GLAZED_TERRACOTTA = register(new BlockType(643, "green_glazed_terracotta", "Green Glazed Terracotta", 1.4F, 64, true, true, BlockStateLoader.getBlockShapes("green_glazed_terracotta")));
    public static final BlockType RED_GLAZED_TERRACOTTA = register(new BlockType(644, "red_glazed_terracotta", "Red Glazed Terracotta", 1.4F, 64, true, true, BlockStateLoader.getBlockShapes("red_glazed_terracotta")));
    public static final BlockType BLACK_GLAZED_TERRACOTTA = register(new BlockType(645, "black_glazed_terracotta", "Black Glazed Terracotta", 1.4F, 64, true, true, BlockStateLoader.getBlockShapes("black_glazed_terracotta")));
    public static final BlockType WHITE_CONCRETE = register(new BlockType(646, "white_concrete", "White Concrete", 1.8F, 64, true, true, BlockStateLoader.getBlockShapes("white_concrete")));
    public static final BlockType ORANGE_CONCRETE = register(new BlockType(647, "orange_concrete", "Orange Concrete", 1.8F, 64, true, true, BlockStateLoader.getBlockShapes("orange_concrete")));
    public static final BlockType MAGENTA_CONCRETE = register(new BlockType(648, "magenta_concrete", "Magenta Concrete", 1.8F, 64, true, true, BlockStateLoader.getBlockShapes("magenta_concrete")));
    public static final BlockType LIGHT_BLUE_CONCRETE = register(new BlockType(649, "light_blue_concrete", "Light Blue Concrete", 1.8F, 64, true, true, BlockStateLoader.getBlockShapes("light_blue_concrete")));
    public static final BlockType YELLOW_CONCRETE = register(new BlockType(650, "yellow_concrete", "Yellow Concrete", 1.8F, 64, true, true, BlockStateLoader.getBlockShapes("yellow_concrete")));
    public static final BlockType LIME_CONCRETE = register(new BlockType(651, "lime_concrete", "Lime Concrete", 1.8F, 64, true, true, BlockStateLoader.getBlockShapes("lime_concrete")));
    public static final BlockType PINK_CONCRETE = register(new BlockType(652, "pink_concrete", "Pink Concrete", 1.8F, 64, true, true, BlockStateLoader.getBlockShapes("pink_concrete")));
    public static final BlockType GRAY_CONCRETE = register(new BlockType(653, "gray_concrete", "Gray Concrete", 1.8F, 64, true, true, BlockStateLoader.getBlockShapes("gray_concrete")));
    public static final BlockType LIGHT_GRAY_CONCRETE = register(new BlockType(654, "light_gray_concrete", "Light Gray Concrete", 1.8F, 64, true, true, BlockStateLoader.getBlockShapes("light_gray_concrete")));
    public static final BlockType CYAN_CONCRETE = register(new BlockType(655, "cyan_concrete", "Cyan Concrete", 1.8F, 64, true, true, BlockStateLoader.getBlockShapes("cyan_concrete")));
    public static final BlockType PURPLE_CONCRETE = register(new BlockType(656, "purple_concrete", "Purple Concrete", 1.8F, 64, true, true, BlockStateLoader.getBlockShapes("purple_concrete")));
    public static final BlockType BLUE_CONCRETE = register(new BlockType(657, "blue_concrete", "Blue Concrete", 1.8F, 64, true, true, BlockStateLoader.getBlockShapes("blue_concrete")));
    public static final BlockType BROWN_CONCRETE = register(new BlockType(658, "brown_concrete", "Brown Concrete", 1.8F, 64, true, true, BlockStateLoader.getBlockShapes("brown_concrete")));
    public static final BlockType GREEN_CONCRETE = register(new BlockType(659, "green_concrete", "Green Concrete", 1.8F, 64, true, true, BlockStateLoader.getBlockShapes("green_concrete")));
    public static final BlockType RED_CONCRETE = register(new BlockType(660, "red_concrete", "Red Concrete", 1.8F, 64, true, true, BlockStateLoader.getBlockShapes("red_concrete")));
    public static final BlockType BLACK_CONCRETE = register(new BlockType(661, "black_concrete", "Black Concrete", 1.8F, 64, true, true, BlockStateLoader.getBlockShapes("black_concrete")));
    public static final BlockType WHITE_CONCRETE_POWDER = register(new BlockType(662, "white_concrete_powder", "White Concrete Powder", 0.5F, 64, true, false, BlockStateLoader.getBlockShapes("white_concrete_powder")));
    public static final BlockType ORANGE_CONCRETE_POWDER = register(new BlockType(663, "orange_concrete_powder", "Orange Concrete Powder", 0.5F, 64, true, false, BlockStateLoader.getBlockShapes("orange_concrete_powder")));
    public static final BlockType MAGENTA_CONCRETE_POWDER = register(new BlockType(664, "magenta_concrete_powder", "Magenta Concrete Powder", 0.5F, 64, true, false, BlockStateLoader.getBlockShapes("magenta_concrete_powder")));
    public static final BlockType LIGHT_BLUE_CONCRETE_POWDER = register(new BlockType(665, "light_blue_concrete_powder", "Light Blue Concrete Powder", 0.5F, 64, true, false, BlockStateLoader.getBlockShapes("light_blue_concrete_powder")));
    public static final BlockType YELLOW_CONCRETE_POWDER = register(new BlockType(666, "yellow_concrete_powder", "Yellow Concrete Powder", 0.5F, 64, true, false, BlockStateLoader.getBlockShapes("yellow_concrete_powder")));
    public static final BlockType LIME_CONCRETE_POWDER = register(new BlockType(667, "lime_concrete_powder", "Lime Concrete Powder", 0.5F, 64, true, false, BlockStateLoader.getBlockShapes("lime_concrete_powder")));
    public static final BlockType PINK_CONCRETE_POWDER = register(new BlockType(668, "pink_concrete_powder", "Pink Concrete Powder", 0.5F, 64, true, false, BlockStateLoader.getBlockShapes("pink_concrete_powder")));
    public static final BlockType GRAY_CONCRETE_POWDER = register(new BlockType(669, "gray_concrete_powder", "Gray Concrete Powder", 0.5F, 64, true, false, BlockStateLoader.getBlockShapes("gray_concrete_powder")));
    public static final BlockType LIGHT_GRAY_CONCRETE_POWDER = register(new BlockType(670, "light_gray_concrete_powder", "Light Gray Concrete Powder", 0.5F, 64, true, false, BlockStateLoader.getBlockShapes("light_gray_concrete_powder")));
    public static final BlockType CYAN_CONCRETE_POWDER = register(new BlockType(671, "cyan_concrete_powder", "Cyan Concrete Powder", 0.5F, 64, true, false, BlockStateLoader.getBlockShapes("cyan_concrete_powder")));
    public static final BlockType PURPLE_CONCRETE_POWDER = register(new BlockType(672, "purple_concrete_powder", "Purple Concrete Powder", 0.5F, 64, true, false, BlockStateLoader.getBlockShapes("purple_concrete_powder")));
    public static final BlockType BLUE_CONCRETE_POWDER = register(new BlockType(673, "blue_concrete_powder", "Blue Concrete Powder", 0.5F, 64, true, false, BlockStateLoader.getBlockShapes("blue_concrete_powder")));
    public static final BlockType BROWN_CONCRETE_POWDER = register(new BlockType(674, "brown_concrete_powder", "Brown Concrete Powder", 0.5F, 64, true, false, BlockStateLoader.getBlockShapes("brown_concrete_powder")));
    public static final BlockType GREEN_CONCRETE_POWDER = register(new BlockType(675, "green_concrete_powder", "Green Concrete Powder", 0.5F, 64, true, false, BlockStateLoader.getBlockShapes("green_concrete_powder")));
    public static final BlockType RED_CONCRETE_POWDER = register(new BlockType(676, "red_concrete_powder", "Red Concrete Powder", 0.5F, 64, true, false, BlockStateLoader.getBlockShapes("red_concrete_powder")));
    public static final BlockType BLACK_CONCRETE_POWDER = register(new BlockType(677, "black_concrete_powder", "Black Concrete Powder", 0.5F, 64, true, false, BlockStateLoader.getBlockShapes("black_concrete_powder")));
    public static final BlockType KELP = register(new BlockType(678, "kelp", "Kelp", 0F, 64, true, false, BlockStateLoader.getBlockShapes("kelp")));
    public static final BlockType KELP_PLANT = register(new BlockType(679, "kelp_plant", "Kelp Plant", 0F, 64, true, false, BlockStateLoader.getBlockShapes("kelp_plant")));
    public static final BlockType DRIED_KELP_BLOCK = register(new BlockType(680, "dried_kelp_block", "Dried Kelp Block", 0.5F, 64, true, false, BlockStateLoader.getBlockShapes("dried_kelp_block")));
    public static final BlockType TURTLE_EGG = register(new BlockType(681, "turtle_egg", "Turtle Egg", 0.5F, 64, true, false, BlockStateLoader.getBlockShapes("turtle_egg")));
    public static final BlockType SNIFFER_EGG = register(new BlockType(682, "sniffer_egg", "Sniffer Egg", 0.5F, 0, true, false, BlockStateLoader.getBlockShapes("sniffer_egg")));
    public static final BlockType DEAD_TUBE_CORAL_BLOCK = register(new BlockType(683, "dead_tube_coral_block", "Dead Tube Coral Block", 1.5F, 64, true, true, BlockStateLoader.getBlockShapes("dead_tube_coral_block")));
    public static final BlockType DEAD_BRAIN_CORAL_BLOCK = register(new BlockType(684, "dead_brain_coral_block", "Dead Brain Coral Block", 1.5F, 64, true, true, BlockStateLoader.getBlockShapes("dead_brain_coral_block")));
    public static final BlockType DEAD_BUBBLE_CORAL_BLOCK = register(new BlockType(685, "dead_bubble_coral_block", "Dead Bubble Coral Block", 1.5F, 64, true, true, BlockStateLoader.getBlockShapes("dead_bubble_coral_block")));
    public static final BlockType DEAD_FIRE_CORAL_BLOCK = register(new BlockType(686, "dead_fire_coral_block", "Dead Fire Coral Block", 1.5F, 64, true, true, BlockStateLoader.getBlockShapes("dead_fire_coral_block")));
    public static final BlockType DEAD_HORN_CORAL_BLOCK = register(new BlockType(687, "dead_horn_coral_block", "Dead Horn Coral Block", 1.5F, 64, true, true, BlockStateLoader.getBlockShapes("dead_horn_coral_block")));
    public static final BlockType TUBE_CORAL_BLOCK = register(new BlockType(688, "tube_coral_block", "Tube Coral Block", 1.5F, 64, true, true, BlockStateLoader.getBlockShapes("tube_coral_block")));
    public static final BlockType BRAIN_CORAL_BLOCK = register(new BlockType(689, "brain_coral_block", "Brain Coral Block", 1.5F, 64, true, true, BlockStateLoader.getBlockShapes("brain_coral_block")));
    public static final BlockType BUBBLE_CORAL_BLOCK = register(new BlockType(690, "bubble_coral_block", "Bubble Coral Block", 1.5F, 64, true, true, BlockStateLoader.getBlockShapes("bubble_coral_block")));
    public static final BlockType FIRE_CORAL_BLOCK = register(new BlockType(691, "fire_coral_block", "Fire Coral Block", 1.5F, 64, true, true, BlockStateLoader.getBlockShapes("fire_coral_block")));
    public static final BlockType HORN_CORAL_BLOCK = register(new BlockType(692, "horn_coral_block", "Horn Coral Block", 1.5F, 64, true, true, BlockStateLoader.getBlockShapes("horn_coral_block")));
    public static final BlockType DEAD_TUBE_CORAL = register(new BlockType(693, "dead_tube_coral", "Dead Tube Coral", 0F, 64, true, true, BlockStateLoader.getBlockShapes("dead_tube_coral")));
    public static final BlockType DEAD_BRAIN_CORAL = register(new BlockType(694, "dead_brain_coral", "Dead Brain Coral", 0F, 64, true, true, BlockStateLoader.getBlockShapes("dead_brain_coral")));
    public static final BlockType DEAD_BUBBLE_CORAL = register(new BlockType(695, "dead_bubble_coral", "Dead Bubble Coral", 0F, 64, true, true, BlockStateLoader.getBlockShapes("dead_bubble_coral")));
    public static final BlockType DEAD_FIRE_CORAL = register(new BlockType(696, "dead_fire_coral", "Dead Fire Coral", 0F, 64, true, true, BlockStateLoader.getBlockShapes("dead_fire_coral")));
    public static final BlockType DEAD_HORN_CORAL = register(new BlockType(697, "dead_horn_coral", "Dead Horn Coral", 0F, 64, true, true, BlockStateLoader.getBlockShapes("dead_horn_coral")));
    public static final BlockType TUBE_CORAL = register(new BlockType(698, "tube_coral", "Tube Coral", 0F, 64, true, false, BlockStateLoader.getBlockShapes("tube_coral")));
    public static final BlockType BRAIN_CORAL = register(new BlockType(699, "brain_coral", "Brain Coral", 0F, 64, true, false, BlockStateLoader.getBlockShapes("brain_coral")));
    public static final BlockType BUBBLE_CORAL = register(new BlockType(700, "bubble_coral", "Bubble Coral", 0F, 64, true, false, BlockStateLoader.getBlockShapes("bubble_coral")));
    public static final BlockType FIRE_CORAL = register(new BlockType(701, "fire_coral", "Fire Coral", 0F, 64, true, false, BlockStateLoader.getBlockShapes("fire_coral")));
    public static final BlockType HORN_CORAL = register(new BlockType(702, "horn_coral", "Horn Coral", 0F, 64, true, false, BlockStateLoader.getBlockShapes("horn_coral")));
    public static final BlockType DEAD_TUBE_CORAL_FAN = register(new BlockType(703, "dead_tube_coral_fan", "Dead Tube Coral Fan", 0F, 64, true, true, BlockStateLoader.getBlockShapes("dead_tube_coral_fan")));
    public static final BlockType DEAD_BRAIN_CORAL_FAN = register(new BlockType(704, "dead_brain_coral_fan", "Dead Brain Coral Fan", 0F, 64, true, true, BlockStateLoader.getBlockShapes("dead_brain_coral_fan")));
    public static final BlockType DEAD_BUBBLE_CORAL_FAN = register(new BlockType(705, "dead_bubble_coral_fan", "Dead Bubble Coral Fan", 0F, 64, true, true, BlockStateLoader.getBlockShapes("dead_bubble_coral_fan")));
    public static final BlockType DEAD_FIRE_CORAL_FAN = register(new BlockType(706, "dead_fire_coral_fan", "Dead Fire Coral Fan", 0F, 64, true, true, BlockStateLoader.getBlockShapes("dead_fire_coral_fan")));
    public static final BlockType DEAD_HORN_CORAL_FAN = register(new BlockType(707, "dead_horn_coral_fan", "Dead Horn Coral Fan", 0F, 64, true, true, BlockStateLoader.getBlockShapes("dead_horn_coral_fan")));
    public static final BlockType TUBE_CORAL_FAN = register(new BlockType(708, "tube_coral_fan", "Tube Coral Fan", 0F, 64, true, false, BlockStateLoader.getBlockShapes("tube_coral_fan")));
    public static final BlockType BRAIN_CORAL_FAN = register(new BlockType(709, "brain_coral_fan", "Brain Coral Fan", 0F, 64, true, false, BlockStateLoader.getBlockShapes("brain_coral_fan")));
    public static final BlockType BUBBLE_CORAL_FAN = register(new BlockType(710, "bubble_coral_fan", "Bubble Coral Fan", 0F, 64, true, false, BlockStateLoader.getBlockShapes("bubble_coral_fan")));
    public static final BlockType FIRE_CORAL_FAN = register(new BlockType(711, "fire_coral_fan", "Fire Coral Fan", 0F, 64, true, false, BlockStateLoader.getBlockShapes("fire_coral_fan")));
    public static final BlockType HORN_CORAL_FAN = register(new BlockType(712, "horn_coral_fan", "Horn Coral Fan", 0F, 64, true, false, BlockStateLoader.getBlockShapes("horn_coral_fan")));
    public static final BlockType DEAD_TUBE_CORAL_WALL_FAN = register(new BlockType(713, "dead_tube_coral_wall_fan", "Dead Tube Coral Wall Fan", 0F, 64, true, true, BlockStateLoader.getBlockShapes("dead_tube_coral_wall_fan")));
    public static final BlockType DEAD_BRAIN_CORAL_WALL_FAN = register(new BlockType(714, "dead_brain_coral_wall_fan", "Dead Brain Coral Wall Fan", 0F, 64, true, true, BlockStateLoader.getBlockShapes("dead_brain_coral_wall_fan")));
    public static final BlockType DEAD_BUBBLE_CORAL_WALL_FAN = register(new BlockType(715, "dead_bubble_coral_wall_fan", "Dead Bubble Coral Wall Fan", 0F, 64, true, true, BlockStateLoader.getBlockShapes("dead_bubble_coral_wall_fan")));
    public static final BlockType DEAD_FIRE_CORAL_WALL_FAN = register(new BlockType(716, "dead_fire_coral_wall_fan", "Dead Fire Coral Wall Fan", 0F, 64, true, true, BlockStateLoader.getBlockShapes("dead_fire_coral_wall_fan")));
    public static final BlockType DEAD_HORN_CORAL_WALL_FAN = register(new BlockType(717, "dead_horn_coral_wall_fan", "Dead Horn Coral Wall Fan", 0F, 64, true, true, BlockStateLoader.getBlockShapes("dead_horn_coral_wall_fan")));
    public static final BlockType TUBE_CORAL_WALL_FAN = register(new BlockType(718, "tube_coral_wall_fan", "Tube Coral Wall Fan", 0F, 64, true, false, BlockStateLoader.getBlockShapes("tube_coral_wall_fan")));
    public static final BlockType BRAIN_CORAL_WALL_FAN = register(new BlockType(719, "brain_coral_wall_fan", "Brain Coral Wall Fan", 0F, 64, true, false, BlockStateLoader.getBlockShapes("brain_coral_wall_fan")));
    public static final BlockType BUBBLE_CORAL_WALL_FAN = register(new BlockType(720, "bubble_coral_wall_fan", "Bubble Coral Wall Fan", 0F, 64, true, false, BlockStateLoader.getBlockShapes("bubble_coral_wall_fan")));
    public static final BlockType FIRE_CORAL_WALL_FAN = register(new BlockType(721, "fire_coral_wall_fan", "Fire Coral Wall Fan", 0F, 64, true, false, BlockStateLoader.getBlockShapes("fire_coral_wall_fan")));
    public static final BlockType HORN_CORAL_WALL_FAN = register(new BlockType(722, "horn_coral_wall_fan", "Horn Coral Wall Fan", 0F, 64, true, false, BlockStateLoader.getBlockShapes("horn_coral_wall_fan")));
    public static final BlockType SEA_PICKLE = register(new BlockType(723, "sea_pickle", "Sea Pickle", 0F, 64, true, false, BlockStateLoader.getBlockShapes("sea_pickle")));
    public static final BlockType BLUE_ICE = register(new BlockType(724, "blue_ice", "Blue Ice", 2.8F, 64, true, false, BlockStateLoader.getBlockShapes("blue_ice")));
    public static final BlockType CONDUIT = register(new BlockType(725, "conduit", "Conduit", 3F, 64, true, false, BlockStateLoader.getBlockShapes("conduit")));
    public static final BlockType BAMBOO_SAPLING = register(new BlockType(726, "bamboo_sapling", "Bamboo Shoot", 1F, 64, true, false, BlockStateLoader.getBlockShapes("bamboo_sapling")));
    public static final BlockType BAMBOO = register(new BlockType(727, "bamboo", "Bamboo", 1F, 64, true, false, BlockStateLoader.getBlockShapes("bamboo")));
    public static final BlockType POTTED_BAMBOO = register(new BlockType(728, "potted_bamboo", "Potted Bamboo", 0F, 64, true, false, BlockStateLoader.getBlockShapes("potted_bamboo")));
    public static final BlockType VOID_AIR = register(new BlockType(729, "void_air", "Void Air", 0F, 64, true, false, BlockStateLoader.getBlockShapes("void_air")));
    public static final BlockType CAVE_AIR = register(new BlockType(730, "cave_air", "Cave Air", 0F, 64, true, false, BlockStateLoader.getBlockShapes("cave_air")));
    public static final BlockType BUBBLE_COLUMN = register(new BlockType(731, "bubble_column", "Bubble Column", 0F, 64, true, false, BlockStateLoader.getBlockShapes("bubble_column")));
    public static final BlockType POLISHED_GRANITE_STAIRS = register(new BlockType(732, "polished_granite_stairs", "Polished Granite Stairs", 1.5F, 64, true, true, BlockStateLoader.getBlockShapes("polished_granite_stairs")));
    public static final BlockType SMOOTH_RED_SANDSTONE_STAIRS = register(new BlockType(733, "smooth_red_sandstone_stairs", "Smooth Red Sandstone Stairs", 2F, 64, true, true, BlockStateLoader.getBlockShapes("smooth_red_sandstone_stairs")));
    public static final BlockType MOSSY_STONE_BRICK_STAIRS = register(new BlockType(734, "mossy_stone_brick_stairs", "Mossy Stone Brick Stairs", 1.5F, 64, true, true, BlockStateLoader.getBlockShapes("mossy_stone_brick_stairs")));
    public static final BlockType POLISHED_DIORITE_STAIRS = register(new BlockType(735, "polished_diorite_stairs", "Polished Diorite Stairs", 1.5F, 64, true, true, BlockStateLoader.getBlockShapes("polished_diorite_stairs")));
    public static final BlockType MOSSY_COBBLESTONE_STAIRS = register(new BlockType(736, "mossy_cobblestone_stairs", "Mossy Cobblestone Stairs", 2F, 64, true, true, BlockStateLoader.getBlockShapes("mossy_cobblestone_stairs")));
    public static final BlockType END_STONE_BRICK_STAIRS = register(new BlockType(737, "end_stone_brick_stairs", "End Stone Brick Stairs", 3F, 64, true, true, BlockStateLoader.getBlockShapes("end_stone_brick_stairs")));
    public static final BlockType STONE_STAIRS = register(new BlockType(738, "stone_stairs", "Stone Stairs", 1.5F, 64, true, true, BlockStateLoader.getBlockShapes("stone_stairs")));
    public static final BlockType SMOOTH_SANDSTONE_STAIRS = register(new BlockType(739, "smooth_sandstone_stairs", "Smooth Sandstone Stairs", 2F, 64, true, true, BlockStateLoader.getBlockShapes("smooth_sandstone_stairs")));
    public static final BlockType SMOOTH_QUARTZ_STAIRS = register(new BlockType(740, "smooth_quartz_stairs", "Smooth Quartz Stairs", 2F, 64, true, true, BlockStateLoader.getBlockShapes("smooth_quartz_stairs")));
    public static final BlockType GRANITE_STAIRS = register(new BlockType(741, "granite_stairs", "Granite Stairs", 1.5F, 64, true, true, BlockStateLoader.getBlockShapes("granite_stairs")));
    public static final BlockType ANDESITE_STAIRS = register(new BlockType(742, "andesite_stairs", "Andesite Stairs", 1.5F, 64, true, true, BlockStateLoader.getBlockShapes("andesite_stairs")));
    public static final BlockType RED_NETHER_BRICK_STAIRS = register(new BlockType(743, "red_nether_brick_stairs", "Red Nether Brick Stairs", 2F, 64, true, true, BlockStateLoader.getBlockShapes("red_nether_brick_stairs")));
    public static final BlockType POLISHED_ANDESITE_STAIRS = register(new BlockType(744, "polished_andesite_stairs", "Polished Andesite Stairs", 1.5F, 64, true, true, BlockStateLoader.getBlockShapes("polished_andesite_stairs")));
    public static final BlockType DIORITE_STAIRS = register(new BlockType(745, "diorite_stairs", "Diorite Stairs", 1.5F, 64, true, true, BlockStateLoader.getBlockShapes("diorite_stairs")));
    public static final BlockType POLISHED_GRANITE_SLAB = register(new BlockType(746, "polished_granite_slab", "Polished Granite Slab", 1.5F, 64, true, true, BlockStateLoader.getBlockShapes("polished_granite_slab")));
    public static final BlockType SMOOTH_RED_SANDSTONE_SLAB = register(new BlockType(747, "smooth_red_sandstone_slab", "Smooth Red Sandstone Slab", 2F, 64, true, true, BlockStateLoader.getBlockShapes("smooth_red_sandstone_slab")));
    public static final BlockType MOSSY_STONE_BRICK_SLAB = register(new BlockType(748, "mossy_stone_brick_slab", "Mossy Stone Brick Slab", 1.5F, 64, true, true, BlockStateLoader.getBlockShapes("mossy_stone_brick_slab")));
    public static final BlockType POLISHED_DIORITE_SLAB = register(new BlockType(749, "polished_diorite_slab", "Polished Diorite Slab", 1.5F, 64, true, true, BlockStateLoader.getBlockShapes("polished_diorite_slab")));
    public static final BlockType MOSSY_COBBLESTONE_SLAB = register(new BlockType(750, "mossy_cobblestone_slab", "Mossy Cobblestone Slab", 2F, 64, true, true, BlockStateLoader.getBlockShapes("mossy_cobblestone_slab")));
    public static final BlockType END_STONE_BRICK_SLAB = register(new BlockType(751, "end_stone_brick_slab", "End Stone Brick Slab", 3F, 64, true, true, BlockStateLoader.getBlockShapes("end_stone_brick_slab")));
    public static final BlockType SMOOTH_SANDSTONE_SLAB = register(new BlockType(752, "smooth_sandstone_slab", "Smooth Sandstone Slab", 2F, 64, true, true, BlockStateLoader.getBlockShapes("smooth_sandstone_slab")));
    public static final BlockType SMOOTH_QUARTZ_SLAB = register(new BlockType(753, "smooth_quartz_slab", "Smooth Quartz Slab", 2F, 64, true, true, BlockStateLoader.getBlockShapes("smooth_quartz_slab")));
    public static final BlockType GRANITE_SLAB = register(new BlockType(754, "granite_slab", "Granite Slab", 1.5F, 64, true, true, BlockStateLoader.getBlockShapes("granite_slab")));
    public static final BlockType ANDESITE_SLAB = register(new BlockType(755, "andesite_slab", "Andesite Slab", 1.5F, 64, true, true, BlockStateLoader.getBlockShapes("andesite_slab")));
    public static final BlockType RED_NETHER_BRICK_SLAB = register(new BlockType(756, "red_nether_brick_slab", "Red Nether Brick Slab", 2F, 64, true, true, BlockStateLoader.getBlockShapes("red_nether_brick_slab")));
    public static final BlockType POLISHED_ANDESITE_SLAB = register(new BlockType(757, "polished_andesite_slab", "Polished Andesite Slab", 1.5F, 64, true, true, BlockStateLoader.getBlockShapes("polished_andesite_slab")));
    public static final BlockType DIORITE_SLAB = register(new BlockType(758, "diorite_slab", "Diorite Slab", 1.5F, 64, true, true, BlockStateLoader.getBlockShapes("diorite_slab")));
    public static final BlockType BRICK_WALL = register(new BlockType(759, "brick_wall", "Brick Wall", 2F, 64, true, true, BlockStateLoader.getBlockShapes("brick_wall")));
    public static final BlockType PRISMARINE_WALL = register(new BlockType(760, "prismarine_wall", "Prismarine Wall", 1.5F, 64, true, true, BlockStateLoader.getBlockShapes("prismarine_wall")));
    public static final BlockType RED_SANDSTONE_WALL = register(new BlockType(761, "red_sandstone_wall", "Red Sandstone Wall", 0.8F, 64, true, true, BlockStateLoader.getBlockShapes("red_sandstone_wall")));
    public static final BlockType MOSSY_STONE_BRICK_WALL = register(new BlockType(762, "mossy_stone_brick_wall", "Mossy Stone Brick Wall", 1.5F, 64, true, true, BlockStateLoader.getBlockShapes("mossy_stone_brick_wall")));
    public static final BlockType GRANITE_WALL = register(new BlockType(763, "granite_wall", "Granite Wall", 1.5F, 64, true, true, BlockStateLoader.getBlockShapes("granite_wall")));
    public static final BlockType STONE_BRICK_WALL = register(new BlockType(764, "stone_brick_wall", "Stone Brick Wall", 1.5F, 64, true, true, BlockStateLoader.getBlockShapes("stone_brick_wall")));
    public static final BlockType MUD_BRICK_WALL = register(new BlockType(765, "mud_brick_wall", "Mud Brick Wall", 0F, 64, true, true, BlockStateLoader.getBlockShapes("mud_brick_wall")));
    public static final BlockType NETHER_BRICK_WALL = register(new BlockType(766, "nether_brick_wall", "Nether Brick Wall", 2F, 64, true, true, BlockStateLoader.getBlockShapes("nether_brick_wall")));
    public static final BlockType ANDESITE_WALL = register(new BlockType(767, "andesite_wall", "Andesite Wall", 1.5F, 64, true, true, BlockStateLoader.getBlockShapes("andesite_wall")));
    public static final BlockType RED_NETHER_BRICK_WALL = register(new BlockType(768, "red_nether_brick_wall", "Red Nether Brick Wall", 2F, 64, true, true, BlockStateLoader.getBlockShapes("red_nether_brick_wall")));
    public static final BlockType SANDSTONE_WALL = register(new BlockType(769, "sandstone_wall", "Sandstone Wall", 0.8F, 64, true, true, BlockStateLoader.getBlockShapes("sandstone_wall")));
    public static final BlockType END_STONE_BRICK_WALL = register(new BlockType(770, "end_stone_brick_wall", "End Stone Brick Wall", 3F, 64, true, true, BlockStateLoader.getBlockShapes("end_stone_brick_wall")));
    public static final BlockType DIORITE_WALL = register(new BlockType(771, "diorite_wall", "Diorite Wall", 1.5F, 64, true, true, BlockStateLoader.getBlockShapes("diorite_wall")));
    public static final BlockType SCAFFOLDING = register(new BlockType(772, "scaffolding", "Scaffolding", 0F, 64, true, false, BlockStateLoader.getBlockShapes("scaffolding")));
    public static final BlockType LOOM = register(new BlockType(773, "loom", "Loom", 2.5F, 64, true, false, BlockStateLoader.getBlockShapes("loom")));
    public static final BlockType BARREL = register(new BlockType(774, "barrel", "Barrel", 2.5F, 64, true, false, BlockStateLoader.getBlockShapes("barrel")));
    public static final BlockType SMOKER = register(new BlockType(775, "smoker", "Smoker", 3.5F, 64, true, true, BlockStateLoader.getBlockShapes("smoker")));
    public static final BlockType BLAST_FURNACE = register(new BlockType(776, "blast_furnace", "Blast Furnace", 3.5F, 64, true, true, BlockStateLoader.getBlockShapes("blast_furnace")));
    public static final BlockType CARTOGRAPHY_TABLE = register(new BlockType(777, "cartography_table", "Cartography Table", 2.5F, 64, true, false, BlockStateLoader.getBlockShapes("cartography_table")));
    public static final BlockType FLETCHING_TABLE = register(new BlockType(778, "fletching_table", "Fletching Table", 2.5F, 64, true, false, BlockStateLoader.getBlockShapes("fletching_table")));
    public static final BlockType GRINDSTONE = register(new BlockType(779, "grindstone", "Grindstone", 2F, 64, true, true, BlockStateLoader.getBlockShapes("grindstone")));
    public static final BlockType LECTERN = register(new BlockType(780, "lectern", "Lectern", 2.5F, 64, true, false, BlockStateLoader.getBlockShapes("lectern")));
    public static final BlockType SMITHING_TABLE = register(new BlockType(781, "smithing_table", "Smithing Table", 2.5F, 64, true, false, BlockStateLoader.getBlockShapes("smithing_table")));
    public static final BlockType STONECUTTER = register(new BlockType(782, "stonecutter", "Stonecutter", 3.5F, 64, true, true, BlockStateLoader.getBlockShapes("stonecutter")));
    public static final BlockType BELL = register(new BlockType(783, "bell", "Bell", 5F, 64, true, true, BlockStateLoader.getBlockShapes("bell")));
    public static final BlockType LANTERN = register(new BlockType(784, "lantern", "Lantern", 3.5F, 64, true, true, BlockStateLoader.getBlockShapes("lantern")));
    public static final BlockType SOUL_LANTERN = register(new BlockType(785, "soul_lantern", "Soul Lantern", 3.5F, 64, true, true, BlockStateLoader.getBlockShapes("soul_lantern")));
    public static final BlockType CAMPFIRE = register(new BlockType(786, "campfire", "Campfire", 2F, 64, true, false, BlockStateLoader.getBlockShapes("campfire")));
    public static final BlockType SOUL_CAMPFIRE = register(new BlockType(787, "soul_campfire", "Soul Campfire", 2F, 64, true, false, BlockStateLoader.getBlockShapes("soul_campfire")));
    public static final BlockType SWEET_BERRY_BUSH = register(new BlockType(788, "sweet_berry_bush", "Sweet Berry Bush", 0F, 64, true, false, BlockStateLoader.getBlockShapes("sweet_berry_bush")));
    public static final BlockType WARPED_STEM = register(new BlockType(789, "warped_stem", "Warped Stem", 2F, 64, true, false, BlockStateLoader.getBlockShapes("warped_stem")));
    public static final BlockType STRIPPED_WARPED_STEM = register(new BlockType(790, "stripped_warped_stem", "Stripped Warped Stem", 2F, 64, true, false, BlockStateLoader.getBlockShapes("stripped_warped_stem")));
    public static final BlockType WARPED_HYPHAE = register(new BlockType(791, "warped_hyphae", "Warped Hyphae", 2F, 64, true, false, BlockStateLoader.getBlockShapes("warped_hyphae")));
    public static final BlockType STRIPPED_WARPED_HYPHAE = register(new BlockType(792, "stripped_warped_hyphae", "Stripped Warped Hyphae", 2F, 64, true, false, BlockStateLoader.getBlockShapes("stripped_warped_hyphae")));
    public static final BlockType WARPED_NYLIUM = register(new BlockType(793, "warped_nylium", "Warped Nylium", 0.4F, 64, true, true, BlockStateLoader.getBlockShapes("warped_nylium")));
    public static final BlockType WARPED_FUNGUS = register(new BlockType(794, "warped_fungus", "Warped Fungus", 0F, 64, true, false, BlockStateLoader.getBlockShapes("warped_fungus")));
    public static final BlockType WARPED_WART_BLOCK = register(new BlockType(795, "warped_wart_block", "Warped Wart Block", 1F, 64, true, false, BlockStateLoader.getBlockShapes("warped_wart_block")));
    public static final BlockType WARPED_ROOTS = register(new BlockType(796, "warped_roots", "Warped Roots", 0F, 64, true, false, BlockStateLoader.getBlockShapes("warped_roots")));
    public static final BlockType NETHER_SPROUTS = register(new BlockType(797, "nether_sprouts", "Nether Sprouts", 0F, 64, true, false, BlockStateLoader.getBlockShapes("nether_sprouts")));
    public static final BlockType CRIMSON_STEM = register(new BlockType(798, "crimson_stem", "Crimson Stem", 2F, 64, true, false, BlockStateLoader.getBlockShapes("crimson_stem")));
    public static final BlockType STRIPPED_CRIMSON_STEM = register(new BlockType(799, "stripped_crimson_stem", "Stripped Crimson Stem", 2F, 64, true, false, BlockStateLoader.getBlockShapes("stripped_crimson_stem")));
    public static final BlockType CRIMSON_HYPHAE = register(new BlockType(800, "crimson_hyphae", "Crimson Hyphae", 2F, 64, true, false, BlockStateLoader.getBlockShapes("crimson_hyphae")));
    public static final BlockType STRIPPED_CRIMSON_HYPHAE = register(new BlockType(801, "stripped_crimson_hyphae", "Stripped Crimson Hyphae", 2F, 64, true, false, BlockStateLoader.getBlockShapes("stripped_crimson_hyphae")));
    public static final BlockType CRIMSON_NYLIUM = register(new BlockType(802, "crimson_nylium", "Crimson Nylium", 0.4F, 64, true, true, BlockStateLoader.getBlockShapes("crimson_nylium")));
    public static final BlockType CRIMSON_FUNGUS = register(new BlockType(803, "crimson_fungus", "Crimson Fungus", 0F, 64, true, false, BlockStateLoader.getBlockShapes("crimson_fungus")));
    public static final BlockType SHROOMLIGHT = register(new BlockType(804, "shroomlight", "Shroomlight", 1F, 64, true, false, BlockStateLoader.getBlockShapes("shroomlight")));
    public static final BlockType WEEPING_VINES = register(new BlockType(805, "weeping_vines", "Weeping Vines", 0F, 64, true, false, BlockStateLoader.getBlockShapes("weeping_vines")));
    public static final BlockType WEEPING_VINES_PLANT = register(new BlockType(806, "weeping_vines_plant", "Weeping Vines Plant", 0F, 64, true, false, BlockStateLoader.getBlockShapes("weeping_vines_plant")));
    public static final BlockType TWISTING_VINES = register(new BlockType(807, "twisting_vines", "Twisting Vines", 0F, 64, true, false, BlockStateLoader.getBlockShapes("twisting_vines")));
    public static final BlockType TWISTING_VINES_PLANT = register(new BlockType(808, "twisting_vines_plant", "Twisting Vines Plant", 0F, 64, true, false, BlockStateLoader.getBlockShapes("twisting_vines_plant")));
    public static final BlockType CRIMSON_ROOTS = register(new BlockType(809, "crimson_roots", "Crimson Roots", 0F, 64, true, false, BlockStateLoader.getBlockShapes("crimson_roots")));
    public static final BlockType CRIMSON_PLANKS = register(new BlockType(810, "crimson_planks", "Crimson Planks", 2F, 64, true, false, BlockStateLoader.getBlockShapes("crimson_planks")));
    public static final BlockType WARPED_PLANKS = register(new BlockType(811, "warped_planks", "Warped Planks", 2F, 64, true, false, BlockStateLoader.getBlockShapes("warped_planks")));
    public static final BlockType CRIMSON_SLAB = register(new BlockType(812, "crimson_slab", "Crimson Slab", 2F, 64, true, false, BlockStateLoader.getBlockShapes("crimson_slab")));
    public static final BlockType WARPED_SLAB = register(new BlockType(813, "warped_slab", "Warped Slab", 2F, 64, true, false, BlockStateLoader.getBlockShapes("warped_slab")));
    public static final BlockType CRIMSON_PRESSURE_PLATE = register(new BlockType(814, "crimson_pressure_plate", "Crimson Pressure Plate", 0.5F, 64, true, false, BlockStateLoader.getBlockShapes("crimson_pressure_plate")));
    public static final BlockType WARPED_PRESSURE_PLATE = register(new BlockType(815, "warped_pressure_plate", "Warped Pressure Plate", 0.5F, 64, true, false, BlockStateLoader.getBlockShapes("warped_pressure_plate")));
    public static final BlockType CRIMSON_FENCE = register(new BlockType(816, "crimson_fence", "Crimson Fence", 2F, 64, true, false, BlockStateLoader.getBlockShapes("crimson_fence")));
    public static final BlockType WARPED_FENCE = register(new BlockType(817, "warped_fence", "Warped Fence", 2F, 64, true, false, BlockStateLoader.getBlockShapes("warped_fence")));
    public static final BlockType CRIMSON_TRAPDOOR = register(new BlockType(818, "crimson_trapdoor", "Crimson Trapdoor", 3F, 64, true, false, BlockStateLoader.getBlockShapes("crimson_trapdoor")));
    public static final BlockType WARPED_TRAPDOOR = register(new BlockType(819, "warped_trapdoor", "Warped Trapdoor", 3F, 64, true, false, BlockStateLoader.getBlockShapes("warped_trapdoor")));
    public static final BlockType CRIMSON_FENCE_GATE = register(new BlockType(820, "crimson_fence_gate", "Crimson Fence Gate", 2F, 64, true, false, BlockStateLoader.getBlockShapes("crimson_fence_gate")));
    public static final BlockType WARPED_FENCE_GATE = register(new BlockType(821, "warped_fence_gate", "Warped Fence Gate", 2F, 64, true, false, BlockStateLoader.getBlockShapes("warped_fence_gate")));
    public static final BlockType CRIMSON_STAIRS = register(new BlockType(822, "crimson_stairs", "Crimson Stairs", 2F, 64, true, false, BlockStateLoader.getBlockShapes("crimson_stairs")));
    public static final BlockType WARPED_STAIRS = register(new BlockType(823, "warped_stairs", "Warped Stairs", 2F, 64, true, false, BlockStateLoader.getBlockShapes("warped_stairs")));
    public static final BlockType CRIMSON_BUTTON = register(new BlockType(824, "crimson_button", "Crimson Button", 0.5F, 64, true, false, BlockStateLoader.getBlockShapes("crimson_button")));
    public static final BlockType WARPED_BUTTON = register(new BlockType(825, "warped_button", "Warped Button", 0.5F, 64, true, false, BlockStateLoader.getBlockShapes("warped_button")));
    public static final BlockType CRIMSON_DOOR = register(new BlockType(826, "crimson_door", "Crimson Door", 3F, 64, true, false, BlockStateLoader.getBlockShapes("crimson_door")));
    public static final BlockType WARPED_DOOR = register(new BlockType(827, "warped_door", "Warped Door", 3F, 64, true, false, BlockStateLoader.getBlockShapes("warped_door")));
    public static final BlockType CRIMSON_SIGN = register(new BlockType(828, "crimson_sign", "Crimson Sign", 1F, 16, true, false, BlockStateLoader.getBlockShapes("crimson_sign")));
    public static final BlockType WARPED_SIGN = register(new BlockType(829, "warped_sign", "Warped Sign", 1F, 16, true, false, BlockStateLoader.getBlockShapes("warped_sign")));
    public static final BlockType CRIMSON_WALL_SIGN = register(new BlockType(830, "crimson_wall_sign", "Crimson Wall Sign", 1F, 16, true, false, BlockStateLoader.getBlockShapes("crimson_wall_sign")));
    public static final BlockType WARPED_WALL_SIGN = register(new BlockType(831, "warped_wall_sign", "Warped Wall Sign", 1F, 16, true, false, BlockStateLoader.getBlockShapes("warped_wall_sign")));
    public static final BlockType STRUCTURE_BLOCK = register(new BlockType(832, "structure_block", "Structure Block", -1F, 64, false, true, BlockStateLoader.getBlockShapes("structure_block")));
    public static final BlockType JIGSAW = register(new BlockType(833, "jigsaw", "Jigsaw Block", -1F, 64, false, true, BlockStateLoader.getBlockShapes("jigsaw")));
    public static final BlockType COMPOSTER = register(new BlockType(834, "composter", "Composter", 0.6F, 64, true, false, BlockStateLoader.getBlockShapes("composter")));
    public static final BlockType TARGET = register(new BlockType(835, "target", "Target", 0.5F, 64, true, false, BlockStateLoader.getBlockShapes("target")));
    public static final BlockType BEE_NEST = register(new BlockType(836, "bee_nest", "Bee Nest", 0.3F, 64, true, false, BlockStateLoader.getBlockShapes("bee_nest")));
    public static final BlockType BEEHIVE = register(new BlockType(837, "beehive", "Beehive", 0.6F, 64, true, false, BlockStateLoader.getBlockShapes("beehive")));
    public static final BlockType HONEY_BLOCK = register(new BlockType(838, "honey_block", "Honey Block", 0F, 64, true, false, BlockStateLoader.getBlockShapes("honey_block")));
    public static final BlockType HONEYCOMB_BLOCK = register(new BlockType(839, "honeycomb_block", "Honeycomb Block", 0.6F, 64, true, false, BlockStateLoader.getBlockShapes("honeycomb_block")));
    public static final BlockType NETHERITE_BLOCK = register(new BlockType(840, "netherite_block", "Block of Netherite", 50F, 64, true, true, BlockStateLoader.getBlockShapes("netherite_block")));
    public static final BlockType ANCIENT_DEBRIS = register(new BlockType(841, "ancient_debris", "Ancient Debris", 30F, 64, true, true, BlockStateLoader.getBlockShapes("ancient_debris")));
    public static final BlockType CRYING_OBSIDIAN = register(new BlockType(842, "crying_obsidian", "Crying Obsidian", 50F, 64, true, true, BlockStateLoader.getBlockShapes("crying_obsidian")));
    public static final BlockType RESPAWN_ANCHOR = register(new BlockType(843, "respawn_anchor", "Respawn Anchor", 50F, 64, true, true, BlockStateLoader.getBlockShapes("respawn_anchor")));
    public static final BlockType POTTED_CRIMSON_FUNGUS = register(new BlockType(844, "potted_crimson_fungus", "Potted Crimson Fungus", 0F, 64, true, false, BlockStateLoader.getBlockShapes("potted_crimson_fungus")));
    public static final BlockType POTTED_WARPED_FUNGUS = register(new BlockType(845, "potted_warped_fungus", "Potted Warped Fungus", 0F, 64, true, false, BlockStateLoader.getBlockShapes("potted_warped_fungus")));
    public static final BlockType POTTED_CRIMSON_ROOTS = register(new BlockType(846, "potted_crimson_roots", "Potted Crimson Roots", 0F, 64, true, false, BlockStateLoader.getBlockShapes("potted_crimson_roots")));
    public static final BlockType POTTED_WARPED_ROOTS = register(new BlockType(847, "potted_warped_roots", "Potted Warped Roots", 0F, 64, true, false, BlockStateLoader.getBlockShapes("potted_warped_roots")));
    public static final BlockType LODESTONE = register(new BlockType(848, "lodestone", "Lodestone", 3.5F, 64, true, true, BlockStateLoader.getBlockShapes("lodestone")));
    public static final BlockType BLACKSTONE = register(new BlockType(849, "blackstone", "Blackstone", 1.5F, 64, true, true, BlockStateLoader.getBlockShapes("blackstone")));
    public static final BlockType BLACKSTONE_STAIRS = register(new BlockType(850, "blackstone_stairs", "Blackstone Stairs", 1.5F, 64, true, true, BlockStateLoader.getBlockShapes("blackstone_stairs")));
    public static final BlockType BLACKSTONE_WALL = register(new BlockType(851, "blackstone_wall", "Blackstone Wall", 1.5F, 64, true, true, BlockStateLoader.getBlockShapes("blackstone_wall")));
    public static final BlockType BLACKSTONE_SLAB = register(new BlockType(852, "blackstone_slab", "Blackstone Slab", 2F, 64, true, true, BlockStateLoader.getBlockShapes("blackstone_slab")));
    public static final BlockType POLISHED_BLACKSTONE = register(new BlockType(853, "polished_blackstone", "Polished Blackstone", 2F, 64, true, true, BlockStateLoader.getBlockShapes("polished_blackstone")));
    public static final BlockType POLISHED_BLACKSTONE_BRICKS = register(new BlockType(854, "polished_blackstone_bricks", "Polished Blackstone Bricks", 1.5F, 64, true, true, BlockStateLoader.getBlockShapes("polished_blackstone_bricks")));
    public static final BlockType CRACKED_POLISHED_BLACKSTONE_BRICKS = register(new BlockType(855, "cracked_polished_blackstone_bricks", "Cracked Polished Blackstone Bricks", 1.5F, 64, true, true, BlockStateLoader.getBlockShapes("cracked_polished_blackstone_bricks")));
    public static final BlockType CHISELED_POLISHED_BLACKSTONE = register(new BlockType(856, "chiseled_polished_blackstone", "Chiseled Polished Blackstone", 1.5F, 64, true, true, BlockStateLoader.getBlockShapes("chiseled_polished_blackstone")));
    public static final BlockType POLISHED_BLACKSTONE_BRICK_SLAB = register(new BlockType(857, "polished_blackstone_brick_slab", "Polished Blackstone Brick Slab", 2F, 64, true, true, BlockStateLoader.getBlockShapes("polished_blackstone_brick_slab")));
    public static final BlockType POLISHED_BLACKSTONE_BRICK_STAIRS = register(new BlockType(858, "polished_blackstone_brick_stairs", "Polished Blackstone Brick Stairs", 1.5F, 64, true, true, BlockStateLoader.getBlockShapes("polished_blackstone_brick_stairs")));
    public static final BlockType POLISHED_BLACKSTONE_BRICK_WALL = register(new BlockType(859, "polished_blackstone_brick_wall", "Polished Blackstone Brick Wall", 1.5F, 64, true, true, BlockStateLoader.getBlockShapes("polished_blackstone_brick_wall")));
    public static final BlockType GILDED_BLACKSTONE = register(new BlockType(860, "gilded_blackstone", "Gilded Blackstone", 1.5F, 64, true, true, BlockStateLoader.getBlockShapes("gilded_blackstone")));
    public static final BlockType POLISHED_BLACKSTONE_STAIRS = register(new BlockType(861, "polished_blackstone_stairs", "Polished Blackstone Stairs", 2F, 64, true, true, BlockStateLoader.getBlockShapes("polished_blackstone_stairs")));
    public static final BlockType POLISHED_BLACKSTONE_SLAB = register(new BlockType(862, "polished_blackstone_slab", "Polished Blackstone Slab", 2F, 64, true, true, BlockStateLoader.getBlockShapes("polished_blackstone_slab")));
    public static final BlockType POLISHED_BLACKSTONE_PRESSURE_PLATE = register(new BlockType(863, "polished_blackstone_pressure_plate", "Polished Blackstone Pressure Plate", 0.5F, 64, true, true, BlockStateLoader.getBlockShapes("polished_blackstone_pressure_plate")));
    public static final BlockType POLISHED_BLACKSTONE_BUTTON = register(new BlockType(864, "polished_blackstone_button", "Polished Blackstone Button", 0.5F, 64, true, false, BlockStateLoader.getBlockShapes("polished_blackstone_button")));
    public static final BlockType POLISHED_BLACKSTONE_WALL = register(new BlockType(865, "polished_blackstone_wall", "Polished Blackstone Wall", 2F, 64, true, true, BlockStateLoader.getBlockShapes("polished_blackstone_wall")));
    public static final BlockType CHISELED_NETHER_BRICKS = register(new BlockType(866, "chiseled_nether_bricks", "Chiseled Nether Bricks", 2F, 64, true, true, BlockStateLoader.getBlockShapes("chiseled_nether_bricks")));
    public static final BlockType CRACKED_NETHER_BRICKS = register(new BlockType(867, "cracked_nether_bricks", "Cracked Nether Bricks", 2F, 64, true, true, BlockStateLoader.getBlockShapes("cracked_nether_bricks")));
    public static final BlockType QUARTZ_BRICKS = register(new BlockType(868, "quartz_bricks", "Quartz Bricks", 0.8F, 64, true, true, BlockStateLoader.getBlockShapes("quartz_bricks")));
    public static final BlockType CANDLE = register(new BlockType(869, "candle", "Candle", 0.1F, 64, true, false, BlockStateLoader.getBlockShapes("candle")));
    public static final BlockType WHITE_CANDLE = register(new BlockType(870, "white_candle", "White Candle", 0.1F, 64, true, false, BlockStateLoader.getBlockShapes("white_candle")));
    public static final BlockType ORANGE_CANDLE = register(new BlockType(871, "orange_candle", "Orange Candle", 0.1F, 64, true, false, BlockStateLoader.getBlockShapes("orange_candle")));
    public static final BlockType MAGENTA_CANDLE = register(new BlockType(872, "magenta_candle", "Magenta Candle", 0.1F, 64, true, false, BlockStateLoader.getBlockShapes("magenta_candle")));
    public static final BlockType LIGHT_BLUE_CANDLE = register(new BlockType(873, "light_blue_candle", "Light Blue Candle", 0.1F, 64, true, false, BlockStateLoader.getBlockShapes("light_blue_candle")));
    public static final BlockType YELLOW_CANDLE = register(new BlockType(874, "yellow_candle", "Yellow Candle", 0.1F, 64, true, false, BlockStateLoader.getBlockShapes("yellow_candle")));
    public static final BlockType LIME_CANDLE = register(new BlockType(875, "lime_candle", "Lime Candle", 0.1F, 64, true, false, BlockStateLoader.getBlockShapes("lime_candle")));
    public static final BlockType PINK_CANDLE = register(new BlockType(876, "pink_candle", "Pink Candle", 0.1F, 64, true, false, BlockStateLoader.getBlockShapes("pink_candle")));
    public static final BlockType GRAY_CANDLE = register(new BlockType(877, "gray_candle", "Gray Candle", 0.1F, 64, true, false, BlockStateLoader.getBlockShapes("gray_candle")));
    public static final BlockType LIGHT_GRAY_CANDLE = register(new BlockType(878, "light_gray_candle", "Light Gray Candle", 0.1F, 64, true, false, BlockStateLoader.getBlockShapes("light_gray_candle")));
    public static final BlockType CYAN_CANDLE = register(new BlockType(879, "cyan_candle", "Cyan Candle", 0.1F, 64, true, false, BlockStateLoader.getBlockShapes("cyan_candle")));
    public static final BlockType PURPLE_CANDLE = register(new BlockType(880, "purple_candle", "Purple Candle", 0.1F, 64, true, false, BlockStateLoader.getBlockShapes("purple_candle")));
    public static final BlockType BLUE_CANDLE = register(new BlockType(881, "blue_candle", "Blue Candle", 0.1F, 64, true, false, BlockStateLoader.getBlockShapes("blue_candle")));
    public static final BlockType BROWN_CANDLE = register(new BlockType(882, "brown_candle", "Brown Candle", 0.1F, 64, true, false, BlockStateLoader.getBlockShapes("brown_candle")));
    public static final BlockType GREEN_CANDLE = register(new BlockType(883, "green_candle", "Green Candle", 0.1F, 64, true, false, BlockStateLoader.getBlockShapes("green_candle")));
    public static final BlockType RED_CANDLE = register(new BlockType(884, "red_candle", "Red Candle", 0.1F, 64, true, false, BlockStateLoader.getBlockShapes("red_candle")));
    public static final BlockType BLACK_CANDLE = register(new BlockType(885, "black_candle", "Black Candle", 0.1F, 64, true, false, BlockStateLoader.getBlockShapes("black_candle")));
    public static final BlockType CANDLE_CAKE = register(new BlockType(886, "candle_cake", "Cake with Candle", 0F, 64, true, false, BlockStateLoader.getBlockShapes("candle_cake")));
    public static final BlockType WHITE_CANDLE_CAKE = register(new BlockType(887, "white_candle_cake", "Cake with White Candle", 0F, 64, true, false, BlockStateLoader.getBlockShapes("white_candle_cake")));
    public static final BlockType ORANGE_CANDLE_CAKE = register(new BlockType(888, "orange_candle_cake", "Cake with Orange Candle", 0F, 64, true, false, BlockStateLoader.getBlockShapes("orange_candle_cake")));
    public static final BlockType MAGENTA_CANDLE_CAKE = register(new BlockType(889, "magenta_candle_cake", "Cake with Magenta Candle", 0F, 64, true, false, BlockStateLoader.getBlockShapes("magenta_candle_cake")));
    public static final BlockType LIGHT_BLUE_CANDLE_CAKE = register(new BlockType(890, "light_blue_candle_cake", "Cake with Light Blue Candle", 0F, 64, true, false, BlockStateLoader.getBlockShapes("light_blue_candle_cake")));
    public static final BlockType YELLOW_CANDLE_CAKE = register(new BlockType(891, "yellow_candle_cake", "Cake with Yellow Candle", 0F, 64, true, false, BlockStateLoader.getBlockShapes("yellow_candle_cake")));
    public static final BlockType LIME_CANDLE_CAKE = register(new BlockType(892, "lime_candle_cake", "Cake with Lime Candle", 0F, 64, true, false, BlockStateLoader.getBlockShapes("lime_candle_cake")));
    public static final BlockType PINK_CANDLE_CAKE = register(new BlockType(893, "pink_candle_cake", "Cake with Pink Candle", 0F, 64, true, false, BlockStateLoader.getBlockShapes("pink_candle_cake")));
    public static final BlockType GRAY_CANDLE_CAKE = register(new BlockType(894, "gray_candle_cake", "Cake with Gray Candle", 0F, 64, true, false, BlockStateLoader.getBlockShapes("gray_candle_cake")));
    public static final BlockType LIGHT_GRAY_CANDLE_CAKE = register(new BlockType(895, "light_gray_candle_cake", "Cake with Light Gray Candle", 0F, 64, true, false, BlockStateLoader.getBlockShapes("light_gray_candle_cake")));
    public static final BlockType CYAN_CANDLE_CAKE = register(new BlockType(896, "cyan_candle_cake", "Cake with Cyan Candle", 0F, 64, true, false, BlockStateLoader.getBlockShapes("cyan_candle_cake")));
    public static final BlockType PURPLE_CANDLE_CAKE = register(new BlockType(897, "purple_candle_cake", "Cake with Purple Candle", 0F, 64, true, false, BlockStateLoader.getBlockShapes("purple_candle_cake")));
    public static final BlockType BLUE_CANDLE_CAKE = register(new BlockType(898, "blue_candle_cake", "Cake with Blue Candle", 0F, 64, true, false, BlockStateLoader.getBlockShapes("blue_candle_cake")));
    public static final BlockType BROWN_CANDLE_CAKE = register(new BlockType(899, "brown_candle_cake", "Cake with Brown Candle", 0F, 64, true, false, BlockStateLoader.getBlockShapes("brown_candle_cake")));
    public static final BlockType GREEN_CANDLE_CAKE = register(new BlockType(900, "green_candle_cake", "Cake with Green Candle", 0F, 64, true, false, BlockStateLoader.getBlockShapes("green_candle_cake")));
    public static final BlockType RED_CANDLE_CAKE = register(new BlockType(901, "red_candle_cake", "Cake with Red Candle", 0F, 64, true, false, BlockStateLoader.getBlockShapes("red_candle_cake")));
    public static final BlockType BLACK_CANDLE_CAKE = register(new BlockType(902, "black_candle_cake", "Cake with Black Candle", 0F, 64, true, false, BlockStateLoader.getBlockShapes("black_candle_cake")));
    public static final BlockType AMETHYST_BLOCK = register(new BlockType(903, "amethyst_block", "Block of Amethyst", 1.5F, 64, true, true, BlockStateLoader.getBlockShapes("amethyst_block")));
    public static final BlockType BUDDING_AMETHYST = register(new BlockType(904, "budding_amethyst", "Budding Amethyst", 1.5F, 64, true, true, BlockStateLoader.getBlockShapes("budding_amethyst")));
    public static final BlockType AMETHYST_CLUSTER = register(new BlockType(905, "amethyst_cluster", "Amethyst Cluster", 1.5F, 64, true, false, BlockStateLoader.getBlockShapes("amethyst_cluster")));
    public static final BlockType LARGE_AMETHYST_BUD = register(new BlockType(906, "large_amethyst_bud", "Large Amethyst Bud", 0F, 64, true, false, BlockStateLoader.getBlockShapes("large_amethyst_bud")));
    public static final BlockType MEDIUM_AMETHYST_BUD = register(new BlockType(907, "medium_amethyst_bud", "Medium Amethyst Bud", 0F, 64, true, false, BlockStateLoader.getBlockShapes("medium_amethyst_bud")));
    public static final BlockType SMALL_AMETHYST_BUD = register(new BlockType(908, "small_amethyst_bud", "Small Amethyst Bud", 0F, 64, true, false, BlockStateLoader.getBlockShapes("small_amethyst_bud")));
    public static final BlockType TUFF = register(new BlockType(909, "tuff", "Tuff", 1.5F, 64, true, true, BlockStateLoader.getBlockShapes("tuff")));
    public static final BlockType CALCITE = register(new BlockType(910, "calcite", "Calcite", 0.75F, 64, true, true, BlockStateLoader.getBlockShapes("calcite")));
    public static final BlockType TINTED_GLASS = register(new BlockType(911, "tinted_glass", "Tinted Glass", 0F, 64, true, false, BlockStateLoader.getBlockShapes("tinted_glass")));
    public static final BlockType POWDER_SNOW = register(new BlockType(912, "powder_snow", "Powder Snow", 0.25F, 1, true, false, BlockStateLoader.getBlockShapes("powder_snow")));
    public static final BlockType SCULK_SENSOR = register(new BlockType(913, "sculk_sensor", "Sculk Sensor", 1.5F, 64, true, false, BlockStateLoader.getBlockShapes("sculk_sensor")));
    public static final BlockType CALIBRATED_SCULK_SENSOR = register(new BlockType(914, "calibrated_sculk_sensor", "Calibrated Sculk Sensor", 0F, 0, true, false, BlockStateLoader.getBlockShapes("calibrated_sculk_sensor")));
    public static final BlockType SCULK = register(new BlockType(915, "sculk", "Sculk", 0.2F, 64, true, false, BlockStateLoader.getBlockShapes("sculk")));
    public static final BlockType SCULK_VEIN = register(new BlockType(916, "sculk_vein", "Sculk Vein", 0.2F, 64, true, false, BlockStateLoader.getBlockShapes("sculk_vein")));
    public static final BlockType SCULK_CATALYST = register(new BlockType(917, "sculk_catalyst", "Sculk Catalyst", 3F, 64, true, false, BlockStateLoader.getBlockShapes("sculk_catalyst")));
    public static final BlockType SCULK_SHRIEKER = register(new BlockType(918, "sculk_shrieker", "Sculk Shrieker", 3F, 64, true, false, BlockStateLoader.getBlockShapes("sculk_shrieker")));
    public static final BlockType OXIDIZED_COPPER = register(new BlockType(919, "oxidized_copper", "Oxidized Copper", 3F, 64, true, true, BlockStateLoader.getBlockShapes("oxidized_copper")));
    public static final BlockType WEATHERED_COPPER = register(new BlockType(920, "weathered_copper", "Weathered Copper", 3F, 64, true, true, BlockStateLoader.getBlockShapes("weathered_copper")));
    public static final BlockType EXPOSED_COPPER = register(new BlockType(921, "exposed_copper", "Exposed Copper", 3F, 64, true, true, BlockStateLoader.getBlockShapes("exposed_copper")));
    public static final BlockType COPPER_BLOCK = register(new BlockType(922, "copper_block", "Block of Copper", 3F, 64, true, true, BlockStateLoader.getBlockShapes("copper_block")));
    public static final BlockType COPPER_ORE = register(new BlockType(923, "copper_ore", "Copper Ore", 0F, 64, true, true, BlockStateLoader.getBlockShapes("copper_ore")));
    public static final BlockType DEEPSLATE_COPPER_ORE = register(new BlockType(924, "deepslate_copper_ore", "Deepslate Copper Ore", 4.5F, 64, true, true, BlockStateLoader.getBlockShapes("deepslate_copper_ore")));
    public static final BlockType OXIDIZED_CUT_COPPER = register(new BlockType(925, "oxidized_cut_copper", "Oxidized Cut Copper", 0F, 64, true, true, BlockStateLoader.getBlockShapes("oxidized_cut_copper")));
    public static final BlockType WEATHERED_CUT_COPPER = register(new BlockType(926, "weathered_cut_copper", "Weathered Cut Copper", 0F, 64, true, true, BlockStateLoader.getBlockShapes("weathered_cut_copper")));
    public static final BlockType EXPOSED_CUT_COPPER = register(new BlockType(927, "exposed_cut_copper", "Exposed Cut Copper", 0F, 64, true, true, BlockStateLoader.getBlockShapes("exposed_cut_copper")));
    public static final BlockType CUT_COPPER = register(new BlockType(928, "cut_copper", "Cut Copper", 0F, 64, true, true, BlockStateLoader.getBlockShapes("cut_copper")));
    public static final BlockType OXIDIZED_CUT_COPPER_STAIRS = register(new BlockType(929, "oxidized_cut_copper_stairs", "Oxidized Cut Copper Stairs", 0F, 64, true, true, BlockStateLoader.getBlockShapes("oxidized_cut_copper_stairs")));
    public static final BlockType WEATHERED_CUT_COPPER_STAIRS = register(new BlockType(930, "weathered_cut_copper_stairs", "Weathered Cut Copper Stairs", 0F, 64, true, true, BlockStateLoader.getBlockShapes("weathered_cut_copper_stairs")));
    public static final BlockType EXPOSED_CUT_COPPER_STAIRS = register(new BlockType(931, "exposed_cut_copper_stairs", "Exposed Cut Copper Stairs", 0F, 64, true, true, BlockStateLoader.getBlockShapes("exposed_cut_copper_stairs")));
    public static final BlockType CUT_COPPER_STAIRS = register(new BlockType(932, "cut_copper_stairs", "Cut Copper Stairs", 0F, 64, true, true, BlockStateLoader.getBlockShapes("cut_copper_stairs")));
    public static final BlockType OXIDIZED_CUT_COPPER_SLAB = register(new BlockType(933, "oxidized_cut_copper_slab", "Oxidized Cut Copper Slab", 0F, 64, true, true, BlockStateLoader.getBlockShapes("oxidized_cut_copper_slab")));
    public static final BlockType WEATHERED_CUT_COPPER_SLAB = register(new BlockType(934, "weathered_cut_copper_slab", "Weathered Cut Copper Slab", 0F, 64, true, true, BlockStateLoader.getBlockShapes("weathered_cut_copper_slab")));
    public static final BlockType EXPOSED_CUT_COPPER_SLAB = register(new BlockType(935, "exposed_cut_copper_slab", "Exposed Cut Copper Slab", 0F, 64, true, true, BlockStateLoader.getBlockShapes("exposed_cut_copper_slab")));
    public static final BlockType CUT_COPPER_SLAB = register(new BlockType(936, "cut_copper_slab", "Cut Copper Slab", 0F, 64, true, true, BlockStateLoader.getBlockShapes("cut_copper_slab")));
    public static final BlockType WAXED_COPPER_BLOCK = register(new BlockType(937, "waxed_copper_block", "Waxed Block of Copper", 0F, 64, true, true, BlockStateLoader.getBlockShapes("waxed_copper_block")));
    public static final BlockType WAXED_WEATHERED_COPPER = register(new BlockType(938, "waxed_weathered_copper", "Waxed Weathered Copper", 0F, 64, true, true, BlockStateLoader.getBlockShapes("waxed_weathered_copper")));
    public static final BlockType WAXED_EXPOSED_COPPER = register(new BlockType(939, "waxed_exposed_copper", "Waxed Exposed Copper", 0F, 64, true, true, BlockStateLoader.getBlockShapes("waxed_exposed_copper")));
    public static final BlockType WAXED_OXIDIZED_COPPER = register(new BlockType(940, "waxed_oxidized_copper", "Waxed Oxidized Copper", 0F, 64, true, true, BlockStateLoader.getBlockShapes("waxed_oxidized_copper")));
    public static final BlockType WAXED_OXIDIZED_CUT_COPPER = register(new BlockType(941, "waxed_oxidized_cut_copper", "Waxed Oxidized Cut Copper", 0F, 64, true, true, BlockStateLoader.getBlockShapes("waxed_oxidized_cut_copper")));
    public static final BlockType WAXED_WEATHERED_CUT_COPPER = register(new BlockType(942, "waxed_weathered_cut_copper", "Waxed Weathered Cut Copper", 0F, 64, true, true, BlockStateLoader.getBlockShapes("waxed_weathered_cut_copper")));
    public static final BlockType WAXED_EXPOSED_CUT_COPPER = register(new BlockType(943, "waxed_exposed_cut_copper", "Waxed Exposed Cut Copper", 0F, 64, true, true, BlockStateLoader.getBlockShapes("waxed_exposed_cut_copper")));
    public static final BlockType WAXED_CUT_COPPER = register(new BlockType(944, "waxed_cut_copper", "Waxed Cut Copper", 0F, 64, true, true, BlockStateLoader.getBlockShapes("waxed_cut_copper")));
    public static final BlockType WAXED_OXIDIZED_CUT_COPPER_STAIRS = register(new BlockType(945, "waxed_oxidized_cut_copper_stairs", "Waxed Oxidized Cut Copper Stairs", 0F, 64, true, true, BlockStateLoader.getBlockShapes("waxed_oxidized_cut_copper_stairs")));
    public static final BlockType WAXED_WEATHERED_CUT_COPPER_STAIRS = register(new BlockType(946, "waxed_weathered_cut_copper_stairs", "Waxed Weathered Cut Copper Stairs", 0F, 64, true, true, BlockStateLoader.getBlockShapes("waxed_weathered_cut_copper_stairs")));
    public static final BlockType WAXED_EXPOSED_CUT_COPPER_STAIRS = register(new BlockType(947, "waxed_exposed_cut_copper_stairs", "Waxed Exposed Cut Copper Stairs", 0F, 64, true, true, BlockStateLoader.getBlockShapes("waxed_exposed_cut_copper_stairs")));
    public static final BlockType WAXED_CUT_COPPER_STAIRS = register(new BlockType(948, "waxed_cut_copper_stairs", "Waxed Cut Copper Stairs", 0F, 64, true, true, BlockStateLoader.getBlockShapes("waxed_cut_copper_stairs")));
    public static final BlockType WAXED_OXIDIZED_CUT_COPPER_SLAB = register(new BlockType(949, "waxed_oxidized_cut_copper_slab", "Waxed Oxidized Cut Copper Slab", 0F, 64, true, true, BlockStateLoader.getBlockShapes("waxed_oxidized_cut_copper_slab")));
    public static final BlockType WAXED_WEATHERED_CUT_COPPER_SLAB = register(new BlockType(950, "waxed_weathered_cut_copper_slab", "Waxed Weathered Cut Copper Slab", 0F, 64, true, true, BlockStateLoader.getBlockShapes("waxed_weathered_cut_copper_slab")));
    public static final BlockType WAXED_EXPOSED_CUT_COPPER_SLAB = register(new BlockType(951, "waxed_exposed_cut_copper_slab", "Waxed Exposed Cut Copper Slab", 0F, 64, true, true, BlockStateLoader.getBlockShapes("waxed_exposed_cut_copper_slab")));
    public static final BlockType WAXED_CUT_COPPER_SLAB = register(new BlockType(952, "waxed_cut_copper_slab", "Waxed Cut Copper Slab", 0F, 64, true, true, BlockStateLoader.getBlockShapes("waxed_cut_copper_slab")));
    public static final BlockType LIGHTNING_ROD = register(new BlockType(953, "lightning_rod", "Lightning Rod", 3F, 64, true, true, BlockStateLoader.getBlockShapes("lightning_rod")));
    public static final BlockType POINTED_DRIPSTONE = register(new BlockType(954, "pointed_dripstone", "Pointed Dripstone", 1.5F, 64, true, false, BlockStateLoader.getBlockShapes("pointed_dripstone")));
    public static final BlockType DRIPSTONE_BLOCK = register(new BlockType(955, "dripstone_block", "Dripstone Block", 1.5F, 64, true, true, BlockStateLoader.getBlockShapes("dripstone_block")));
    public static final BlockType CAVE_VINES = register(new BlockType(956, "cave_vines", "Cave Vines", 0F, 64, true, false, BlockStateLoader.getBlockShapes("cave_vines")));
    public static final BlockType CAVE_VINES_PLANT = register(new BlockType(957, "cave_vines_plant", "Cave Vines Plant", 0F, 64, true, false, BlockStateLoader.getBlockShapes("cave_vines_plant")));
    public static final BlockType SPORE_BLOSSOM = register(new BlockType(958, "spore_blossom", "Spore Blossom", 0F, 64, true, false, BlockStateLoader.getBlockShapes("spore_blossom")));
    public static final BlockType AZALEA = register(new BlockType(959, "azalea", "Azalea", 0F, 64, true, false, BlockStateLoader.getBlockShapes("azalea")));
    public static final BlockType FLOWERING_AZALEA = register(new BlockType(960, "flowering_azalea", "Flowering Azalea", 0F, 64, true, false, BlockStateLoader.getBlockShapes("flowering_azalea")));
    public static final BlockType MOSS_CARPET = register(new BlockType(961, "moss_carpet", "Moss Carpet", 0.1F, 64, true, false, BlockStateLoader.getBlockShapes("moss_carpet")));
    public static final BlockType PINK_PETALS = register(new BlockType(962, "pink_petals", "Pink Petals", 0F, 64, true, false, BlockStateLoader.getBlockShapes("pink_petals")));
    public static final BlockType MOSS_BLOCK = register(new BlockType(963, "moss_block", "Moss Block", 0.1F, 64, true, false, BlockStateLoader.getBlockShapes("moss_block")));
    public static final BlockType BIG_DRIPLEAF = register(new BlockType(964, "big_dripleaf", "Big Dripleaf", 0.1F, 64, true, false, BlockStateLoader.getBlockShapes("big_dripleaf")));
    public static final BlockType BIG_DRIPLEAF_STEM = register(new BlockType(965, "big_dripleaf_stem", "Big Dripleaf Stem", 0.1F, 64, true, false, BlockStateLoader.getBlockShapes("big_dripleaf_stem")));
    public static final BlockType SMALL_DRIPLEAF = register(new BlockType(966, "small_dripleaf", "Small Dripleaf", 0F, 64, true, false, BlockStateLoader.getBlockShapes("small_dripleaf")));
    public static final BlockType HANGING_ROOTS = register(new BlockType(967, "hanging_roots", "Hanging Roots", 0F, 64, true, false, BlockStateLoader.getBlockShapes("hanging_roots")));
    public static final BlockType ROOTED_DIRT = register(new BlockType(968, "rooted_dirt", "Rooted Dirt", 0.5F, 64, true, false, BlockStateLoader.getBlockShapes("rooted_dirt")));
    public static final BlockType MUD = register(new BlockType(969, "mud", "Mud", 0F, 64, true, false, BlockStateLoader.getBlockShapes("mud")));
    public static final BlockType DEEPSLATE = register(new BlockType(970, "deepslate", "Deepslate", 3F, 64, true, true, BlockStateLoader.getBlockShapes("deepslate")));
    public static final BlockType COBBLED_DEEPSLATE = register(new BlockType(971, "cobbled_deepslate", "Cobbled Deepslate", 3.5F, 64, true, true, BlockStateLoader.getBlockShapes("cobbled_deepslate")));
    public static final BlockType COBBLED_DEEPSLATE_STAIRS = register(new BlockType(972, "cobbled_deepslate_stairs", "Cobbled Deepslate Stairs", 0F, 64, true, true, BlockStateLoader.getBlockShapes("cobbled_deepslate_stairs")));
    public static final BlockType COBBLED_DEEPSLATE_SLAB = register(new BlockType(973, "cobbled_deepslate_slab", "Cobbled Deepslate Slab", 0F, 64, true, true, BlockStateLoader.getBlockShapes("cobbled_deepslate_slab")));
    public static final BlockType COBBLED_DEEPSLATE_WALL = register(new BlockType(974, "cobbled_deepslate_wall", "Cobbled Deepslate Wall", 0F, 64, true, true, BlockStateLoader.getBlockShapes("cobbled_deepslate_wall")));
    public static final BlockType POLISHED_DEEPSLATE = register(new BlockType(975, "polished_deepslate", "Polished Deepslate", 0F, 64, true, true, BlockStateLoader.getBlockShapes("polished_deepslate")));
    public static final BlockType POLISHED_DEEPSLATE_STAIRS = register(new BlockType(976, "polished_deepslate_stairs", "Polished Deepslate Stairs", 0F, 64, true, true, BlockStateLoader.getBlockShapes("polished_deepslate_stairs")));
    public static final BlockType POLISHED_DEEPSLATE_SLAB = register(new BlockType(977, "polished_deepslate_slab", "Polished Deepslate Slab", 0F, 64, true, true, BlockStateLoader.getBlockShapes("polished_deepslate_slab")));
    public static final BlockType POLISHED_DEEPSLATE_WALL = register(new BlockType(978, "polished_deepslate_wall", "Polished Deepslate Wall", 0F, 64, true, true, BlockStateLoader.getBlockShapes("polished_deepslate_wall")));
    public static final BlockType DEEPSLATE_TILES = register(new BlockType(979, "deepslate_tiles", "Deepslate Tiles", 0F, 64, true, true, BlockStateLoader.getBlockShapes("deepslate_tiles")));
    public static final BlockType DEEPSLATE_TILE_STAIRS = register(new BlockType(980, "deepslate_tile_stairs", "Deepslate Tile Stairs", 0F, 64, true, true, BlockStateLoader.getBlockShapes("deepslate_tile_stairs")));
    public static final BlockType DEEPSLATE_TILE_SLAB = register(new BlockType(981, "deepslate_tile_slab", "Deepslate Tile Slab", 0F, 64, true, true, BlockStateLoader.getBlockShapes("deepslate_tile_slab")));
    public static final BlockType DEEPSLATE_TILE_WALL = register(new BlockType(982, "deepslate_tile_wall", "Deepslate Tile Wall", 0F, 64, true, true, BlockStateLoader.getBlockShapes("deepslate_tile_wall")));
    public static final BlockType DEEPSLATE_BRICKS = register(new BlockType(983, "deepslate_bricks", "Deepslate Bricks", 0F, 64, true, true, BlockStateLoader.getBlockShapes("deepslate_bricks")));
    public static final BlockType DEEPSLATE_BRICK_STAIRS = register(new BlockType(984, "deepslate_brick_stairs", "Deepslate Brick Stairs", 0F, 64, true, true, BlockStateLoader.getBlockShapes("deepslate_brick_stairs")));
    public static final BlockType DEEPSLATE_BRICK_SLAB = register(new BlockType(985, "deepslate_brick_slab", "Deepslate Brick Slab", 0F, 64, true, true, BlockStateLoader.getBlockShapes("deepslate_brick_slab")));
    public static final BlockType DEEPSLATE_BRICK_WALL = register(new BlockType(986, "deepslate_brick_wall", "Deepslate Brick Wall", 0F, 64, true, true, BlockStateLoader.getBlockShapes("deepslate_brick_wall")));
    public static final BlockType CHISELED_DEEPSLATE = register(new BlockType(987, "chiseled_deepslate", "Chiseled Deepslate", 0F, 64, true, true, BlockStateLoader.getBlockShapes("chiseled_deepslate")));
    public static final BlockType CRACKED_DEEPSLATE_BRICKS = register(new BlockType(988, "cracked_deepslate_bricks", "Cracked Deepslate Bricks", 0F, 64, true, true, BlockStateLoader.getBlockShapes("cracked_deepslate_bricks")));
    public static final BlockType CRACKED_DEEPSLATE_TILES = register(new BlockType(989, "cracked_deepslate_tiles", "Cracked Deepslate Tiles", 0F, 64, true, true, BlockStateLoader.getBlockShapes("cracked_deepslate_tiles")));
    public static final BlockType INFESTED_DEEPSLATE = register(new BlockType(990, "infested_deepslate", "Infested Deepslate", 0F, 64, true, false, BlockStateLoader.getBlockShapes("infested_deepslate")));
    public static final BlockType SMOOTH_BASALT = register(new BlockType(991, "smooth_basalt", "Smooth Basalt", 0F, 64, true, true, BlockStateLoader.getBlockShapes("smooth_basalt")));
    public static final BlockType RAW_IRON_BLOCK = register(new BlockType(992, "raw_iron_block", "Block of Raw Iron", 5F, 64, true, true, BlockStateLoader.getBlockShapes("raw_iron_block")));
    public static final BlockType RAW_COPPER_BLOCK = register(new BlockType(993, "raw_copper_block", "Block of Raw Copper", 5F, 64, true, true, BlockStateLoader.getBlockShapes("raw_copper_block")));
    public static final BlockType RAW_GOLD_BLOCK = register(new BlockType(994, "raw_gold_block", "Block of Raw Gold", 5F, 64, true, true, BlockStateLoader.getBlockShapes("raw_gold_block")));
    public static final BlockType POTTED_AZALEA_BUSH = register(new BlockType(995, "potted_azalea_bush", "Potted Azalea", 0F, 64, true, false, BlockStateLoader.getBlockShapes("potted_azalea_bush")));
    public static final BlockType POTTED_FLOWERING_AZALEA_BUSH = register(new BlockType(996, "potted_flowering_azalea_bush", "Potted Flowering Azalea", 0F, 64, true, false, BlockStateLoader.getBlockShapes("potted_flowering_azalea_bush")));
    public static final BlockType OCHRE_FROGLIGHT = register(new BlockType(997, "ochre_froglight", "Ochre Froglight", 0.3F, 64, true, false, BlockStateLoader.getBlockShapes("ochre_froglight")));
    public static final BlockType VERDANT_FROGLIGHT = register(new BlockType(998, "verdant_froglight", "Verdant Froglight", 0.3F, 64, true, false, BlockStateLoader.getBlockShapes("verdant_froglight")));
    public static final BlockType PEARLESCENT_FROGLIGHT = register(new BlockType(999, "pearlescent_froglight", "Pearlescent Froglight", 0.3F, 64, true, false, BlockStateLoader.getBlockShapes("pearlescent_froglight")));
    public static final BlockType FROGSPAWN = register(new BlockType(1000, "frogspawn", "Frogspawn", 0F, 64, true, false, BlockStateLoader.getBlockShapes("frogspawn")));
    public static final BlockType REINFORCED_DEEPSLATE = register(new BlockType(1001, "reinforced_deepslate", "Reinforced Deepslate", 55F, 64, true, false, BlockStateLoader.getBlockShapes("reinforced_deepslate")));
    public static final BlockType DECORATED_POT = register(new BlockType(1002, "decorated_pot", "Decorated Pot", 0F, 1, true, false, BlockStateLoader.getBlockShapes("decorated_pot")));

    public static BlockType register(BlockType blockType) {
        VALUES.add(blockType);
        return blockType;
    }

    public static BlockType getById(int id) {
        for (var blockType : VALUES) {
            if (blockType.id() == id) {
                return blockType;
            }
        }

        return null;
    }

    public static BlockType getByMcName(String mcName) {
        for (var blockType : VALUES) {
            if (("minecraft:" + blockType.name()).equals(mcName)) {
                return blockType;
            }
        }

        return null;
    }

    public boolean isFluid() {
        return this == WATER || this == LAVA;
    }
}
