syntax = "proto3";

option java_package = "com.soulfiremc.grpc.generated";
option java_multiple_files = true;

package soulfire.v1;

import "soulfire/common.proto";

message InstanceConfig {
  repeated SettingsNamespace settings = 1;
  repeated MinecraftAccountProto accounts = 2;
  repeated ProxyProto proxies = 3;
}

message InstanceCreateRequest {
  string friendlyName = 1;
}

message InstanceCreateResponse {
  string id = 1;
}

message InstanceDeleteRequest {
  string id = 1;
}

message InstanceDeleteResponse {
}

enum InstanceState {
  STARTING = 0;
  RUNNING = 1;
  PAUSED = 2;
  STOPPING = 3;
  STOPPED = 4;
}

message InstanceListRequest {
}

message InstanceListResponse {
  message Instance {
    string id = 1;
    string friendlyName = 2;
    InstanceState state = 3;
  }

  repeated Instance instances = 1;
}

message InstancePermissionState {
  InstancePermission instancePermission = 1;
  bool granted = 2;
}

message InstanceInfoRequest {
  string id = 1;
}

message InstanceInfoResponse {
  string friendlyName = 1;
  InstanceConfig config = 2;
  InstanceState state = 3;
  repeated InstancePermissionState instancePermissions = 4;
}

message InstanceUpdateFriendlyNameRequest {
  string id = 1;
  string friendlyName = 2;
}

message InstanceUpdateFriendlyNameResponse {
}

message InstanceUpdateConfigRequest {
  string id = 1;
  InstanceConfig config = 2;
}

message InstanceUpdateConfigResponse {
}

message InstanceStateChangeRequest {
  string id = 1;
  InstanceState state = 2;
}

message InstanceStateChangeResponse {
}

service InstanceService {
  rpc createInstance(InstanceCreateRequest) returns (InstanceCreateResponse);
  rpc deleteInstance(InstanceDeleteRequest) returns (InstanceDeleteResponse);
  rpc listInstances(InstanceListRequest) returns (InstanceListResponse);
  rpc getInstanceInfo(InstanceInfoRequest) returns (InstanceInfoResponse);
  rpc updateInstanceFriendlyName(InstanceUpdateFriendlyNameRequest) returns (InstanceUpdateFriendlyNameResponse);
  rpc updateInstanceConfig(InstanceUpdateConfigRequest) returns (InstanceUpdateConfigResponse);
  rpc changeInstanceState(InstanceStateChangeRequest) returns (InstanceStateChangeResponse);
}
